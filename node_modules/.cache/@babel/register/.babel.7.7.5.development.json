{
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar express = require(\"express\");\n\nvar config = require(\"dotenv\");\n\nvar bodyParser = require(\"body-parser\");\n\nvar flash = require(\"express-flash\");\n\nvar session = require(\"express-session\");\n\nvar cors = require(\"cors\");\n\nvar cookieParser = require('cookie-parser');\n\nvar app = express();\nconfig.config();\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\napp.use(bodyParser.json());\napp.set('trust proxy', 1);\napp.use(session({\n  secret: \"bimatkhongthebatmy\",\n  resave: false,\n  saveUninitialized: true,\n  cookie: {\n    secure: false\n  }\n}));\napp.use(cookieParser());\napp.use(cors());\napp.use(flash()); // =========outsite==================\n\nvar nguoidung = require(\"./apps/routers/index\");\n\nvar dangnhap = require(\"./apps/routers/dangnhapRouter\");\n\nvar index = require(\"./apps/routers/outsite/indexOutsiteR\");\n\nvar forum = require('./apps/routers/outsite/forumsRoute');\n\nvar register = require('./apps/routers/outsite/dangKyOusiteR');\n\nvar course = require('./apps/routers/outsite/khoaHocOusite');\n\nvar canhanOutsite = require(\"./apps/routers/outsite/taikhoancanhanOutR\");\n\nvar baiviet = require(\"./apps/routers/outsite/baivietOutRouter\"); // =============admin=====================\n\n\nvar Admin = require(\"./apps/routers/AdminRouter\");\n\nvar canhan = require(\"./apps/routers/taikhoancanhanroute\");\n\nvar khoahoc = require(\"./apps/routers/khoaHocRoute\");\n\nvar dangky = require(\"./apps/routers/dangKyRoute\");\n\nvar giangvien = require(\"./apps/routers/giangVienRoute\");\n\nvar hocvien = require(\"./apps/routers/hocVienRoute\");\n\nvar lophoc = require(\"./apps/routers/lopHocRoute\");\n\nvar phonghoc = require(\"./apps/routers/phongHocRoute\");\n\nvar phanquyen = require(\"./apps/routers/phanquyenRoute\");\n\nvar diendan = require(\"./apps/routers/dienDanroute\");\n\nvar taikhoan = require(\"./apps/routers/taiKhoanroute\");\n\nvar thoikhoabieu = require(\"./apps/routers/thoiKhoaBieuRoute\");\n\nvar AbaiViet = require(\"./apps/routers/baiVietRouter\");\n\nvar Achuyenmuc = require(\"./apps/routers/chuyenmucRouter\"); // duong dan tuyet doi\n\n\napp.set(\"views\", __dirname + \"/apps/views\");\napp.set(\"view engine\", \"ejs\");\napp.use(express[\"static\"](__dirname + \"/public\")); // Router\n\napp.use(nguoidung);\napp.use(\"/dangnhap\", dangnhap);\napp.use(index);\napp.use(\"/forum\", forum);\napp.use(\"/baiviet\", baiviet);\napp.use(register);\napp.use(\"/course\", course);\napp.use(\"/taikhoan/\", canhanOutsite); //app.use(admin);\n\napp.use(\"/admin/index\", Admin);\napp.use(\"/admin/khoahoc\", khoahoc);\napp.use(\"/admin/dangky\", dangky);\napp.use(\"/admin/giangvien\", giangvien);\napp.use(\"/admin/hocvien\", hocvien);\napp.use(\"/admin/lophoc\", lophoc);\napp.use(\"/admin/phonghoc\", phonghoc);\napp.use(\"/admin/phanquyen\", phanquyen);\napp.use(\"/admin/diendan\", diendan);\napp.use(\"/admin/taikhoan\", taikhoan);\napp.use(\"/admin/canhan\", canhan);\napp.use(\"/admin/thoikhoabieu\", thoikhoabieu);\napp.use(\"/admin/baiviet\", AbaiViet);\napp.use(\"/admin/chuyenmuc\", Achuyenmuc); ///==============ket noi port ====================\n\nvar port = process.env.PORT || 3000;\napp.listen(port, function () {\n  console.log(\"Server is running on PORT \".concat(port));\n});\nvar _default = app;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "config",
        "bodyParser",
        "flash",
        "session",
        "cors",
        "cookieParser",
        "app",
        "use",
        "urlencoded",
        "extended",
        "json",
        "set",
        "secret",
        "resave",
        "saveUninitialized",
        "cookie",
        "secure",
        "nguoidung",
        "dangnhap",
        "index",
        "forum",
        "register",
        "course",
        "canhanOutsite",
        "baiviet",
        "Admin",
        "canhan",
        "khoahoc",
        "dangky",
        "giangvien",
        "hocvien",
        "lophoc",
        "phonghoc",
        "phanquyen",
        "diendan",
        "taikhoan",
        "thoikhoabieu",
        "AbaiViet",
        "Achuyenmuc",
        "__dirname",
        "port",
        "process",
        "env",
        "PORT",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,aAAD,CAAxB;;AACA,IAAIG,KAAK,GAAGH,OAAO,CAAC,eAAD,CAAnB;;AACA,IAAII,OAAO,GAAGJ,OAAO,CAAC,iBAAD,CAArB;;AACA,IAAIK,IAAI,GAAGL,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIM,YAAY,GAAGN,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAMO,GAAG,GAAGR,OAAO,EAAnB;AAEAE,MAAM,CAACA,MAAP;AACAM,GAAG,CAACC,GAAJ,CAAQN,UAAU,CAACO,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAH,GAAG,CAACC,GAAJ,CAAQN,UAAU,CAACS,IAAX,EAAR;AACAJ,GAAG,CAACK,GAAJ,CAAQ,aAAR,EAAuB,CAAvB;AACAL,GAAG,CAACC,GAAJ,CACEJ,OAAO,CAAC;AACNS,EAAAA,MAAM,EAAE,oBADF;AAENC,EAAAA,MAAM,EAAE,KAFF;AAGRC,EAAAA,iBAAiB,EAAE,IAHX;AAIRC,EAAAA,MAAM,EAAE;AAAEC,IAAAA,MAAM,EAAE;AAAV;AAJA,CAAD,CADT;AASAV,GAAG,CAACC,GAAJ,CAAQF,YAAY,EAApB;AACAC,GAAG,CAACC,GAAJ,CAAQH,IAAI,EAAZ;AACAE,GAAG,CAACC,GAAJ,CAAQL,KAAK,EAAb,E,CACA;;AACA,IAAIe,SAAS,GAAGlB,OAAO,CAAC,sBAAD,CAAvB;;AACA,IAAImB,QAAQ,GAAGnB,OAAO,CAAC,+BAAD,CAAtB;;AACA,IAAIoB,KAAK,GAAGpB,OAAO,CAAC,sCAAD,CAAnB;;AACA,IAAIqB,KAAK,GAAGrB,OAAO,CAAC,oCAAD,CAAnB;;AACA,IAAIsB,QAAQ,GAAGtB,OAAO,CAAC,sCAAD,CAAtB;;AACA,IAAIuB,MAAM,GAAGvB,OAAO,CAAC,sCAAD,CAApB;;AACA,IAAIwB,aAAa,GAAGxB,OAAO,CAAC,2CAAD,CAA3B;;AACA,IAAIyB,OAAO,GAAGzB,OAAO,CAAC,yCAAD,CAArB,C,CACA;;;AACA,IAAI0B,KAAK,GAAG1B,OAAO,CAAC,4BAAD,CAAnB;;AACA,IAAI2B,MAAM,GAAG3B,OAAO,CAAC,oCAAD,CAApB;;AACA,IAAI4B,OAAO,GAAG5B,OAAO,CAAC,6BAAD,CAArB;;AACA,IAAI6B,MAAM,GAAG7B,OAAO,CAAC,4BAAD,CAApB;;AACA,IAAI8B,SAAS,GAAG9B,OAAO,CAAC,+BAAD,CAAvB;;AACA,IAAI+B,OAAO,GAAG/B,OAAO,CAAC,6BAAD,CAArB;;AACA,IAAIgC,MAAM,GAAGhC,OAAO,CAAC,4BAAD,CAApB;;AACA,IAAIiC,QAAQ,GAAGjC,OAAO,CAAC,8BAAD,CAAtB;;AACA,IAAIkC,SAAS,GAAGlC,OAAO,CAAC,+BAAD,CAAvB;;AACA,IAAImC,OAAO,GAAGnC,OAAO,CAAC,6BAAD,CAArB;;AACA,IAAIoC,QAAQ,GAAGpC,OAAO,CAAC,8BAAD,CAAtB;;AACA,IAAIqC,YAAY,GAAGrC,OAAO,CAAC,kCAAD,CAA1B;;AACA,IAAIsC,QAAQ,GAAGtC,OAAO,CAAC,8BAAD,CAAtB;;AACA,IAAIuC,UAAU,GAAGvC,OAAO,CAAC,gCAAD,CAAxB,C,CAEA;;;AACAO,GAAG,CAACK,GAAJ,CAAQ,OAAR,EAAiB4B,SAAS,GAAG,aAA7B;AACAjC,GAAG,CAACK,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AAEAL,GAAG,CAACC,GAAJ,CAAQT,OAAO,UAAP,CAAeyC,SAAS,GAAG,SAA3B,CAAR,E,CACA;;AACAjC,GAAG,CAACC,GAAJ,CAAQU,SAAR;AACAX,GAAG,CAACC,GAAJ,CAAQ,WAAR,EAAqBW,QAArB;AACAZ,GAAG,CAACC,GAAJ,CAASY,KAAT;AACAb,GAAG,CAACC,GAAJ,CAAQ,QAAR,EAAkBa,KAAlB;AACAd,GAAG,CAACC,GAAJ,CAAQ,UAAR,EAAoBiB,OAApB;AACAlB,GAAG,CAACC,GAAJ,CAAQc,QAAR;AACAf,GAAG,CAACC,GAAJ,CAAQ,SAAR,EAAmBe,MAAnB;AACAhB,GAAG,CAACC,GAAJ,CAAQ,YAAR,EAAsBgB,aAAtB,E,CACA;;AACAjB,GAAG,CAACC,GAAJ,CAAQ,cAAR,EAAwBkB,KAAxB;AACAnB,GAAG,CAACC,GAAJ,CAAQ,gBAAR,EAA0BoB,OAA1B;AACArB,GAAG,CAACC,GAAJ,CAAQ,eAAR,EAAyBqB,MAAzB;AACAtB,GAAG,CAACC,GAAJ,CAAQ,kBAAR,EAA4BsB,SAA5B;AACAvB,GAAG,CAACC,GAAJ,CAAQ,gBAAR,EAA0BuB,OAA1B;AACAxB,GAAG,CAACC,GAAJ,CAAQ,eAAR,EAAyBwB,MAAzB;AACAzB,GAAG,CAACC,GAAJ,CAAQ,iBAAR,EAA2ByB,QAA3B;AACA1B,GAAG,CAACC,GAAJ,CAAQ,kBAAR,EAA4B0B,SAA5B;AACA3B,GAAG,CAACC,GAAJ,CAAQ,gBAAR,EAA0B2B,OAA1B;AACA5B,GAAG,CAACC,GAAJ,CAAQ,iBAAR,EAA2B4B,QAA3B;AACA7B,GAAG,CAACC,GAAJ,CAAQ,eAAR,EAAyBmB,MAAzB;AACApB,GAAG,CAACC,GAAJ,CAAQ,qBAAR,EAA+B6B,YAA/B;AACA9B,GAAG,CAACC,GAAJ,CAAQ,gBAAR,EAA0B8B,QAA1B;AACA/B,GAAG,CAACC,GAAJ,CAAQ,kBAAR,EAA4B+B,UAA5B,E,CAEA;;AAEA,IAAME,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AAEArC,GAAG,CAACsC,MAAJ,CAAWJ,IAAX,EAAiB,YAAM;AACrBK,EAAAA,OAAO,CAACC,GAAR,qCAAyCN,IAAzC;AACD,CAFD;eAGelC,G",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourcesContent": [
        "var express = require(\"express\");\r\nvar config = require(\"dotenv\");\r\nvar bodyParser = require(\"body-parser\");\r\nvar flash = require(\"express-flash\");\r\nvar session = require(\"express-session\");\r\nvar cors = require(\"cors\");\r\nvar cookieParser = require('cookie-parser')\r\nconst app = express();\r\n\r\nconfig.config();\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\napp.use(bodyParser.json());\r\napp.set('trust proxy', 1)\r\napp.use(\r\n  session({\r\n    secret: \"bimatkhongthebatmy\",\r\n    resave: false,\r\n  saveUninitialized: true,\r\n  cookie: { secure: false }\r\n  })\r\n);\r\n\r\napp.use(cookieParser());\r\napp.use(cors());\r\napp.use(flash());\r\n// =========outsite==================\r\nvar nguoidung = require(\"./apps/routers/index\");\r\nvar dangnhap = require(\"./apps/routers/dangnhapRouter\");\r\nvar index = require(\"./apps/routers/outsite/indexOutsiteR\");\r\nvar forum = require('./apps/routers/outsite/forumsRoute')\r\nvar register = require('./apps/routers/outsite/dangKyOusiteR')\r\nvar course = require('./apps/routers/outsite/khoaHocOusite')\r\nvar canhanOutsite = require(\"./apps/routers/outsite/taikhoancanhanOutR\");\r\nvar baiviet = require(\"./apps/routers/outsite/baivietOutRouter\");\r\n// =============admin=====================\r\nvar Admin = require(\"./apps/routers/AdminRouter\");\r\nvar canhan = require(\"./apps/routers/taikhoancanhanroute\");\r\nvar khoahoc = require(\"./apps/routers/khoaHocRoute\");\r\nvar dangky = require(\"./apps/routers/dangKyRoute\");\r\nvar giangvien = require(\"./apps/routers/giangVienRoute\");\r\nvar hocvien = require(\"./apps/routers/hocVienRoute\");\r\nvar lophoc = require(\"./apps/routers/lopHocRoute\");\r\nvar phonghoc = require(\"./apps/routers/phongHocRoute\");\r\nvar phanquyen = require(\"./apps/routers/phanquyenRoute\");\r\nvar diendan = require(\"./apps/routers/dienDanroute\");\r\nvar taikhoan = require(\"./apps/routers/taiKhoanroute\");\r\nvar thoikhoabieu = require(\"./apps/routers/thoiKhoaBieuRoute\");\r\nvar AbaiViet = require(\"./apps/routers/baiVietRouter\");\r\nvar Achuyenmuc = require(\"./apps/routers/chuyenmucRouter\");\r\n\r\n// duong dan tuyet doi\r\napp.set(\"views\", __dirname + \"/apps/views\");\r\napp.set(\"view engine\", \"ejs\");\r\n\r\napp.use(express.static(__dirname + \"/public\"));\r\n// Router\r\napp.use(nguoidung);\r\napp.use(\"/dangnhap\", dangnhap);\r\napp.use( index);\r\napp.use(\"/forum\", forum);\r\napp.use(\"/baiviet\", baiviet);\r\napp.use(register);\r\napp.use(\"/course\", course);\r\napp.use(\"/taikhoan/\", canhanOutsite);\r\n//app.use(admin);\r\napp.use(\"/admin/index\", Admin);\r\napp.use(\"/admin/khoahoc\", khoahoc);\r\napp.use(\"/admin/dangky\", dangky);\r\napp.use(\"/admin/giangvien\", giangvien);\r\napp.use(\"/admin/hocvien\", hocvien);\r\napp.use(\"/admin/lophoc\", lophoc);\r\napp.use(\"/admin/phonghoc\", phonghoc);\r\napp.use(\"/admin/phanquyen\", phanquyen);\r\napp.use(\"/admin/diendan\", diendan);\r\napp.use(\"/admin/taikhoan\", taikhoan);\r\napp.use(\"/admin/canhan\", canhan);\r\napp.use(\"/admin/thoikhoabieu\", thoikhoabieu);\r\napp.use(\"/admin/baiviet\", AbaiViet);\r\napp.use(\"/admin/chuyenmuc\", Achuyenmuc);\r\n\r\n///==============ket noi port ====================\r\n\r\nconst port = process.env.PORT || 3000;\r\n\r\napp.listen(port, () => {\r\n  console.log(`Server is running on PORT ${port}`);\r\n});\r\nexport default app;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1586965536619
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _express = require(\"express\");\n\nvar _multer = _interopRequireDefault(require(\"multer\"));\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _baivietService = _interopRequireDefault(require(\"../services/baivietService\"));\n\nvar Promise = require('bluebird');\n\nvar fs = Promise.promisifyAll(require('fs'));\nvar router = (0, _express.Router)(); //====================== router =================================//\n\nrouter.get(\"/contact\", function _callee(req, res) {\n  var user, baiviet;\n  return _regenerator[\"default\"].async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          user = [];\n\n          if (req.session.user) {\n            user = req.session.user;\n          }\n\n          _context.next = 4;\n          return _regenerator[\"default\"].awrap(_baivietService[\"default\"].getNew());\n\n        case 4:\n          baiviet = _context.sent;\n          res.render(\"../views/outsite/contact.ejs\", {\n            user: user,\n            baiviet: baiviet\n          });\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n}); // =========================forums============================\n//  add hinh ckeditor\n\nvar storage = _multer[\"default\"].diskStorage({\n  //folder upload -> public/upload\n  destination: 'public/uploadimg/ck/',\n  filename: function filename(req, file, cb) {\n    _crypto[\"default\"].pseudoRandomBytes(16, function (err, raw) {\n      if (err) return cb(err);\n      cb(null, Math.floor(Math.random() * 9000000000) + 1000000000 + _path[\"default\"].extname(file.originalname));\n    });\n  }\n});\n\nvar upload = (0, _multer[\"default\"])({\n  storage: storage\n}); //show all image in folder upload to json\n\nrouter.get('/files', function (req, res) {\n  var images = fs.readdirSync('public/uploadimg/ck/');\n  var sorted = [];\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = images[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var item = _step.value;\n\n      if (item.split('.').pop() === 'png' || item.split('.').pop() === 'jpg' || item.split('.').pop() === 'jpeg' || item.split('.').pop() === 'svg') {\n        var abc = {\n          \"image\": \"/uploadimg/ck/\" + item,\n          \"folder\": '/'\n        };\n        sorted.push(abc);\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  res.send(sorted);\n}); //upload image to folder upload\n\nrouter.post('/upload', upload.array('flFileUpload', 12), function (req, res, next) {\n  res.redirect('back');\n}); // when a random route is inputed\n//router.get('*', (req, res) => res.render(\"../views/outsite/index.ejs\"));\n//===================================== end =================================//\n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIlByb21pc2UiLCJyZXF1aXJlIiwiZnMiLCJwcm9taXNpZnlBbGwiLCJyb3V0ZXIiLCJnZXQiLCJyZXEiLCJyZXMiLCJ1c2VyIiwic2Vzc2lvbiIsImJhaXZpZXRTZXJ2aWNlIiwiZ2V0TmV3IiwiYmFpdmlldCIsInJlbmRlciIsInN0b3JhZ2UiLCJtdWx0ZXIiLCJkaXNrU3RvcmFnZSIsImRlc3RpbmF0aW9uIiwiZmlsZW5hbWUiLCJmaWxlIiwiY2IiLCJjcnlwdG8iLCJwc2V1ZG9SYW5kb21CeXRlcyIsImVyciIsInJhdyIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsInBhdGgiLCJleHRuYW1lIiwib3JpZ2luYWxuYW1lIiwidXBsb2FkIiwiaW1hZ2VzIiwicmVhZGRpclN5bmMiLCJzb3J0ZWQiLCJpdGVtIiwic3BsaXQiLCJwb3AiLCJhYmMiLCJwdXNoIiwic2VuZCIsInBvc3QiLCJhcnJheSIsIm5leHQiLCJyZWRpcmVjdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBdkI7O0FBRUEsSUFBTUMsRUFBRSxHQUFHRixPQUFPLENBQUNHLFlBQVIsQ0FBcUJGLE9BQU8sQ0FBQyxJQUFELENBQTVCLENBQVg7QUFFQSxJQUFJRyxNQUFNLEdBQUcsc0JBQWIsQyxDQUVBOztBQUVBQSxNQUFNLENBQUNDLEdBQVAsQ0FBVyxVQUFYLEVBQXVCLGlCQUFlQyxHQUFmLEVBQW9CQyxHQUFwQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDakJDLFVBQUFBLElBRGlCLEdBQ1YsRUFEVTs7QUFFckIsY0FBR0YsR0FBRyxDQUFDRyxPQUFKLENBQVlELElBQWYsRUFBb0I7QUFDbEJBLFlBQUFBLElBQUksR0FBR0YsR0FBRyxDQUFDRyxPQUFKLENBQVlELElBQW5CO0FBQ0Q7O0FBSm9CO0FBQUEsK0NBS0NFLDJCQUFlQyxNQUFmLEVBTEQ7O0FBQUE7QUFLZkMsVUFBQUEsT0FMZTtBQU1yQkwsVUFBQUEsR0FBRyxDQUFDTSxNQUFKLENBQVcsOEJBQVgsRUFBMkM7QUFBQ0wsWUFBQUEsSUFBSSxFQUFKQSxJQUFEO0FBQU9JLFlBQUFBLE9BQU8sRUFBUEE7QUFBUCxXQUEzQzs7QUFOcUI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsQ0FBdkIsRSxDQVVBO0FBRUE7O0FBQ0EsSUFBSUUsT0FBTyxHQUFHQyxtQkFBT0MsV0FBUCxDQUFtQjtBQUMvQjtBQUNBQyxFQUFBQSxXQUFXLEVBQUUsc0JBRmtCO0FBRy9CQyxFQUFBQSxRQUFRLEVBQUUsa0JBQVVaLEdBQVYsRUFBZWEsSUFBZixFQUFxQkMsRUFBckIsRUFBeUI7QUFDakNDLHVCQUFPQyxpQkFBUCxDQUF5QixFQUF6QixFQUE2QixVQUFVQyxHQUFWLEVBQWVDLEdBQWYsRUFBb0I7QUFDL0MsVUFBSUQsR0FBSixFQUFTLE9BQU9ILEVBQUUsQ0FBQ0csR0FBRCxDQUFUO0FBQ1RILE1BQUFBLEVBQUUsQ0FBQyxJQUFELEVBQU9LLElBQUksQ0FBQ0MsS0FBTCxDQUFXRCxJQUFJLENBQUNFLE1BQUwsS0FBYyxVQUF6QixJQUF1QyxVQUF2QyxHQUFvREMsaUJBQUtDLE9BQUwsQ0FBYVYsSUFBSSxDQUFDVyxZQUFsQixDQUEzRCxDQUFGO0FBQ0QsS0FIRDtBQUlEO0FBUjhCLENBQW5CLENBQWQ7O0FBVUEsSUFBSUMsTUFBTSxHQUFHLHdCQUFPO0FBQUVqQixFQUFBQSxPQUFPLEVBQUVBO0FBQVgsQ0FBUCxDQUFiLEMsQ0FHQTs7QUFDQVYsTUFBTSxDQUFDQyxHQUFQLENBQVcsUUFBWCxFQUFxQixVQUFVQyxHQUFWLEVBQWVDLEdBQWYsRUFBb0I7QUFDdkMsTUFBTXlCLE1BQU0sR0FBRzlCLEVBQUUsQ0FBQytCLFdBQUgsQ0FBZSxzQkFBZixDQUFmO0FBRUEsTUFBSUMsTUFBTSxHQUFHLEVBQWI7QUFIdUM7QUFBQTtBQUFBOztBQUFBO0FBSXZDLHlCQUFpQkYsTUFBakIsOEhBQXdCO0FBQUEsVUFBZkcsSUFBZTs7QUFDcEIsVUFBR0EsSUFBSSxDQUFDQyxLQUFMLENBQVcsR0FBWCxFQUFnQkMsR0FBaEIsT0FBMEIsS0FBMUIsSUFDQUYsSUFBSSxDQUFDQyxLQUFMLENBQVcsR0FBWCxFQUFnQkMsR0FBaEIsT0FBMEIsS0FEMUIsSUFFQUYsSUFBSSxDQUFDQyxLQUFMLENBQVcsR0FBWCxFQUFnQkMsR0FBaEIsT0FBMEIsTUFGMUIsSUFHQUYsSUFBSSxDQUFDQyxLQUFMLENBQVcsR0FBWCxFQUFnQkMsR0FBaEIsT0FBMEIsS0FIN0IsRUFHbUM7QUFDL0IsWUFBSUMsR0FBRyxHQUFHO0FBQ0osbUJBQVUsbUJBQWlCSCxJQUR2QjtBQUVKLG9CQUFXO0FBRlAsU0FBVjtBQUlBRCxRQUFBQSxNQUFNLENBQUNLLElBQVAsQ0FBWUQsR0FBWjtBQUNIO0FBQ0o7QUFmc0M7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFnQnZDL0IsRUFBQUEsR0FBRyxDQUFDaUMsSUFBSixDQUFTTixNQUFUO0FBQ0QsQ0FqQkQsRSxDQWtCQTs7QUFDQTlCLE1BQU0sQ0FBQ3FDLElBQVAsQ0FBWSxTQUFaLEVBQXVCVixNQUFNLENBQUNXLEtBQVAsQ0FBYSxjQUFiLEVBQTZCLEVBQTdCLENBQXZCLEVBQXlELFVBQVVwQyxHQUFWLEVBQWVDLEdBQWYsRUFBb0JvQyxJQUFwQixFQUEwQjtBQUMvRXBDLEVBQUFBLEdBQUcsQ0FBQ3FDLFFBQUosQ0FBYSxNQUFiO0FBQ0gsQ0FGRCxFLENBSUE7QUFDQTtBQUNBOztBQUNBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIxQyxNQUFqQiIsInNvdXJjZVJvb3QiOiJEOlxcTHVhblZhblxcTHVhblZhbkQyXFx0cnVuZ3RhbV9sYW40XFxhcHBzXFxyb3V0ZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyIH0gZnJvbSBcImV4cHJlc3NcIjtcclxuaW1wb3J0IG11bHRlciBmcm9tIFwibXVsdGVyXCJcclxuaW1wb3J0IGNyeXB0byBmcm9tIFwiY3J5cHRvXCJcclxuaW1wb3J0IHBhdGggZnJvbSBcInBhdGhcIlxyXG5pbXBvcnQgYmFpdmlldFNlcnZpY2UgZnJvbSBcIi4uL3NlcnZpY2VzL2JhaXZpZXRTZXJ2aWNlXCJcclxuY29uc3QgUHJvbWlzZSA9IHJlcXVpcmUoJ2JsdWViaXJkJyk7XHJcblxyXG5jb25zdCBmcyA9IFByb21pc2UucHJvbWlzaWZ5QWxsKHJlcXVpcmUoJ2ZzJykpO1xyXG5cclxudmFyIHJvdXRlciA9IFJvdXRlcigpO1xyXG5cclxuLy89PT09PT09PT09PT09PT09PT09PT09IHJvdXRlciA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0vL1xyXG5cclxucm91dGVyLmdldChcIi9jb250YWN0XCIsIGFzeW5jIGZ1bmN0aW9uKHJlcSwgcmVzKSB7XHJcbiAgbGV0IHVzZXIgPSBbXVxyXG4gIGlmKHJlcS5zZXNzaW9uLnVzZXIpe1xyXG4gICAgdXNlciA9IHJlcS5zZXNzaW9uLnVzZXJcclxuICB9ICAgIFxyXG4gIGNvbnN0IGJhaXZpZXQgPSBhd2FpdCBiYWl2aWV0U2VydmljZS5nZXROZXcoKTtcclxuICByZXMucmVuZGVyKFwiLi4vdmlld3Mvb3V0c2l0ZS9jb250YWN0LmVqc1wiLCB7dXNlciAsYmFpdmlldH0pO1xyXG59KTtcclxuXHJcblxyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09Zm9ydW1zPT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5cclxuLy8gIGFkZCBoaW5oIGNrZWRpdG9yXHJcbnZhciBzdG9yYWdlID0gbXVsdGVyLmRpc2tTdG9yYWdlKHtcclxuICAvL2ZvbGRlciB1cGxvYWQgLT4gcHVibGljL3VwbG9hZFxyXG4gIGRlc3RpbmF0aW9uOiAncHVibGljL3VwbG9hZGltZy9jay8nLFxyXG4gIGZpbGVuYW1lOiBmdW5jdGlvbiAocmVxLCBmaWxlLCBjYikge1xyXG4gICAgY3J5cHRvLnBzZXVkb1JhbmRvbUJ5dGVzKDE2LCBmdW5jdGlvbiAoZXJyLCByYXcpIHtcclxuICAgICAgaWYgKGVycikgcmV0dXJuIGNiKGVycilcclxuICAgICAgY2IobnVsbCwgTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpKjkwMDAwMDAwMDApICsgMTAwMDAwMDAwMCArIHBhdGguZXh0bmFtZShmaWxlLm9yaWdpbmFsbmFtZSkpXHJcbiAgICB9KVxyXG4gIH1cclxufSlcclxudmFyIHVwbG9hZCA9IG11bHRlcih7IHN0b3JhZ2U6IHN0b3JhZ2UgfSk7XHJcblxyXG5cclxuLy9zaG93IGFsbCBpbWFnZSBpbiBmb2xkZXIgdXBsb2FkIHRvIGpzb25cclxucm91dGVyLmdldCgnL2ZpbGVzJywgZnVuY3Rpb24gKHJlcSwgcmVzKSB7XHJcbiAgY29uc3QgaW1hZ2VzID0gZnMucmVhZGRpclN5bmMoJ3B1YmxpYy91cGxvYWRpbWcvY2svJylcclxuICBcclxuICB2YXIgc29ydGVkID0gW11cclxuICBmb3IgKGxldCBpdGVtIG9mIGltYWdlcyl7XHJcbiAgICAgIGlmKGl0ZW0uc3BsaXQoJy4nKS5wb3AoKSA9PT0gJ3BuZydcclxuICAgICAgfHwgaXRlbS5zcGxpdCgnLicpLnBvcCgpID09PSAnanBnJ1xyXG4gICAgICB8fCBpdGVtLnNwbGl0KCcuJykucG9wKCkgPT09ICdqcGVnJ1xyXG4gICAgICB8fCBpdGVtLnNwbGl0KCcuJykucG9wKCkgPT09ICdzdmcnKXtcclxuICAgICAgICAgIHZhciBhYmMgPSB7XHJcbiAgICAgICAgICAgICAgICBcImltYWdlXCIgOiBcIi91cGxvYWRpbWcvY2svXCIraXRlbSxcclxuICAgICAgICAgICAgICAgIFwiZm9sZGVyXCIgOiAnLydcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIHNvcnRlZC5wdXNoKGFiYylcclxuICAgICAgfVxyXG4gIH1cclxuICByZXMuc2VuZChzb3J0ZWQpO1xyXG59KVxyXG4vL3VwbG9hZCBpbWFnZSB0byBmb2xkZXIgdXBsb2FkXHJcbnJvdXRlci5wb3N0KCcvdXBsb2FkJywgdXBsb2FkLmFycmF5KCdmbEZpbGVVcGxvYWQnLCAxMiksIGZ1bmN0aW9uIChyZXEsIHJlcywgbmV4dCkge1xyXG4gICAgcmVzLnJlZGlyZWN0KCdiYWNrJylcclxufSk7XHJcblxyXG4vLyB3aGVuIGEgcmFuZG9tIHJvdXRlIGlzIGlucHV0ZWRcclxuLy9yb3V0ZXIuZ2V0KCcqJywgKHJlcSwgcmVzKSA9PiByZXMucmVuZGVyKFwiLi4vdmlld3Mvb3V0c2l0ZS9pbmRleC5lanNcIikpO1xyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gZW5kID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PS8vXHJcbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "Promise",
        "require",
        "fs",
        "promisifyAll",
        "router",
        "get",
        "req",
        "res",
        "user",
        "session",
        "baivietService",
        "getNew",
        "baiviet",
        "render",
        "storage",
        "multer",
        "diskStorage",
        "destination",
        "filename",
        "file",
        "cb",
        "crypto",
        "pseudoRandomBytes",
        "err",
        "raw",
        "Math",
        "floor",
        "random",
        "path",
        "extname",
        "originalname",
        "upload",
        "images",
        "readdirSync",
        "sorted",
        "item",
        "split",
        "pop",
        "abc",
        "push",
        "send",
        "post",
        "array",
        "next",
        "redirect",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA,IAAMA,OAAO,GAAGC,OAAO,CAAC,UAAD,CAAvB;;AAEA,IAAMC,EAAE,GAAGF,OAAO,CAACG,YAAR,CAAqBF,OAAO,CAAC,IAAD,CAA5B,CAAX;AAEA,IAAIG,MAAM,GAAG,sBAAb,C,CAEA;;AAEAA,MAAM,CAACC,GAAP,CAAW,UAAX,EAAuB,iBAAeC,GAAf,EAAoBC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBC,UAAAA,IADiB,GACV,EADU;;AAErB,cAAGF,GAAG,CAACG,OAAJ,CAAYD,IAAf,EAAoB;AAClBA,YAAAA,IAAI,GAAGF,GAAG,CAACG,OAAJ,CAAYD,IAAnB;AACD;;AAJoB;AAAA,+CAKCE,2BAAeC,MAAf,EALD;;AAAA;AAKfC,UAAAA,OALe;AAMrBL,UAAAA,GAAG,CAACM,MAAJ,CAAW,8BAAX,EAA2C;AAACL,YAAAA,IAAI,EAAJA,IAAD;AAAOI,YAAAA,OAAO,EAAPA;AAAP,WAA3C;;AANqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB,E,CAUA;AAEA;;AACA,IAAIE,OAAO,GAAGC,mBAAOC,WAAP,CAAmB;AAC/B;AACAC,EAAAA,WAAW,EAAE,sBAFkB;AAG/BC,EAAAA,QAAQ,EAAE,kBAAUZ,GAAV,EAAea,IAAf,EAAqBC,EAArB,EAAyB;AACjCC,uBAAOC,iBAAP,CAAyB,EAAzB,EAA6B,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAC/C,UAAID,GAAJ,EAAS,OAAOH,EAAE,CAACG,GAAD,CAAT;AACTH,MAAAA,EAAE,CAAC,IAAD,EAAOK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,UAAzB,IAAuC,UAAvC,GAAoDC,iBAAKC,OAAL,CAAaV,IAAI,CAACW,YAAlB,CAA3D,CAAF;AACD,KAHD;AAID;AAR8B,CAAnB,CAAd;;AAUA,IAAIC,MAAM,GAAG,wBAAO;AAAEjB,EAAAA,OAAO,EAAEA;AAAX,CAAP,CAAb,C,CAGA;;AACAV,MAAM,CAACC,GAAP,CAAW,QAAX,EAAqB,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AACvC,MAAMyB,MAAM,GAAG9B,EAAE,CAAC+B,WAAH,CAAe,sBAAf,CAAf;AAEA,MAAIC,MAAM,GAAG,EAAb;AAHuC;AAAA;AAAA;;AAAA;AAIvC,yBAAiBF,MAAjB,8HAAwB;AAAA,UAAfG,IAAe;;AACpB,UAAGA,IAAI,CAACC,KAAL,CAAW,GAAX,EAAgBC,GAAhB,OAA0B,KAA1B,IACAF,IAAI,CAACC,KAAL,CAAW,GAAX,EAAgBC,GAAhB,OAA0B,KAD1B,IAEAF,IAAI,CAACC,KAAL,CAAW,GAAX,EAAgBC,GAAhB,OAA0B,MAF1B,IAGAF,IAAI,CAACC,KAAL,CAAW,GAAX,EAAgBC,GAAhB,OAA0B,KAH7B,EAGmC;AAC/B,YAAIC,GAAG,GAAG;AACJ,mBAAU,mBAAiBH,IADvB;AAEJ,oBAAW;AAFP,SAAV;AAIAD,QAAAA,MAAM,CAACK,IAAP,CAAYD,GAAZ;AACH;AACJ;AAfsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBvC/B,EAAAA,GAAG,CAACiC,IAAJ,CAASN,MAAT;AACD,CAjBD,E,CAkBA;;AACA9B,MAAM,CAACqC,IAAP,CAAY,SAAZ,EAAuBV,MAAM,CAACW,KAAP,CAAa,cAAb,EAA6B,EAA7B,CAAvB,EAAyD,UAAUpC,GAAV,EAAeC,GAAf,EAAoBoC,IAApB,EAA0B;AAC/EpC,EAAAA,GAAG,CAACqC,QAAJ,CAAa,MAAb;AACH,CAFD,E,CAIA;AACA;AACA;;AACAC,MAAM,CAACC,OAAP,GAAiB1C,MAAjB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
      "sourcesContent": [
        "import { Router } from \"express\";\r\nimport multer from \"multer\"\r\nimport crypto from \"crypto\"\r\nimport path from \"path\"\r\nimport baivietService from \"../services/baivietService\"\r\nconst Promise = require('bluebird');\r\n\r\nconst fs = Promise.promisifyAll(require('fs'));\r\n\r\nvar router = Router();\r\n\r\n//====================== router =================================//\r\n\r\nrouter.get(\"/contact\", async function(req, res) {\r\n  let user = []\r\n  if(req.session.user){\r\n    user = req.session.user\r\n  }    \r\n  const baiviet = await baivietService.getNew();\r\n  res.render(\"../views/outsite/contact.ejs\", {user ,baiviet});\r\n});\r\n\r\n\r\n// =========================forums============================\r\n\r\n//  add hinh ckeditor\r\nvar storage = multer.diskStorage({\r\n  //folder upload -> public/upload\r\n  destination: 'public/uploadimg/ck/',\r\n  filename: function (req, file, cb) {\r\n    crypto.pseudoRandomBytes(16, function (err, raw) {\r\n      if (err) return cb(err)\r\n      cb(null, Math.floor(Math.random()*9000000000) + 1000000000 + path.extname(file.originalname))\r\n    })\r\n  }\r\n})\r\nvar upload = multer({ storage: storage });\r\n\r\n\r\n//show all image in folder upload to json\r\nrouter.get('/files', function (req, res) {\r\n  const images = fs.readdirSync('public/uploadimg/ck/')\r\n  \r\n  var sorted = []\r\n  for (let item of images){\r\n      if(item.split('.').pop() === 'png'\r\n      || item.split('.').pop() === 'jpg'\r\n      || item.split('.').pop() === 'jpeg'\r\n      || item.split('.').pop() === 'svg'){\r\n          var abc = {\r\n                \"image\" : \"/uploadimg/ck/\"+item,\r\n                \"folder\" : '/'\r\n          }\r\n          sorted.push(abc)\r\n      }\r\n  }\r\n  res.send(sorted);\r\n})\r\n//upload image to folder upload\r\nrouter.post('/upload', upload.array('flFileUpload', 12), function (req, res, next) {\r\n    res.redirect('back')\r\n});\r\n\r\n// when a random route is inputed\r\n//router.get('*', (req, res) => res.render(\"../views/outsite/index.ejs\"));\r\n//===================================== end =================================//\r\nmodule.exports = router;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1587478783775
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\services\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\services\\\\baivietService.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services\\baivietService.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services\\baivietService.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services\\baivietService.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services",
        "sourceFileName": "baivietService.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar database = require(\"../../Model/models\");\n\nvar baivietService =\n/*#__PURE__*/\nfunction () {\n  function baivietService() {\n    (0, _classCallCheck2[\"default\"])(this, baivietService);\n  }\n\n  (0, _createClass2[\"default\"])(baivietService, null, [{\n    key: \"getAll\",\n    value: function getAll() {\n      return _regenerator[\"default\"].async(function getAll$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regenerator[\"default\"].awrap(database.baiviet.sequelize.query(\"SELECT  baiviets.*,chuyenmucs.tenchuyenmuc FROM public.baiviets, public.chuyenmucs  where chuyenmucs.id = baiviets.id_chuyenmuc ORDER BY baiviets.id  DESC;\"));\n\n            case 3:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              throw _context.t0;\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"getOutsite\",\n    value: function getOutsite(limit) {\n      return _regenerator[\"default\"].async(function getOutsite$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regenerator[\"default\"].awrap(database.baiviet.findAll({\n                where: {\n                  trangthai: 1\n                },\n                order: [[\"id\", \"DESC\"]],\n                limit: limit\n              }));\n\n            case 3:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              throw _context2.t0;\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    } // Outsite\n\n  }, {\n    key: \"getNeWCM\",\n    value: function getNeWCM(limit, chuyenmuc) {\n      return _regenerator[\"default\"].async(function getNeWCM$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regenerator[\"default\"].awrap(database.baiviet.findAll({\n                where: {\n                  trangthai: 1,\n                  id_chuyenmuc: chuyenmuc\n                },\n                order: [[\"id\", \"DESC\"]],\n                limit: limit\n              }));\n\n            case 3:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 6:\n              _context3.prev = 6;\n              _context3.t0 = _context3[\"catch\"](0);\n              throw _context3.t0;\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"getACM\",\n    value: function getACM(chuyenmuc) {\n      var tk;\n      return _regenerator[\"default\"].async(function getACM$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return _regenerator[\"default\"].awrap(database.baiviet.sequelize.query(\"SELECT  * FROM public.baiviets  where id = (SELECT MAX(id) FROM baiviets WHERE trangthai =1 and id_chuyenmuc = '\" + chuyenmuc + \"')  \"));\n\n            case 3:\n              tk = _context4.sent;\n\n              if (!tk) {\n                _context4.next = 8;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", tk);\n\n            case 8:\n              return _context4.abrupt(\"return\", 0);\n\n            case 9:\n              _context4.next = 14;\n              break;\n\n            case 11:\n              _context4.prev = 11;\n              _context4.t0 = _context4[\"catch\"](0);\n              throw _context4.t0;\n\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 11]]);\n    }\n  }, {\n    key: \"getA\",\n    value: function getA(id) {\n      var tk;\n      return _regenerator[\"default\"].async(function getA$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return _regenerator[\"default\"].awrap(database.baiviet.sequelize.query(\"SELECT  baiviets.*,chuyenmucs.tenchuyenmuc FROM public.baiviets, public.chuyenmucs  where baiviets.id = \" + id + \" and chuyenmucs.id = baiviets.id_chuyenmuc\"));\n\n            case 3:\n              tk = _context5.sent;\n\n              if (!tk) {\n                _context5.next = 8;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", tk);\n\n            case 8:\n              return _context5.abrupt(\"return\", 0);\n\n            case 9:\n              _context5.next = 14;\n              break;\n\n            case 11:\n              _context5.prev = 11;\n              _context5.t0 = _context5[\"catch\"](0);\n              throw _context5.t0;\n\n            case 14:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 11]]);\n    }\n  }, {\n    key: \"getNew\",\n    value: function getNew() {\n      return _regenerator[\"default\"].async(function getNew$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return _regenerator[\"default\"].awrap(database.baiviet.sequelize.query(\"SELECT *\\n        FROM baiviets\\n        WHERE id = (SELECT MAX(id) FROM baiviets WHERE trangthai =1 ) \"));\n\n            case 3:\n              return _context6.abrupt(\"return\", _context6.sent);\n\n            case 6:\n              _context6.prev = 6;\n              _context6.t0 = _context6[\"catch\"](0);\n              throw _context6.t0;\n\n            case 9:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(id) {\n      return _regenerator[\"default\"].async(function _delete$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _context7.next = 3;\n              return _regenerator[\"default\"].awrap(database.baiviet.destroy({\n                where: {\n                  id: id\n                }\n              }));\n\n            case 3:\n              return _context7.abrupt(\"return\", _context7.sent);\n\n            case 6:\n              _context7.prev = 6;\n              _context7.t0 = _context7[\"catch\"](0);\n              throw _context7.t0;\n\n            case 9:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"Save\",\n    value: function Save(data) {\n      var tk;\n      return _regenerator[\"default\"].async(function Save$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              _context8.next = 3;\n              return _regenerator[\"default\"].awrap(database.baiviet.create(data));\n\n            case 3:\n              tk = _context8.sent;\n\n              if (!tk) {\n                _context8.next = 8;\n                break;\n              }\n\n              return _context8.abrupt(\"return\", tk);\n\n            case 8:\n              return _context8.abrupt(\"return\", 0);\n\n            case 9:\n              _context8.next = 14;\n              break;\n\n            case 11:\n              _context8.prev = 11;\n              _context8.t0 = _context8[\"catch\"](0);\n              throw _context8.t0;\n\n            case 14:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, null, [[0, 11]]);\n    }\n  }, {\n    key: \"Update\",\n    value: function Update(id, data) {\n      var tk, th;\n      return _regenerator[\"default\"].async(function Update$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.prev = 0;\n              _context9.next = 3;\n              return _regenerator[\"default\"].awrap(database.baiviet.findOne({\n                where: {\n                  id: id\n                }\n              }));\n\n            case 3:\n              tk = _context9.sent;\n\n              if (!tk) {\n                _context9.next = 9;\n                break;\n              }\n\n              _context9.next = 7;\n              return _regenerator[\"default\"].awrap(database.baiviet.update(data, {\n                where: {\n                  id: id\n                }\n              }));\n\n            case 7:\n              th = _context9.sent;\n              return _context9.abrupt(\"return\", th);\n\n            case 9:\n              return _context9.abrupt(\"return\", null);\n\n            case 12:\n              _context9.prev = 12;\n              _context9.t0 = _context9[\"catch\"](0);\n              throw _context9.t0;\n\n            case 15:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, null, null, [[0, 12]]);\n    }\n  }]);\n  return baivietService;\n}();\n\nmodule.exports = baivietService;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhaXZpZXRTZXJ2aWNlLmpzIl0sIm5hbWVzIjpbImRhdGFiYXNlIiwicmVxdWlyZSIsImJhaXZpZXRTZXJ2aWNlIiwiYmFpdmlldCIsInNlcXVlbGl6ZSIsInF1ZXJ5IiwibGltaXQiLCJmaW5kQWxsIiwid2hlcmUiLCJ0cmFuZ3RoYWkiLCJvcmRlciIsImNodXllbm11YyIsImlkX2NodXllbm11YyIsInRrIiwiaWQiLCJkZXN0cm95IiwiZGF0YSIsImNyZWF0ZSIsImZpbmRPbmUiLCJ1cGRhdGUiLCJ0aCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxJQUFJQSxRQUFRLEdBQUVDLE9BQU8sQ0FBQyxvQkFBRCxDQUFyQjs7SUFFTUMsYzs7Ozs7Ozs7Ozs7Ozs7OzttREFHYUYsUUFBUSxDQUFDRyxPQUFULENBQWlCQyxTQUFqQixDQUEyQkMsS0FBM0IsK0o7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0JBT09DLEs7Ozs7Ozs7bURBRVBOLFFBQVEsQ0FBQ0csT0FBVCxDQUFpQkksT0FBakIsQ0FBeUI7QUFDcENDLGdCQUFBQSxLQUFLLEVBQUU7QUFBRUMsa0JBQUFBLFNBQVMsRUFBRTtBQUFiLGlCQUQ2QjtBQUVwQ0MsZ0JBQUFBLEtBQUssRUFBRSxDQUFDLENBQUMsSUFBRCxFQUFPLE1BQVAsQ0FBRCxDQUY2QjtBQUdwQ0osZ0JBQUFBLEtBQUssRUFBRUE7QUFINkIsZUFBekIsQzs7Ozs7Ozs7Ozs7Ozs7OztNQVNqQjs7Ozs2QkFDc0JBLEssRUFBTUssUzs7Ozs7OzttREFFWFgsUUFBUSxDQUFDRyxPQUFULENBQWlCSSxPQUFqQixDQUF5QjtBQUNwQ0MsZ0JBQUFBLEtBQUssRUFBRTtBQUFFQyxrQkFBQUEsU0FBUyxFQUFFLENBQWI7QUFBaUJHLGtCQUFBQSxZQUFZLEVBQUNEO0FBQTlCLGlCQUQ2QjtBQUVwQ0QsZ0JBQUFBLEtBQUssRUFBRSxDQUFDLENBQUMsSUFBRCxFQUFPLE1BQVAsQ0FBRCxDQUY2QjtBQUdwQ0osZ0JBQUFBLEtBQUssRUFBRUE7QUFINkIsZUFBekIsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsyQkFTR0ssUzs7Ozs7Ozs7bURBRURYLFFBQVEsQ0FBQ0csT0FBVCxDQUFpQkMsU0FBakIsQ0FBMkJDLEtBQTNCLENBQ2IscUhBQW1ITSxTQUFuSCxTQURhLEM7OztBQUFYRSxjQUFBQSxFOzttQkFHQUEsRTs7Ozs7Z0RBQ0tBLEU7OztnREFFQSxDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt5QkFPS0MsRTs7Ozs7Ozs7bURBRUNkLFFBQVEsQ0FBQ0csT0FBVCxDQUFpQkMsU0FBakIsQ0FBMkJDLEtBQTNCLENBQ2IsNkdBQTZHUyxFQUE3RywrQ0FEYSxDOzs7QUFBWEQsY0FBQUEsRTs7bUJBR0FBLEU7Ozs7O2dEQUNLQSxFOzs7Z0RBRUEsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O21EQVFJYixRQUFRLENBQUNHLE9BQVQsQ0FBaUJDLFNBQWpCLENBQTJCQyxLQUEzQiwyRzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs0QkFTR1MsRTs7Ozs7OzttREFFSGQsUUFBUSxDQUFDRyxPQUFULENBQWlCWSxPQUFqQixDQUF5QjtBQUNwQ1AsZ0JBQUFBLEtBQUssRUFBRTtBQUFFTSxrQkFBQUEsRUFBRSxFQUFGQTtBQUFGO0FBRDZCLGVBQXpCLEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7eUJBT0NFLEk7Ozs7Ozs7O21EQUVDaEIsUUFBUSxDQUFDRyxPQUFULENBQWlCYyxNQUFqQixDQUF3QkQsSUFBeEIsQzs7O0FBQVhILGNBQUFBLEU7O21CQUNEQSxFOzs7OztnREFDTUEsRTs7O2dEQUVBLEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzJCQU9PQyxFLEVBQUlFLEk7Ozs7Ozs7O21EQUVMaEIsUUFBUSxDQUFDRyxPQUFULENBQWlCZSxPQUFqQixDQUF5QjtBQUN0Q1YsZ0JBQUFBLEtBQUssRUFBRTtBQUFFTSxrQkFBQUEsRUFBRSxFQUFGQTtBQUFGO0FBRCtCLGVBQXpCLEM7OztBQUFYRCxjQUFBQSxFOzttQkFHQUEsRTs7Ozs7O21EQUNhYixRQUFRLENBQUNHLE9BQVQsQ0FBaUJnQixNQUFqQixDQUF3QkgsSUFBeEIsRUFBOEI7QUFDM0NSLGdCQUFBQSxLQUFLLEVBQUU7QUFBRU0sa0JBQUFBLEVBQUUsRUFBRkE7QUFBRjtBQURvQyxlQUE5QixDOzs7QUFBWE0sY0FBQUEsRTtnREFHR0EsRTs7O2dEQUVGLEk7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQU9iQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJwQixjQUFqQiIsInNvdXJjZVJvb3QiOiJEOlxcTHVhblZhblxcTHVhblZhbkQyXFx0cnVuZ3RhbV9sYW40XFxhcHBzXFxzZXJ2aWNlcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBkYXRhYmFzZSA9cmVxdWlyZShcIi4uLy4uL01vZGVsL21vZGVsc1wiKTtcclxuXHJcbmNsYXNzIGJhaXZpZXRTZXJ2aWNlIHtcclxuICBzdGF0aWMgYXN5bmMgZ2V0QWxsKCkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgcmV0dXJuIGF3YWl0IGRhdGFiYXNlLmJhaXZpZXQuc2VxdWVsaXplLnF1ZXJ5KCAgICAgICAgXHJcbiAgICAgICAgYFNFTEVDVCAgYmFpdmlldHMuKixjaHV5ZW5tdWNzLnRlbmNodXllbm11YyBGUk9NIHB1YmxpYy5iYWl2aWV0cywgcHVibGljLmNodXllbm11Y3MgIHdoZXJlIGNodXllbm11Y3MuaWQgPSBiYWl2aWV0cy5pZF9jaHV5ZW5tdWMgT1JERVIgQlkgYmFpdmlldHMuaWQgIERFU0M7YFxyXG4gICAgICApO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHN0YXRpYyBhc3luYyBnZXRPdXRzaXRlKGxpbWl0KSB7XHJcbiAgICB0cnkge1xyXG4gICAgICByZXR1cm4gYXdhaXQgZGF0YWJhc2UuYmFpdmlldC5maW5kQWxsKHtcclxuICAgICAgICB3aGVyZTogeyB0cmFuZ3RoYWk6IDEgfSxcclxuICAgICAgICBvcmRlcjogW1tcImlkXCIsIFwiREVTQ1wiXV0sXHJcbiAgICAgICAgbGltaXQ6IGxpbWl0XHJcbiAgICAgIH0pO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG4gIC8vIE91dHNpdGVcclxuICBzdGF0aWMgYXN5bmMgZ2V0TmVXQ00obGltaXQsY2h1eWVubXVjKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICByZXR1cm4gYXdhaXQgZGF0YWJhc2UuYmFpdmlldC5maW5kQWxsKHtcclxuICAgICAgICB3aGVyZTogeyB0cmFuZ3RoYWk6IDEgLCBpZF9jaHV5ZW5tdWM6Y2h1eWVubXVjIH0sXHJcbiAgICAgICAgb3JkZXI6IFtbXCJpZFwiLCBcIkRFU0NcIl1dLFxyXG4gICAgICAgIGxpbWl0OiBsaW1pdFxyXG4gICAgICB9KTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG4gIH1cclxuICBzdGF0aWMgYXN5bmMgZ2V0QUNNKGNodXllbm11Yykge1xyXG4gICAgdHJ5IHtcclxuICAgICAgbGV0IHRrID0gYXdhaXQgZGF0YWJhc2UuYmFpdmlldC5zZXF1ZWxpemUucXVlcnkoXHJcbiAgICAgICAgYFNFTEVDVCAgKiBGUk9NIHB1YmxpYy5iYWl2aWV0cyAgd2hlcmUgaWQgPSAoU0VMRUNUIE1BWChpZCkgRlJPTSBiYWl2aWV0cyBXSEVSRSB0cmFuZ3RoYWkgPTEgYW5kIGlkX2NodXllbm11YyA9ICdgK2NodXllbm11YytgJykgIGBcclxuICAgICAgKTtcclxuICAgICAgaWYgKHRrKSB7XHJcbiAgICAgICAgcmV0dXJuIHRrO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJldHVybiAwO1xyXG4gICAgICB9XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHN0YXRpYyBhc3luYyBnZXRBKGlkKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICBsZXQgdGsgPSBhd2FpdCBkYXRhYmFzZS5iYWl2aWV0LnNlcXVlbGl6ZS5xdWVyeSggICAgICAgIFxyXG4gICAgICAgIGBTRUxFQ1QgIGJhaXZpZXRzLiosY2h1eWVubXVjcy50ZW5jaHV5ZW5tdWMgRlJPTSBwdWJsaWMuYmFpdmlldHMsIHB1YmxpYy5jaHV5ZW5tdWNzICB3aGVyZSBiYWl2aWV0cy5pZCA9IGAgKyBpZCArIGAgYW5kIGNodXllbm11Y3MuaWQgPSBiYWl2aWV0cy5pZF9jaHV5ZW5tdWNgXHJcbiAgICAgICk7XHJcbiAgICAgIGlmICh0aykge1xyXG4gICAgICAgIHJldHVybiB0aztcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICByZXR1cm4gMDtcclxuICAgICAgfVxyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHN0YXRpYyBhc3luYyBnZXROZXcoKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICByZXR1cm4gYXdhaXQgZGF0YWJhc2UuYmFpdmlldC5zZXF1ZWxpemUucXVlcnkoXHJcbiAgICAgICAgYFNFTEVDVCAqXHJcbiAgICAgICAgRlJPTSBiYWl2aWV0c1xyXG4gICAgICAgIFdIRVJFIGlkID0gKFNFTEVDVCBNQVgoaWQpIEZST00gYmFpdmlldHMgV0hFUkUgdHJhbmd0aGFpID0xICkgYFxyXG4gICAgICApO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHN0YXRpYyBhc3luYyBkZWxldGUoaWQpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgIHJldHVybiBhd2FpdCBkYXRhYmFzZS5iYWl2aWV0LmRlc3Ryb3koe1xyXG4gICAgICAgIHdoZXJlOiB7IGlkIH1cclxuICAgICAgfSk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9XHJcbiAgc3RhdGljIGFzeW5jIFNhdmUoZGF0YSkge1xyXG4gICAgdHJ5IHsgICAgIFxyXG4gICAgICBsZXQgdGsgPSBhd2FpdCBkYXRhYmFzZS5iYWl2aWV0LmNyZWF0ZShkYXRhKTtcclxuICAgICAgaWYodGspe1xyXG4gICAgICAgIHJldHVybiB0a1xyXG4gICAgICB9ZWxzZXtcclxuICAgICAgICByZXR1cm4gMFxyXG4gICAgICB9XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHN0YXRpYyBhc3luYyBVcGRhdGUoaWQsIGRhdGEpIHtcclxuICAgIHRyeSB7IFxyXG4gICAgICBsZXQgdGsgPSBhd2FpdCBkYXRhYmFzZS5iYWl2aWV0LmZpbmRPbmUoe1xyXG4gICAgICAgIHdoZXJlOiB7IGlkIH1cclxuICAgICAgfSk7IFxyXG4gICAgICBpZiAodGspIHsgICAgICAgXHJcbiAgICAgICAgbGV0IHRoID0gYXdhaXQgZGF0YWJhc2UuYmFpdmlldC51cGRhdGUoZGF0YSwge1xyXG4gICAgICAgICAgd2hlcmU6IHsgaWQgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiB0aDtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gbnVsbDtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBiYWl2aWV0U2VydmljZTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "baivietService.js"
      ],
      "names": [
        "database",
        "require",
        "baivietService",
        "baiviet",
        "sequelize",
        "query",
        "limit",
        "findAll",
        "where",
        "trangthai",
        "order",
        "chuyenmuc",
        "id_chuyenmuc",
        "tk",
        "id",
        "destroy",
        "data",
        "create",
        "findOne",
        "update",
        "th",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;AAAA,IAAIA,QAAQ,GAAEC,OAAO,CAAC,oBAAD,CAArB;;IAEMC,c;;;;;;;;;;;;;;;;mDAGaF,QAAQ,CAACG,OAAT,CAAiBC,SAAjB,CAA2BC,KAA3B,+J;;;;;;;;;;;;;;;;;;;+BAOOC,K;;;;;;;mDAEPN,QAAQ,CAACG,OAAT,CAAiBI,OAAjB,CAAyB;AACpCC,gBAAAA,KAAK,EAAE;AAAEC,kBAAAA,SAAS,EAAE;AAAb,iBAD6B;AAEpCC,gBAAAA,KAAK,EAAE,CAAC,CAAC,IAAD,EAAO,MAAP,CAAD,CAF6B;AAGpCJ,gBAAAA,KAAK,EAAEA;AAH6B,eAAzB,C;;;;;;;;;;;;;;;;MASjB;;;;6BACsBA,K,EAAMK,S;;;;;;;mDAEXX,QAAQ,CAACG,OAAT,CAAiBI,OAAjB,CAAyB;AACpCC,gBAAAA,KAAK,EAAE;AAAEC,kBAAAA,SAAS,EAAE,CAAb;AAAiBG,kBAAAA,YAAY,EAACD;AAA9B,iBAD6B;AAEpCD,gBAAAA,KAAK,EAAE,CAAC,CAAC,IAAD,EAAO,MAAP,CAAD,CAF6B;AAGpCJ,gBAAAA,KAAK,EAAEA;AAH6B,eAAzB,C;;;;;;;;;;;;;;;;;;;2BASGK,S;;;;;;;;mDAEDX,QAAQ,CAACG,OAAT,CAAiBC,SAAjB,CAA2BC,KAA3B,CACb,qHAAmHM,SAAnH,SADa,C;;;AAAXE,cAAAA,E;;mBAGAA,E;;;;;gDACKA,E;;;gDAEA,C;;;;;;;;;;;;;;;;;;;;yBAOKC,E;;;;;;;;mDAECd,QAAQ,CAACG,OAAT,CAAiBC,SAAjB,CAA2BC,KAA3B,CACb,6GAA6GS,EAA7G,+CADa,C;;;AAAXD,cAAAA,E;;mBAGAA,E;;;;;gDACKA,E;;;gDAEA,C;;;;;;;;;;;;;;;;;;;;;;;;;;;mDAQIb,QAAQ,CAACG,OAAT,CAAiBC,SAAjB,CAA2BC,KAA3B,2G;;;;;;;;;;;;;;;;;;;4BASGS,E;;;;;;;mDAEHd,QAAQ,CAACG,OAAT,CAAiBY,OAAjB,CAAyB;AACpCP,gBAAAA,KAAK,EAAE;AAAEM,kBAAAA,EAAE,EAAFA;AAAF;AAD6B,eAAzB,C;;;;;;;;;;;;;;;;;;;yBAOCE,I;;;;;;;;mDAEChB,QAAQ,CAACG,OAAT,CAAiBc,MAAjB,CAAwBD,IAAxB,C;;;AAAXH,cAAAA,E;;mBACDA,E;;;;;gDACMA,E;;;gDAEA,C;;;;;;;;;;;;;;;;;;;;2BAOOC,E,EAAIE,I;;;;;;;;mDAELhB,QAAQ,CAACG,OAAT,CAAiBe,OAAjB,CAAyB;AACtCV,gBAAAA,KAAK,EAAE;AAAEM,kBAAAA,EAAE,EAAFA;AAAF;AAD+B,eAAzB,C;;;AAAXD,cAAAA,E;;mBAGAA,E;;;;;;mDACab,QAAQ,CAACG,OAAT,CAAiBgB,MAAjB,CAAwBH,IAAxB,EAA8B;AAC3CR,gBAAAA,KAAK,EAAE;AAAEM,kBAAAA,EAAE,EAAFA;AAAF;AADoC,eAA9B,C;;;AAAXM,cAAAA,E;gDAGGA,E;;;gDAEF,I;;;;;;;;;;;;;;;;;;AAObC,MAAM,CAACC,OAAP,GAAiBpB,cAAjB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services",
      "sourcesContent": [
        "var database =require(\"../../Model/models\");\r\n\r\nclass baivietService {\r\n  static async getAll() {\r\n    try {\r\n      return await database.baiviet.sequelize.query(        \r\n        `SELECT  baiviets.*,chuyenmucs.tenchuyenmuc FROM public.baiviets, public.chuyenmucs  where chuyenmucs.id = baiviets.id_chuyenmuc ORDER BY baiviets.id  DESC;`\r\n      );\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  static async getOutsite(limit) {\r\n    try {\r\n      return await database.baiviet.findAll({\r\n        where: { trangthai: 1 },\r\n        order: [[\"id\", \"DESC\"]],\r\n        limit: limit\r\n      });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  // Outsite\r\n  static async getNeWCM(limit,chuyenmuc) {\r\n    try {\r\n      return await database.baiviet.findAll({\r\n        where: { trangthai: 1 , id_chuyenmuc:chuyenmuc },\r\n        order: [[\"id\", \"DESC\"]],\r\n        limit: limit\r\n      });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  static async getACM(chuyenmuc) {\r\n    try {\r\n      let tk = await database.baiviet.sequelize.query(\r\n        `SELECT  * FROM public.baiviets  where id = (SELECT MAX(id) FROM baiviets WHERE trangthai =1 and id_chuyenmuc = '`+chuyenmuc+`')  `\r\n      );\r\n      if (tk) {\r\n        return tk;\r\n      } else {\r\n        return 0;\r\n      }\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async getA(id) {\r\n    try {\r\n      let tk = await database.baiviet.sequelize.query(        \r\n        `SELECT  baiviets.*,chuyenmucs.tenchuyenmuc FROM public.baiviets, public.chuyenmucs  where baiviets.id = ` + id + ` and chuyenmucs.id = baiviets.id_chuyenmuc`\r\n      );\r\n      if (tk) {\r\n        return tk;\r\n      } else {\r\n        return 0;\r\n      }\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  static async getNew() {\r\n    try {\r\n      return await database.baiviet.sequelize.query(\r\n        `SELECT *\r\n        FROM baiviets\r\n        WHERE id = (SELECT MAX(id) FROM baiviets WHERE trangthai =1 ) `\r\n      );\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  static async delete(id) {\r\n    try {\r\n      return await database.baiviet.destroy({\r\n        where: { id }\r\n      });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  static async Save(data) {\r\n    try {     \r\n      let tk = await database.baiviet.create(data);\r\n      if(tk){\r\n        return tk\r\n      }else{\r\n        return 0\r\n      }\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async Update(id, data) {\r\n    try { \r\n      let tk = await database.baiviet.findOne({\r\n        where: { id }\r\n      }); \r\n      if (tk) {       \r\n        let th = await database.baiviet.update(data, {\r\n          where: { id }\r\n        });\r\n        return th;\r\n      }\r\n      return null;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = baivietService;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1586164453308
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\Model\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\Model\\\\models\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar Sequelize = require('sequelize');\n\nvar basename = path.basename(__filename);\nvar env = process.env.NODE_ENV || 'development';\n\nvar config = require(__dirname + '/../config/config.js')[env];\n\nvar db = {};\nvar sequelize;\n\nif (config.use_env_variable) {\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\n} else {\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\nfs.readdirSync(__dirname).filter(function (file) {\n  return file.indexOf('.') !== 0 && file !== basename && file.slice(-3) === '.js';\n}).forEach(function (file) {\n  var model = sequelize['import'](path.join(__dirname, file));\n  db[model.name] = model;\n});\nObject.keys(db).forEach(function (modelName) {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\nmodule.exports = db;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImZzIiwicmVxdWlyZSIsInBhdGgiLCJTZXF1ZWxpemUiLCJiYXNlbmFtZSIsIl9fZmlsZW5hbWUiLCJlbnYiLCJwcm9jZXNzIiwiTk9ERV9FTlYiLCJjb25maWciLCJfX2Rpcm5hbWUiLCJkYiIsInNlcXVlbGl6ZSIsInVzZV9lbnZfdmFyaWFibGUiLCJkYXRhYmFzZSIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJyZWFkZGlyU3luYyIsImZpbHRlciIsImZpbGUiLCJpbmRleE9mIiwic2xpY2UiLCJmb3JFYWNoIiwibW9kZWwiLCJqb2luIiwibmFtZSIsIk9iamVjdCIsImtleXMiLCJtb2RlbE5hbWUiLCJhc3NvY2lhdGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFNQSxFQUFFLEdBQUdDLE9BQU8sQ0FBQyxJQUFELENBQWxCOztBQUNBLElBQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUUsU0FBUyxHQUFHRixPQUFPLENBQUMsV0FBRCxDQUF6Qjs7QUFDQSxJQUFNRyxRQUFRLEdBQUdGLElBQUksQ0FBQ0UsUUFBTCxDQUFjQyxVQUFkLENBQWpCO0FBQ0EsSUFBTUMsR0FBRyxHQUFHQyxPQUFPLENBQUNELEdBQVIsQ0FBWUUsUUFBWixJQUF3QixhQUFwQzs7QUFDQSxJQUFNQyxNQUFNLEdBQUdSLE9BQU8sQ0FBQ1MsU0FBUyxHQUFHLHNCQUFiLENBQVAsQ0FBNENKLEdBQTVDLENBQWY7O0FBQ0EsSUFBTUssRUFBRSxHQUFHLEVBQVg7QUFFQSxJQUFJQyxTQUFKOztBQUNBLElBQUlILE1BQU0sQ0FBQ0ksZ0JBQVgsRUFBNkI7QUFDM0JELEVBQUFBLFNBQVMsR0FBRyxJQUFJVCxTQUFKLENBQWNJLE9BQU8sQ0FBQ0QsR0FBUixDQUFZRyxNQUFNLENBQUNJLGdCQUFuQixDQUFkLEVBQW9ESixNQUFwRCxDQUFaO0FBQ0QsQ0FGRCxNQUVPO0FBQ0xHLEVBQUFBLFNBQVMsR0FBRyxJQUFJVCxTQUFKLENBQWNNLE1BQU0sQ0FBQ0ssUUFBckIsRUFBK0JMLE1BQU0sQ0FBQ00sUUFBdEMsRUFBZ0ROLE1BQU0sQ0FBQ08sUUFBdkQsRUFBaUVQLE1BQWpFLENBQVo7QUFDRDs7QUFFRFQsRUFBRSxDQUNDaUIsV0FESCxDQUNlUCxTQURmLEVBRUdRLE1BRkgsQ0FFVSxVQUFBQyxJQUFJLEVBQUk7QUFDZCxTQUFRQSxJQUFJLENBQUNDLE9BQUwsQ0FBYSxHQUFiLE1BQXNCLENBQXZCLElBQThCRCxJQUFJLEtBQUtmLFFBQXZDLElBQXFEZSxJQUFJLENBQUNFLEtBQUwsQ0FBVyxDQUFDLENBQVosTUFBbUIsS0FBL0U7QUFDRCxDQUpILEVBS0dDLE9BTEgsQ0FLVyxVQUFBSCxJQUFJLEVBQUk7QUFDZixNQUFNSSxLQUFLLEdBQUdYLFNBQVMsQ0FBQyxRQUFELENBQVQsQ0FBb0JWLElBQUksQ0FBQ3NCLElBQUwsQ0FBVWQsU0FBVixFQUFxQlMsSUFBckIsQ0FBcEIsQ0FBZDtBQUNBUixFQUFBQSxFQUFFLENBQUNZLEtBQUssQ0FBQ0UsSUFBUCxDQUFGLEdBQWlCRixLQUFqQjtBQUNELENBUkg7QUFVQUcsTUFBTSxDQUFDQyxJQUFQLENBQVloQixFQUFaLEVBQWdCVyxPQUFoQixDQUF3QixVQUFBTSxTQUFTLEVBQUk7QUFDbkMsTUFBSWpCLEVBQUUsQ0FBQ2lCLFNBQUQsQ0FBRixDQUFjQyxTQUFsQixFQUE2QjtBQUMzQmxCLElBQUFBLEVBQUUsQ0FBQ2lCLFNBQUQsQ0FBRixDQUFjQyxTQUFkLENBQXdCbEIsRUFBeEI7QUFDRDtBQUNGLENBSkQ7QUFNQUEsRUFBRSxDQUFDQyxTQUFILEdBQWVBLFNBQWY7QUFDQUQsRUFBRSxDQUFDUixTQUFILEdBQWVBLFNBQWY7QUFFQTJCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnBCLEVBQWpCIiwic291cmNlUm9vdCI6IkQ6XFxMdWFuVmFuXFxMdWFuVmFuRDJcXHRydW5ndGFtX2xhbjRcXE1vZGVsXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKTtcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCBTZXF1ZWxpemUgPSByZXF1aXJlKCdzZXF1ZWxpemUnKTtcbmNvbnN0IGJhc2VuYW1lID0gcGF0aC5iYXNlbmFtZShfX2ZpbGVuYW1lKTtcbmNvbnN0IGVudiA9IHByb2Nlc3MuZW52Lk5PREVfRU5WIHx8ICdkZXZlbG9wbWVudCc7XG5jb25zdCBjb25maWcgPSByZXF1aXJlKF9fZGlybmFtZSArICcvLi4vY29uZmlnL2NvbmZpZy5qcycpW2Vudl07XG5jb25zdCBkYiA9IHt9O1xuXG5sZXQgc2VxdWVsaXplO1xuaWYgKGNvbmZpZy51c2VfZW52X3ZhcmlhYmxlKSB7XG4gIHNlcXVlbGl6ZSA9IG5ldyBTZXF1ZWxpemUocHJvY2Vzcy5lbnZbY29uZmlnLnVzZV9lbnZfdmFyaWFibGVdLCBjb25maWcpO1xufSBlbHNlIHtcbiAgc2VxdWVsaXplID0gbmV3IFNlcXVlbGl6ZShjb25maWcuZGF0YWJhc2UsIGNvbmZpZy51c2VybmFtZSwgY29uZmlnLnBhc3N3b3JkLCBjb25maWcpO1xufVxuXG5mc1xuICAucmVhZGRpclN5bmMoX19kaXJuYW1lKVxuICAuZmlsdGVyKGZpbGUgPT4ge1xuICAgIHJldHVybiAoZmlsZS5pbmRleE9mKCcuJykgIT09IDApICYmIChmaWxlICE9PSBiYXNlbmFtZSkgJiYgKGZpbGUuc2xpY2UoLTMpID09PSAnLmpzJyk7XG4gIH0pXG4gIC5mb3JFYWNoKGZpbGUgPT4ge1xuICAgIGNvbnN0IG1vZGVsID0gc2VxdWVsaXplWydpbXBvcnQnXShwYXRoLmpvaW4oX19kaXJuYW1lLCBmaWxlKSk7XG4gICAgZGJbbW9kZWwubmFtZV0gPSBtb2RlbDtcbiAgfSk7XG5cbk9iamVjdC5rZXlzKGRiKS5mb3JFYWNoKG1vZGVsTmFtZSA9PiB7XG4gIGlmIChkYlttb2RlbE5hbWVdLmFzc29jaWF0ZSkge1xuICAgIGRiW21vZGVsTmFtZV0uYXNzb2NpYXRlKGRiKTtcbiAgfVxufSk7XG5cbmRiLnNlcXVlbGl6ZSA9IHNlcXVlbGl6ZTtcbmRiLlNlcXVlbGl6ZSA9IFNlcXVlbGl6ZTtcblxubW9kdWxlLmV4cG9ydHMgPSBkYjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "fs",
        "require",
        "path",
        "Sequelize",
        "basename",
        "__filename",
        "env",
        "process",
        "NODE_ENV",
        "config",
        "__dirname",
        "db",
        "sequelize",
        "use_env_variable",
        "database",
        "username",
        "password",
        "readdirSync",
        "filter",
        "file",
        "indexOf",
        "slice",
        "forEach",
        "model",
        "join",
        "name",
        "Object",
        "keys",
        "modelName",
        "associate",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;AAEA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,SAAS,GAAGF,OAAO,CAAC,WAAD,CAAzB;;AACA,IAAMG,QAAQ,GAAGF,IAAI,CAACE,QAAL,CAAcC,UAAd,CAAjB;AACA,IAAMC,GAAG,GAAGC,OAAO,CAACD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;;AACA,IAAMC,MAAM,GAAGR,OAAO,CAACS,SAAS,GAAG,sBAAb,CAAP,CAA4CJ,GAA5C,CAAf;;AACA,IAAMK,EAAE,GAAG,EAAX;AAEA,IAAIC,SAAJ;;AACA,IAAIH,MAAM,CAACI,gBAAX,EAA6B;AAC3BD,EAAAA,SAAS,GAAG,IAAIT,SAAJ,CAAcI,OAAO,CAACD,GAAR,CAAYG,MAAM,CAACI,gBAAnB,CAAd,EAAoDJ,MAApD,CAAZ;AACD,CAFD,MAEO;AACLG,EAAAA,SAAS,GAAG,IAAIT,SAAJ,CAAcM,MAAM,CAACK,QAArB,EAA+BL,MAAM,CAACM,QAAtC,EAAgDN,MAAM,CAACO,QAAvD,EAAiEP,MAAjE,CAAZ;AACD;;AAEDT,EAAE,CACCiB,WADH,CACeP,SADf,EAEGQ,MAFH,CAEU,UAAAC,IAAI,EAAI;AACd,SAAQA,IAAI,CAACC,OAAL,CAAa,GAAb,MAAsB,CAAvB,IAA8BD,IAAI,KAAKf,QAAvC,IAAqDe,IAAI,CAACE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KAA/E;AACD,CAJH,EAKGC,OALH,CAKW,UAAAH,IAAI,EAAI;AACf,MAAMI,KAAK,GAAGX,SAAS,CAAC,QAAD,CAAT,CAAoBV,IAAI,CAACsB,IAAL,CAAUd,SAAV,EAAqBS,IAArB,CAApB,CAAd;AACAR,EAAAA,EAAE,CAACY,KAAK,CAACE,IAAP,CAAF,GAAiBF,KAAjB;AACD,CARH;AAUAG,MAAM,CAACC,IAAP,CAAYhB,EAAZ,EAAgBW,OAAhB,CAAwB,UAAAM,SAAS,EAAI;AACnC,MAAIjB,EAAE,CAACiB,SAAD,CAAF,CAAcC,SAAlB,EAA6B;AAC3BlB,IAAAA,EAAE,CAACiB,SAAD,CAAF,CAAcC,SAAd,CAAwBlB,EAAxB;AACD;AACF,CAJD;AAMAA,EAAE,CAACC,SAAH,GAAeA,SAAf;AACAD,EAAE,CAACR,SAAH,GAAeA,SAAf;AAEA2B,MAAM,CAACC,OAAP,GAAiBpB,EAAjB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models",
      "sourcesContent": [
        "'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\nconst Sequelize = require('sequelize');\nconst basename = path.basename(__filename);\nconst env = process.env.NODE_ENV || 'development';\nconst config = require(__dirname + '/../config/config.js')[env];\nconst db = {};\n\nlet sequelize;\nif (config.use_env_variable) {\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\n} else {\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\nfs\n  .readdirSync(__dirname)\n  .filter(file => {\n    return (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js');\n  })\n  .forEach(file => {\n    const model = sequelize['import'](path.join(__dirname, file));\n    db[model.name] = model;\n  });\n\nObject.keys(db).forEach(modelName => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nmodule.exports = db;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1577636617482
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\Model\\\\config\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\Model\\\\config\\\\config.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\config",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\config\\config.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\config\\config.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\config\\config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\config",
        "sourceFileName": "config.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nrequire('dotenv').config();\n\nmodule.exports = {\n  // If using onine database\n  // development: {\n  //   use_env_variable: 'DATABASE_URL'\n  // },\n  development: {\n    database: 'tinhoc_D2',\n    username: 'postgres',\n    password: '54321bao',\n    host: '127.0.0.1',\n    dialect: 'postgres'\n  },\n  test: {\n    database: 'tinhoc_D2',\n    username: 'postgres',\n    password: '54321bao',\n    host: '127.0.0.1',\n    dialect: 'postgres'\n  },\n  production: {\n    database: process.env.DB_NAME,\n    username: process.env.DB_USER,\n    password: process.env.DB_PASS,\n    host: process.env.DB_HOST,\n    dialect: 'postgres'\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiY29uZmlnIiwibW9kdWxlIiwiZXhwb3J0cyIsImRldmVsb3BtZW50IiwiZGF0YWJhc2UiLCJ1c2VybmFtZSIsInBhc3N3b3JkIiwiaG9zdCIsImRpYWxlY3QiLCJ0ZXN0IiwicHJvZHVjdGlvbiIsInByb2Nlc3MiLCJlbnYiLCJEQl9OQU1FIiwiREJfVVNFUiIsIkRCX1BBU1MiLCJEQl9IT1NUIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxPQUFPLENBQUMsUUFBRCxDQUFQLENBQWtCQyxNQUFsQjs7QUFHQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBRWY7QUFDQTtBQUNBO0FBQ0E7QUFFQUMsRUFBQUEsV0FBVyxFQUFFO0FBQ1hDLElBQUFBLFFBQVEsRUFBRSxXQURDO0FBRVhDLElBQUFBLFFBQVEsRUFBRSxVQUZDO0FBR1hDLElBQUFBLFFBQVEsRUFBRSxVQUhDO0FBSVhDLElBQUFBLElBQUksRUFBRSxXQUpLO0FBS1hDLElBQUFBLE9BQU8sRUFBRTtBQUxFLEdBUEU7QUFlZkMsRUFBQUEsSUFBSSxFQUFFO0FBQ0pMLElBQUFBLFFBQVEsRUFBRSxXQUROO0FBRUpDLElBQUFBLFFBQVEsRUFBRSxVQUZOO0FBR0pDLElBQUFBLFFBQVEsRUFBRSxVQUhOO0FBSUpDLElBQUFBLElBQUksRUFBRSxXQUpGO0FBS0pDLElBQUFBLE9BQU8sRUFBRTtBQUxMLEdBZlM7QUF1QmZFLEVBQUFBLFVBQVUsRUFBRTtBQUNWTixJQUFBQSxRQUFRLEVBQUVPLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxPQURaO0FBRVZSLElBQUFBLFFBQVEsRUFBRU0sT0FBTyxDQUFDQyxHQUFSLENBQVlFLE9BRlo7QUFHVlIsSUFBQUEsUUFBUSxFQUFFSyxPQUFPLENBQUNDLEdBQVIsQ0FBWUcsT0FIWjtBQUlWUixJQUFBQSxJQUFJLEVBQUVJLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSSxPQUpSO0FBS1ZSLElBQUFBLE9BQU8sRUFBRTtBQUxDO0FBdkJHLENBQWpCIiwic291cmNlUm9vdCI6IkQ6XFxMdWFuVmFuXFxMdWFuVmFuRDJcXHRydW5ndGFtX2xhbjRcXE1vZGVsXFxjb25maWciLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCdkb3RlbnYnKS5jb25maWcoKTtcblxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcblxuICAvLyBJZiB1c2luZyBvbmluZSBkYXRhYmFzZVxuICAvLyBkZXZlbG9wbWVudDoge1xuICAvLyAgIHVzZV9lbnZfdmFyaWFibGU6ICdEQVRBQkFTRV9VUkwnXG4gIC8vIH0sXG5cbiAgZGV2ZWxvcG1lbnQ6IHtcbiAgICBkYXRhYmFzZTogJ3RpbmhvY19EMicsXG4gICAgdXNlcm5hbWU6ICdwb3N0Z3JlcycsXG4gICAgcGFzc3dvcmQ6ICc1NDMyMWJhbycsXG4gICAgaG9zdDogJzEyNy4wLjAuMScsXG4gICAgZGlhbGVjdDogJ3Bvc3RncmVzJ1xuICB9LFxuXG4gIHRlc3Q6IHtcbiAgICBkYXRhYmFzZTogJ3RpbmhvY19EMicsXG4gICAgdXNlcm5hbWU6ICdwb3N0Z3JlcycsXG4gICAgcGFzc3dvcmQ6ICc1NDMyMWJhbycsXG4gICAgaG9zdDogJzEyNy4wLjAuMScsXG4gICAgZGlhbGVjdDogJ3Bvc3RncmVzJ1xuICB9LFxuXG4gIHByb2R1Y3Rpb246IHtcbiAgICBkYXRhYmFzZTogcHJvY2Vzcy5lbnYuREJfTkFNRSxcbiAgICB1c2VybmFtZTogcHJvY2Vzcy5lbnYuREJfVVNFUixcbiAgICBwYXNzd29yZDogcHJvY2Vzcy5lbnYuREJfUEFTUyxcbiAgICBob3N0OiBwcm9jZXNzLmVudi5EQl9IT1NULFxuICAgIGRpYWxlY3Q6ICdwb3N0Z3JlcydcbiAgfVxufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "config.js"
      ],
      "names": [
        "require",
        "config",
        "module",
        "exports",
        "development",
        "database",
        "username",
        "password",
        "host",
        "dialect",
        "test",
        "production",
        "process",
        "env",
        "DB_NAME",
        "DB_USER",
        "DB_PASS",
        "DB_HOST"
      ],
      "mappings": ";;AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAGAC,MAAM,CAACC,OAAP,GAAiB;AAEf;AACA;AACA;AACA;AAEAC,EAAAA,WAAW,EAAE;AACXC,IAAAA,QAAQ,EAAE,WADC;AAEXC,IAAAA,QAAQ,EAAE,UAFC;AAGXC,IAAAA,QAAQ,EAAE,UAHC;AAIXC,IAAAA,IAAI,EAAE,WAJK;AAKXC,IAAAA,OAAO,EAAE;AALE,GAPE;AAefC,EAAAA,IAAI,EAAE;AACJL,IAAAA,QAAQ,EAAE,WADN;AAEJC,IAAAA,QAAQ,EAAE,UAFN;AAGJC,IAAAA,QAAQ,EAAE,UAHN;AAIJC,IAAAA,IAAI,EAAE,WAJF;AAKJC,IAAAA,OAAO,EAAE;AALL,GAfS;AAuBfE,EAAAA,UAAU,EAAE;AACVN,IAAAA,QAAQ,EAAEO,OAAO,CAACC,GAAR,CAAYC,OADZ;AAEVR,IAAAA,QAAQ,EAAEM,OAAO,CAACC,GAAR,CAAYE,OAFZ;AAGVR,IAAAA,QAAQ,EAAEK,OAAO,CAACC,GAAR,CAAYG,OAHZ;AAIVR,IAAAA,IAAI,EAAEI,OAAO,CAACC,GAAR,CAAYI,OAJR;AAKVR,IAAAA,OAAO,EAAE;AALC;AAvBG,CAAjB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\config",
      "sourcesContent": [
        "require('dotenv').config();\n\n\nmodule.exports = {\n\n  // If using onine database\n  // development: {\n  //   use_env_variable: 'DATABASE_URL'\n  // },\n\n  development: {\n    database: 'tinhoc_D2',\n    username: 'postgres',\n    password: '54321bao',\n    host: '127.0.0.1',\n    dialect: 'postgres'\n  },\n\n  test: {\n    database: 'tinhoc_D2',\n    username: 'postgres',\n    password: '54321bao',\n    host: '127.0.0.1',\n    dialect: 'postgres'\n  },\n\n  production: {\n    database: process.env.DB_NAME,\n    username: process.env.DB_USER,\n    password: process.env.DB_PASS,\n    host: process.env.DB_HOST,\n    dialect: 'postgres'\n  }\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1577636985527
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\Model\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\Model\\\\models\\\\baiviet.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models\\baiviet.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models\\baiviet.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models\\baiviet.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models",
        "sourceFileName": "baiviet.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var baiviet = sequelize.define('baiviet', {\n    tieude: DataTypes.TEXT,\n    noidung: DataTypes.TEXT,\n    hinhanh: DataTypes.STRING,\n    id_taikhoan: DataTypes.INTEGER,\n    id_chuyenmuc: DataTypes.INTEGER,\n    trangthai: DataTypes.INTEGER\n  }, {});\n\n  baiviet.associate = function (models) {// associations can be defined here\n  };\n\n  return baiviet;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhaXZpZXQuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsImJhaXZpZXQiLCJkZWZpbmUiLCJ0aWV1ZGUiLCJURVhUIiwibm9pZHVuZyIsImhpbmhhbmgiLCJTVFJJTkciLCJpZF90YWlraG9hbiIsIklOVEVHRVIiLCJpZF9jaHV5ZW5tdWMiLCJ0cmFuZ3RoYWkiLCJhc3NvY2lhdGUiLCJtb2RlbHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQ0MsU0FBRCxFQUFZQyxTQUFaLEVBQTBCO0FBQ3pDLE1BQU1DLE9BQU8sR0FBR0YsU0FBUyxDQUFDRyxNQUFWLENBQWlCLFNBQWpCLEVBQTRCO0FBQzFDQyxJQUFBQSxNQUFNLEVBQUVILFNBQVMsQ0FBQ0ksSUFEd0I7QUFFMUNDLElBQUFBLE9BQU8sRUFBRUwsU0FBUyxDQUFDSSxJQUZ1QjtBQUcxQ0UsSUFBQUEsT0FBTyxFQUFFTixTQUFTLENBQUNPLE1BSHVCO0FBSTFDQyxJQUFBQSxXQUFXLEVBQUVSLFNBQVMsQ0FBQ1MsT0FKbUI7QUFLMUNDLElBQUFBLFlBQVksRUFBRVYsU0FBUyxDQUFDUyxPQUxrQjtBQU0xQ0UsSUFBQUEsU0FBUyxFQUFFWCxTQUFTLENBQUNTO0FBTnFCLEdBQTVCLEVBT2IsRUFQYSxDQUFoQjs7QUFRQVIsRUFBQUEsT0FBTyxDQUFDVyxTQUFSLEdBQW9CLFVBQVNDLE1BQVQsRUFBaUIsQ0FDbkM7QUFDRCxHQUZEOztBQUdBLFNBQU9aLE9BQVA7QUFDRCxDQWJEIiwic291cmNlUm9vdCI6IkQ6XFxMdWFuVmFuXFxMdWFuVmFuRDJcXHRydW5ndGFtX2xhbjRcXE1vZGVsXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IChzZXF1ZWxpemUsIERhdGFUeXBlcykgPT4ge1xuICBjb25zdCBiYWl2aWV0ID0gc2VxdWVsaXplLmRlZmluZSgnYmFpdmlldCcsIHtcbiAgICB0aWV1ZGU6IERhdGFUeXBlcy5URVhULFxuICAgIG5vaWR1bmc6IERhdGFUeXBlcy5URVhULFxuICAgIGhpbmhhbmg6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgaWRfdGFpa2hvYW46IERhdGFUeXBlcy5JTlRFR0VSLFxuICAgIGlkX2NodXllbm11YzogRGF0YVR5cGVzLklOVEVHRVIsXG4gICAgdHJhbmd0aGFpOiBEYXRhVHlwZXMuSU5URUdFUlxuICB9LCB7fSk7XG4gIGJhaXZpZXQuYXNzb2NpYXRlID0gZnVuY3Rpb24obW9kZWxzKSB7XG4gICAgLy8gYXNzb2NpYXRpb25zIGNhbiBiZSBkZWZpbmVkIGhlcmVcbiAgfTtcbiAgcmV0dXJuIGJhaXZpZXQ7XG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "baiviet.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "baiviet",
        "define",
        "tieude",
        "TEXT",
        "noidung",
        "hinhanh",
        "STRING",
        "id_taikhoan",
        "INTEGER",
        "id_chuyenmuc",
        "trangthai",
        "associate",
        "models"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,OAAO,GAAGF,SAAS,CAACG,MAAV,CAAiB,SAAjB,EAA4B;AAC1CC,IAAAA,MAAM,EAAEH,SAAS,CAACI,IADwB;AAE1CC,IAAAA,OAAO,EAAEL,SAAS,CAACI,IAFuB;AAG1CE,IAAAA,OAAO,EAAEN,SAAS,CAACO,MAHuB;AAI1CC,IAAAA,WAAW,EAAER,SAAS,CAACS,OAJmB;AAK1CC,IAAAA,YAAY,EAAEV,SAAS,CAACS,OALkB;AAM1CE,IAAAA,SAAS,EAAEX,SAAS,CAACS;AANqB,GAA5B,EAOb,EAPa,CAAhB;;AAQAR,EAAAA,OAAO,CAACW,SAAR,GAAoB,UAASC,MAAT,EAAiB,CACnC;AACD,GAFD;;AAGA,SAAOZ,OAAP;AACD,CAbD",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const baiviet = sequelize.define('baiviet', {\n    tieude: DataTypes.TEXT,\n    noidung: DataTypes.TEXT,\n    hinhanh: DataTypes.STRING,\n    id_taikhoan: DataTypes.INTEGER,\n    id_chuyenmuc: DataTypes.INTEGER,\n    trangthai: DataTypes.INTEGER\n  }, {});\n  baiviet.associate = function(models) {\n    // associations can be defined here\n  };\n  return baiviet;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1586966437633
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\Model\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\Model\\\\models\\\\chuyenmuc.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models\\chuyenmuc.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models\\chuyenmuc.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models\\chuyenmuc.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models",
        "sourceFileName": "chuyenmuc.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var chuyenmuc = sequelize.define('chuyenmuc', {\n    tenchuyenmuc: DataTypes.STRING,\n    trangthai: DataTypes.INTEGER\n  }, {});\n\n  chuyenmuc.associate = function (models) {// associations can be defined here\n  };\n\n  return chuyenmuc;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNodXllbm11Yy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwic2VxdWVsaXplIiwiRGF0YVR5cGVzIiwiY2h1eWVubXVjIiwiZGVmaW5lIiwidGVuY2h1eWVubXVjIiwiU1RSSU5HIiwidHJhbmd0aGFpIiwiSU5URUdFUiIsImFzc29jaWF0ZSIsIm1vZGVscyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0FBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFDQyxTQUFELEVBQVlDLFNBQVosRUFBMEI7QUFDekMsTUFBTUMsU0FBUyxHQUFHRixTQUFTLENBQUNHLE1BQVYsQ0FBaUIsV0FBakIsRUFBOEI7QUFDOUNDLElBQUFBLFlBQVksRUFBRUgsU0FBUyxDQUFDSSxNQURzQjtBQUU5Q0MsSUFBQUEsU0FBUyxFQUFFTCxTQUFTLENBQUNNO0FBRnlCLEdBQTlCLEVBR2YsRUFIZSxDQUFsQjs7QUFJQUwsRUFBQUEsU0FBUyxDQUFDTSxTQUFWLEdBQXNCLFVBQVNDLE1BQVQsRUFBaUIsQ0FDckM7QUFDRCxHQUZEOztBQUdBLFNBQU9QLFNBQVA7QUFDRCxDQVREIiwic291cmNlUm9vdCI6IkQ6XFxMdWFuVmFuXFxMdWFuVmFuRDJcXHRydW5ndGFtX2xhbjRcXE1vZGVsXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IChzZXF1ZWxpemUsIERhdGFUeXBlcykgPT4ge1xuICBjb25zdCBjaHV5ZW5tdWMgPSBzZXF1ZWxpemUuZGVmaW5lKCdjaHV5ZW5tdWMnLCB7XG4gICAgdGVuY2h1eWVubXVjOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIHRyYW5ndGhhaTogRGF0YVR5cGVzLklOVEVHRVJcbiAgfSwge30pO1xuICBjaHV5ZW5tdWMuYXNzb2NpYXRlID0gZnVuY3Rpb24obW9kZWxzKSB7XG4gICAgLy8gYXNzb2NpYXRpb25zIGNhbiBiZSBkZWZpbmVkIGhlcmVcbiAgfTtcbiAgcmV0dXJuIGNodXllbm11Yztcbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "chuyenmuc.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "chuyenmuc",
        "define",
        "tenchuyenmuc",
        "STRING",
        "trangthai",
        "INTEGER",
        "associate",
        "models"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,SAAS,GAAGF,SAAS,CAACG,MAAV,CAAiB,WAAjB,EAA8B;AAC9CC,IAAAA,YAAY,EAAEH,SAAS,CAACI,MADsB;AAE9CC,IAAAA,SAAS,EAAEL,SAAS,CAACM;AAFyB,GAA9B,EAGf,EAHe,CAAlB;;AAIAL,EAAAA,SAAS,CAACM,SAAV,GAAsB,UAASC,MAAT,EAAiB,CACrC;AACD,GAFD;;AAGA,SAAOP,SAAP;AACD,CATD",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const chuyenmuc = sequelize.define('chuyenmuc', {\n    tenchuyenmuc: DataTypes.STRING,\n    trangthai: DataTypes.INTEGER\n  }, {});\n  chuyenmuc.associate = function(models) {\n    // associations can be defined here\n  };\n  return chuyenmuc;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1586164243371
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\Model\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\Model\\\\models\\\\dangky.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models\\dangky.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models\\dangky.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models\\dangky.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models",
        "sourceFileName": "dangky.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var dangky = sequelize.define('dangky', {\n    tenkhachhang: DataTypes.STRING,\n    sdt: DataTypes.INTEGER,\n    diem: DataTypes.INTEGER,\n    diachi: DataTypes.STRING,\n    gioitinh: DataTypes.STRING,\n    email: DataTypes.STRING,\n    id_lophoc: DataTypes.INTEGER,\n    thanhtoan: DataTypes.INTEGER,\n    trangthai: DataTypes.INTEGER\n  }, {});\n\n  dangky.associate = function (models) {\n    // associations can be defined here\n    dangky.belongsTo(models.lophoc, {\n      foreignKey: 'id',\n      as: 'lophocs',\n      onDelete: 'CASCADE'\n    });\n  };\n\n  return dangky;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhbmdreS5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwic2VxdWVsaXplIiwiRGF0YVR5cGVzIiwiZGFuZ2t5IiwiZGVmaW5lIiwidGVua2hhY2hoYW5nIiwiU1RSSU5HIiwic2R0IiwiSU5URUdFUiIsImRpZW0iLCJkaWFjaGkiLCJnaW9pdGluaCIsImVtYWlsIiwiaWRfbG9waG9jIiwidGhhbmh0b2FuIiwidHJhbmd0aGFpIiwiYXNzb2NpYXRlIiwibW9kZWxzIiwiYmVsb25nc1RvIiwibG9waG9jIiwiZm9yZWlnbktleSIsImFzIiwib25EZWxldGUiXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQ0MsU0FBRCxFQUFZQyxTQUFaLEVBQTBCO0FBQ3pDLE1BQU1DLE1BQU0sR0FBR0YsU0FBUyxDQUFDRyxNQUFWLENBQWlCLFFBQWpCLEVBQTJCO0FBQ3hDQyxJQUFBQSxZQUFZLEVBQUVILFNBQVMsQ0FBQ0ksTUFEZ0I7QUFFeENDLElBQUFBLEdBQUcsRUFBRUwsU0FBUyxDQUFDTSxPQUZ5QjtBQUd4Q0MsSUFBQUEsSUFBSSxFQUFFUCxTQUFTLENBQUNNLE9BSHdCO0FBSXhDRSxJQUFBQSxNQUFNLEVBQUVSLFNBQVMsQ0FBQ0ksTUFKc0I7QUFLeENLLElBQUFBLFFBQVEsRUFBRVQsU0FBUyxDQUFDSSxNQUxvQjtBQU14Q00sSUFBQUEsS0FBSyxFQUFFVixTQUFTLENBQUNJLE1BTnVCO0FBT3hDTyxJQUFBQSxTQUFTLEVBQUVYLFNBQVMsQ0FBQ00sT0FQbUI7QUFReENNLElBQUFBLFNBQVMsRUFBRVosU0FBUyxDQUFDTSxPQVJtQjtBQVN4Q08sSUFBQUEsU0FBUyxFQUFFYixTQUFTLENBQUNNO0FBVG1CLEdBQTNCLEVBVVosRUFWWSxDQUFmOztBQVdBTCxFQUFBQSxNQUFNLENBQUNhLFNBQVAsR0FBbUIsVUFBU0MsTUFBVCxFQUFpQjtBQUNsQztBQUNBZCxJQUFBQSxNQUFNLENBQUNlLFNBQVAsQ0FBaUJELE1BQU0sQ0FBQ0UsTUFBeEIsRUFBZ0M7QUFDakNDLE1BQUFBLFVBQVUsRUFBRSxJQURxQjtBQUVqQ0MsTUFBQUEsRUFBRSxFQUFFLFNBRjZCO0FBR2pDQyxNQUFBQSxRQUFRLEVBQUU7QUFIdUIsS0FBaEM7QUFLRCxHQVBEOztBQVFBLFNBQU9uQixNQUFQO0FBQ0QsQ0FyQkQiLCJzb3VyY2VSb290IjoiRDpcXEx1YW5WYW5cXEx1YW5WYW5EMlxcdHJ1bmd0YW1fbGFuNFxcTW9kZWxcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbm1vZHVsZS5leHBvcnRzID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XG4gIGNvbnN0IGRhbmdreSA9IHNlcXVlbGl6ZS5kZWZpbmUoJ2RhbmdreScsIHtcbiAgICB0ZW5raGFjaGhhbmc6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgc2R0OiBEYXRhVHlwZXMuSU5URUdFUixcbiAgICBkaWVtOiBEYXRhVHlwZXMuSU5URUdFUixcbiAgICBkaWFjaGk6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgZ2lvaXRpbmg6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgZW1haWw6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgaWRfbG9waG9jOiBEYXRhVHlwZXMuSU5URUdFUiwgICAgXG4gICAgdGhhbmh0b2FuOiBEYXRhVHlwZXMuSU5URUdFUixcbiAgICB0cmFuZ3RoYWk6IERhdGFUeXBlcy5JTlRFR0VSXG4gIH0sIHt9KTtcbiAgZGFuZ2t5LmFzc29jaWF0ZSA9IGZ1bmN0aW9uKG1vZGVscykge1xuICAgIC8vIGFzc29jaWF0aW9ucyBjYW4gYmUgZGVmaW5lZCBoZXJlXG4gICAgZGFuZ2t5LmJlbG9uZ3NUbyhtb2RlbHMubG9waG9jLCB7XG5cdFx0XHRmb3JlaWduS2V5OiAnaWQnLFxuXHRcdFx0YXM6ICdsb3Bob2NzJyxcblx0XHRcdG9uRGVsZXRlOiAnQ0FTQ0FERScsXG4gICAgfSk7XG4gIH07XG4gIHJldHVybiBkYW5na3k7XG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "dangky.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "dangky",
        "define",
        "tenkhachhang",
        "STRING",
        "sdt",
        "INTEGER",
        "diem",
        "diachi",
        "gioitinh",
        "email",
        "id_lophoc",
        "thanhtoan",
        "trangthai",
        "associate",
        "models",
        "belongsTo",
        "lophoc",
        "foreignKey",
        "as",
        "onDelete"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,MAAM,GAAGF,SAAS,CAACG,MAAV,CAAiB,QAAjB,EAA2B;AACxCC,IAAAA,YAAY,EAAEH,SAAS,CAACI,MADgB;AAExCC,IAAAA,GAAG,EAAEL,SAAS,CAACM,OAFyB;AAGxCC,IAAAA,IAAI,EAAEP,SAAS,CAACM,OAHwB;AAIxCE,IAAAA,MAAM,EAAER,SAAS,CAACI,MAJsB;AAKxCK,IAAAA,QAAQ,EAAET,SAAS,CAACI,MALoB;AAMxCM,IAAAA,KAAK,EAAEV,SAAS,CAACI,MANuB;AAOxCO,IAAAA,SAAS,EAAEX,SAAS,CAACM,OAPmB;AAQxCM,IAAAA,SAAS,EAAEZ,SAAS,CAACM,OARmB;AASxCO,IAAAA,SAAS,EAAEb,SAAS,CAACM;AATmB,GAA3B,EAUZ,EAVY,CAAf;;AAWAL,EAAAA,MAAM,CAACa,SAAP,GAAmB,UAASC,MAAT,EAAiB;AAClC;AACAd,IAAAA,MAAM,CAACe,SAAP,CAAiBD,MAAM,CAACE,MAAxB,EAAgC;AACjCC,MAAAA,UAAU,EAAE,IADqB;AAEjCC,MAAAA,EAAE,EAAE,SAF6B;AAGjCC,MAAAA,QAAQ,EAAE;AAHuB,KAAhC;AAKD,GAPD;;AAQA,SAAOnB,MAAP;AACD,CArBD",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const dangky = sequelize.define('dangky', {\n    tenkhachhang: DataTypes.STRING,\n    sdt: DataTypes.INTEGER,\n    diem: DataTypes.INTEGER,\n    diachi: DataTypes.STRING,\n    gioitinh: DataTypes.STRING,\n    email: DataTypes.STRING,\n    id_lophoc: DataTypes.INTEGER,    \n    thanhtoan: DataTypes.INTEGER,\n    trangthai: DataTypes.INTEGER\n  }, {});\n  dangky.associate = function(models) {\n    // associations can be defined here\n    dangky.belongsTo(models.lophoc, {\n\t\t\tforeignKey: 'id',\n\t\t\tas: 'lophocs',\n\t\t\tonDelete: 'CASCADE',\n    });\n  };\n  return dangky;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1583671641528
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\Model\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\Model\\\\models\\\\diendan.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models\\diendan.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models\\diendan.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models\\diendan.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models",
        "sourceFileName": "diendan.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var diendan = sequelize.define('diendan', {\n    tieude: DataTypes.STRING,\n    id_khoahoc: DataTypes.INTEGER,\n    id_taikhoan: DataTypes.INTEGER,\n    noidung: DataTypes.STRING,\n    trangthai: DataTypes.INTEGER\n  }, {});\n\n  diendan.associate = function (models) {\n    // associations can be defined here\n    diendan.belongsTo(models.taikhoan, {\n      foreignKey: 'id',\n      as: 'taikhoans',\n      onDelete: 'CASCADE'\n    });\n    diendan.hasMany(models.phanhoi, {\n      foreignKey: 'id_diendan',\n      as: 'phanhois',\n      onDelete: 'CASCADE'\n    });\n    diendan.hasOne(models.khoahoc, {\n      foreignKey: 'id',\n      as: 'khoahocs',\n      onDelete: 'CASCADE'\n    });\n  };\n\n  return diendan;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRpZW5kYW4uanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsImRpZW5kYW4iLCJkZWZpbmUiLCJ0aWV1ZGUiLCJTVFJJTkciLCJpZF9raG9haG9jIiwiSU5URUdFUiIsImlkX3RhaWtob2FuIiwibm9pZHVuZyIsInRyYW5ndGhhaSIsImFzc29jaWF0ZSIsIm1vZGVscyIsImJlbG9uZ3NUbyIsInRhaWtob2FuIiwiZm9yZWlnbktleSIsImFzIiwib25EZWxldGUiLCJoYXNNYW55IiwicGhhbmhvaSIsImhhc09uZSIsImtob2Fob2MiXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQ0MsU0FBRCxFQUFZQyxTQUFaLEVBQTBCO0FBQ3pDLE1BQU1DLE9BQU8sR0FBR0YsU0FBUyxDQUFDRyxNQUFWLENBQWlCLFNBQWpCLEVBQTRCO0FBQzFDQyxJQUFBQSxNQUFNLEVBQUVILFNBQVMsQ0FBQ0ksTUFEd0I7QUFFMUNDLElBQUFBLFVBQVUsRUFBRUwsU0FBUyxDQUFDTSxPQUZvQjtBQUcxQ0MsSUFBQUEsV0FBVyxFQUFFUCxTQUFTLENBQUNNLE9BSG1CO0FBSTFDRSxJQUFBQSxPQUFPLEVBQUVSLFNBQVMsQ0FBQ0ksTUFKdUI7QUFLMUNLLElBQUFBLFNBQVMsRUFBRVQsU0FBUyxDQUFDTTtBQUxxQixHQUE1QixFQU1iLEVBTmEsQ0FBaEI7O0FBT0FMLEVBQUFBLE9BQU8sQ0FBQ1MsU0FBUixHQUFvQixVQUFTQyxNQUFULEVBQWlCO0FBQ25DO0FBQ0FWLElBQUFBLE9BQU8sQ0FBQ1csU0FBUixDQUFrQkQsTUFBTSxDQUFDRSxRQUF6QixFQUFtQztBQUNwQ0MsTUFBQUEsVUFBVSxFQUFFLElBRHdCO0FBRXBDQyxNQUFBQSxFQUFFLEVBQUUsV0FGZ0M7QUFHcENDLE1BQUFBLFFBQVEsRUFBRTtBQUgwQixLQUFuQztBQUtBZixJQUFBQSxPQUFPLENBQUNnQixPQUFSLENBQWdCTixNQUFNLENBQUNPLE9BQXZCLEVBQWdDO0FBQ2pDSixNQUFBQSxVQUFVLEVBQUUsWUFEcUI7QUFFakNDLE1BQUFBLEVBQUUsRUFBRSxVQUY2QjtBQUdqQ0MsTUFBQUEsUUFBUSxFQUFFO0FBSHVCLEtBQWhDO0FBS0FmLElBQUFBLE9BQU8sQ0FBQ2tCLE1BQVIsQ0FBZVIsTUFBTSxDQUFDUyxPQUF0QixFQUErQjtBQUNoQ04sTUFBQUEsVUFBVSxFQUFFLElBRG9CO0FBRWhDQyxNQUFBQSxFQUFFLEVBQUUsVUFGNEI7QUFHaENDLE1BQUFBLFFBQVEsRUFBRTtBQUhzQixLQUEvQjtBQU9ELEdBbkJEOztBQW9CQSxTQUFPZixPQUFQO0FBQ0QsQ0E3QkQiLCJzb3VyY2VSb290IjoiRDpcXEx1YW5WYW5cXEx1YW5WYW5EMlxcdHJ1bmd0YW1fbGFuNFxcTW9kZWxcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbm1vZHVsZS5leHBvcnRzID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XG4gIGNvbnN0IGRpZW5kYW4gPSBzZXF1ZWxpemUuZGVmaW5lKCdkaWVuZGFuJywge1xuICAgIHRpZXVkZTogRGF0YVR5cGVzLlNUUklORyxcbiAgICBpZF9raG9haG9jOiBEYXRhVHlwZXMuSU5URUdFUixcbiAgICBpZF90YWlraG9hbjogRGF0YVR5cGVzLklOVEVHRVIsXG4gICAgbm9pZHVuZzogRGF0YVR5cGVzLlNUUklORyxcbiAgICB0cmFuZ3RoYWk6IERhdGFUeXBlcy5JTlRFR0VSXG4gIH0sIHt9KTtcbiAgZGllbmRhbi5hc3NvY2lhdGUgPSBmdW5jdGlvbihtb2RlbHMpIHtcbiAgICAvLyBhc3NvY2lhdGlvbnMgY2FuIGJlIGRlZmluZWQgaGVyZVxuICAgIGRpZW5kYW4uYmVsb25nc1RvKG1vZGVscy50YWlraG9hbiwge1xuXHRcdFx0Zm9yZWlnbktleTogJ2lkJyxcblx0XHRcdGFzOiAndGFpa2hvYW5zJyxcblx0XHRcdG9uRGVsZXRlOiAnQ0FTQ0FERScsXG4gICAgfSk7XG4gICAgZGllbmRhbi5oYXNNYW55KG1vZGVscy5waGFuaG9pLCB7XG5cdFx0XHRmb3JlaWduS2V5OiAnaWRfZGllbmRhbicsXG5cdFx0XHRhczogJ3BoYW5ob2lzJyxcblx0XHRcdG9uRGVsZXRlOiAnQ0FTQ0FERScsXG4gICAgfSk7XG4gICAgZGllbmRhbi5oYXNPbmUobW9kZWxzLmtob2Fob2MsIHtcblx0XHRcdGZvcmVpZ25LZXk6ICdpZCcsXG5cdFx0XHRhczogJ2tob2Fob2NzJyxcblx0XHRcdG9uRGVsZXRlOiAnQ0FTQ0FERScsXG5cdFx0fSk7XG5cbiAgICBcbiAgfTtcbiAgcmV0dXJuIGRpZW5kYW47XG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "diendan.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "diendan",
        "define",
        "tieude",
        "STRING",
        "id_khoahoc",
        "INTEGER",
        "id_taikhoan",
        "noidung",
        "trangthai",
        "associate",
        "models",
        "belongsTo",
        "taikhoan",
        "foreignKey",
        "as",
        "onDelete",
        "hasMany",
        "phanhoi",
        "hasOne",
        "khoahoc"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,OAAO,GAAGF,SAAS,CAACG,MAAV,CAAiB,SAAjB,EAA4B;AAC1CC,IAAAA,MAAM,EAAEH,SAAS,CAACI,MADwB;AAE1CC,IAAAA,UAAU,EAAEL,SAAS,CAACM,OAFoB;AAG1CC,IAAAA,WAAW,EAAEP,SAAS,CAACM,OAHmB;AAI1CE,IAAAA,OAAO,EAAER,SAAS,CAACI,MAJuB;AAK1CK,IAAAA,SAAS,EAAET,SAAS,CAACM;AALqB,GAA5B,EAMb,EANa,CAAhB;;AAOAL,EAAAA,OAAO,CAACS,SAAR,GAAoB,UAASC,MAAT,EAAiB;AACnC;AACAV,IAAAA,OAAO,CAACW,SAAR,CAAkBD,MAAM,CAACE,QAAzB,EAAmC;AACpCC,MAAAA,UAAU,EAAE,IADwB;AAEpCC,MAAAA,EAAE,EAAE,WAFgC;AAGpCC,MAAAA,QAAQ,EAAE;AAH0B,KAAnC;AAKAf,IAAAA,OAAO,CAACgB,OAAR,CAAgBN,MAAM,CAACO,OAAvB,EAAgC;AACjCJ,MAAAA,UAAU,EAAE,YADqB;AAEjCC,MAAAA,EAAE,EAAE,UAF6B;AAGjCC,MAAAA,QAAQ,EAAE;AAHuB,KAAhC;AAKAf,IAAAA,OAAO,CAACkB,MAAR,CAAeR,MAAM,CAACS,OAAtB,EAA+B;AAChCN,MAAAA,UAAU,EAAE,IADoB;AAEhCC,MAAAA,EAAE,EAAE,UAF4B;AAGhCC,MAAAA,QAAQ,EAAE;AAHsB,KAA/B;AAOD,GAnBD;;AAoBA,SAAOf,OAAP;AACD,CA7BD",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const diendan = sequelize.define('diendan', {\n    tieude: DataTypes.STRING,\n    id_khoahoc: DataTypes.INTEGER,\n    id_taikhoan: DataTypes.INTEGER,\n    noidung: DataTypes.STRING,\n    trangthai: DataTypes.INTEGER\n  }, {});\n  diendan.associate = function(models) {\n    // associations can be defined here\n    diendan.belongsTo(models.taikhoan, {\n\t\t\tforeignKey: 'id',\n\t\t\tas: 'taikhoans',\n\t\t\tonDelete: 'CASCADE',\n    });\n    diendan.hasMany(models.phanhoi, {\n\t\t\tforeignKey: 'id_diendan',\n\t\t\tas: 'phanhois',\n\t\t\tonDelete: 'CASCADE',\n    });\n    diendan.hasOne(models.khoahoc, {\n\t\t\tforeignKey: 'id',\n\t\t\tas: 'khoahocs',\n\t\t\tonDelete: 'CASCADE',\n\t\t});\n\n    \n  };\n  return diendan;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1583394144861
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\Model\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\Model\\\\models\\\\giangvien.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models\\giangvien.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models\\giangvien.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models\\giangvien.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models",
        "sourceFileName": "giangvien.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var giangvien = sequelize.define('giangvien', {\n    hoten: DataTypes.STRING,\n    sdt: DataTypes.INTEGER,\n    diachi: DataTypes.STRING,\n    email: DataTypes.STRING,\n    gioitinh: DataTypes.STRING,\n    linhvuc: DataTypes.TEXT,\n    hinhanh: DataTypes.STRING,\n    trangthai: DataTypes.INTEGER,\n    id_tk: DataTypes.INTEGER\n  }, {});\n\n  giangvien.associate = function (models) {\n    // associations can be defined here\n    giangvien.hasMany(models.lophoc, {\n      foreignKey: 'id_giangvien',\n      as: 'lophocs',\n      onDelete: 'CASCADE'\n    });\n  };\n\n  return giangvien;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdpYW5ndmllbi5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwic2VxdWVsaXplIiwiRGF0YVR5cGVzIiwiZ2lhbmd2aWVuIiwiZGVmaW5lIiwiaG90ZW4iLCJTVFJJTkciLCJzZHQiLCJJTlRFR0VSIiwiZGlhY2hpIiwiZW1haWwiLCJnaW9pdGluaCIsImxpbmh2dWMiLCJURVhUIiwiaGluaGFuaCIsInRyYW5ndGhhaSIsImlkX3RrIiwiYXNzb2NpYXRlIiwibW9kZWxzIiwiaGFzTWFueSIsImxvcGhvYyIsImZvcmVpZ25LZXkiLCJhcyIsIm9uRGVsZXRlIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUN6QyxNQUFNQyxTQUFTLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUFpQixXQUFqQixFQUE4QjtBQUM5Q0MsSUFBQUEsS0FBSyxFQUFFSCxTQUFTLENBQUNJLE1BRDZCO0FBRTlDQyxJQUFBQSxHQUFHLEVBQUVMLFNBQVMsQ0FBQ00sT0FGK0I7QUFHOUNDLElBQUFBLE1BQU0sRUFBRVAsU0FBUyxDQUFDSSxNQUg0QjtBQUk5Q0ksSUFBQUEsS0FBSyxFQUFFUixTQUFTLENBQUNJLE1BSjZCO0FBSzlDSyxJQUFBQSxRQUFRLEVBQUVULFNBQVMsQ0FBQ0ksTUFMMEI7QUFNOUNNLElBQUFBLE9BQU8sRUFBRVYsU0FBUyxDQUFDVyxJQU4yQjtBQU85Q0MsSUFBQUEsT0FBTyxFQUFFWixTQUFTLENBQUNJLE1BUDJCO0FBUTlDUyxJQUFBQSxTQUFTLEVBQUViLFNBQVMsQ0FBQ00sT0FSeUI7QUFTOUNRLElBQUFBLEtBQUssRUFBRWQsU0FBUyxDQUFDTTtBQVQ2QixHQUE5QixFQVVmLEVBVmUsQ0FBbEI7O0FBV0FMLEVBQUFBLFNBQVMsQ0FBQ2MsU0FBVixHQUFzQixVQUFTQyxNQUFULEVBQWlCO0FBQ3JDO0FBQ0FmLElBQUFBLFNBQVMsQ0FBQ2dCLE9BQVYsQ0FBa0JELE1BQU0sQ0FBQ0UsTUFBekIsRUFBaUM7QUFDbENDLE1BQUFBLFVBQVUsRUFBRSxjQURzQjtBQUVsQ0MsTUFBQUEsRUFBRSxFQUFFLFNBRjhCO0FBR2xDQyxNQUFBQSxRQUFRLEVBQUU7QUFId0IsS0FBakM7QUFNRCxHQVJEOztBQVNBLFNBQU9wQixTQUFQO0FBQ0QsQ0F0QkQiLCJzb3VyY2VSb290IjoiRDpcXEx1YW5WYW5cXEx1YW5WYW5EMlxcdHJ1bmd0YW1fbGFuNFxcTW9kZWxcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbm1vZHVsZS5leHBvcnRzID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XG4gIGNvbnN0IGdpYW5ndmllbiA9IHNlcXVlbGl6ZS5kZWZpbmUoJ2dpYW5ndmllbicsIHtcbiAgICBob3RlbjogRGF0YVR5cGVzLlNUUklORyxcbiAgICBzZHQ6IERhdGFUeXBlcy5JTlRFR0VSLFxuICAgIGRpYWNoaTogRGF0YVR5cGVzLlNUUklORyxcbiAgICBlbWFpbDogRGF0YVR5cGVzLlNUUklORyxcbiAgICBnaW9pdGluaDogRGF0YVR5cGVzLlNUUklORyxcbiAgICBsaW5odnVjOiBEYXRhVHlwZXMuVEVYVCxcbiAgICBoaW5oYW5oOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIHRyYW5ndGhhaTogRGF0YVR5cGVzLklOVEVHRVIsXG4gICAgaWRfdGs6IERhdGFUeXBlcy5JTlRFR0VSXG4gIH0sIHt9KTtcbiAgZ2lhbmd2aWVuLmFzc29jaWF0ZSA9IGZ1bmN0aW9uKG1vZGVscykge1xuICAgIC8vIGFzc29jaWF0aW9ucyBjYW4gYmUgZGVmaW5lZCBoZXJlXG4gICAgZ2lhbmd2aWVuLmhhc01hbnkobW9kZWxzLmxvcGhvYywge1xuXHRcdFx0Zm9yZWlnbktleTogJ2lkX2dpYW5ndmllbicsXG5cdFx0XHRhczogJ2xvcGhvY3MnLFxuXHRcdFx0b25EZWxldGU6ICdDQVNDQURFJyxcblx0XHR9KTtcblxuICB9O1xuICByZXR1cm4gZ2lhbmd2aWVuO1xufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "giangvien.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "giangvien",
        "define",
        "hoten",
        "STRING",
        "sdt",
        "INTEGER",
        "diachi",
        "email",
        "gioitinh",
        "linhvuc",
        "TEXT",
        "hinhanh",
        "trangthai",
        "id_tk",
        "associate",
        "models",
        "hasMany",
        "lophoc",
        "foreignKey",
        "as",
        "onDelete"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,SAAS,GAAGF,SAAS,CAACG,MAAV,CAAiB,WAAjB,EAA8B;AAC9CC,IAAAA,KAAK,EAAEH,SAAS,CAACI,MAD6B;AAE9CC,IAAAA,GAAG,EAAEL,SAAS,CAACM,OAF+B;AAG9CC,IAAAA,MAAM,EAAEP,SAAS,CAACI,MAH4B;AAI9CI,IAAAA,KAAK,EAAER,SAAS,CAACI,MAJ6B;AAK9CK,IAAAA,QAAQ,EAAET,SAAS,CAACI,MAL0B;AAM9CM,IAAAA,OAAO,EAAEV,SAAS,CAACW,IAN2B;AAO9CC,IAAAA,OAAO,EAAEZ,SAAS,CAACI,MAP2B;AAQ9CS,IAAAA,SAAS,EAAEb,SAAS,CAACM,OARyB;AAS9CQ,IAAAA,KAAK,EAAEd,SAAS,CAACM;AAT6B,GAA9B,EAUf,EAVe,CAAlB;;AAWAL,EAAAA,SAAS,CAACc,SAAV,GAAsB,UAASC,MAAT,EAAiB;AACrC;AACAf,IAAAA,SAAS,CAACgB,OAAV,CAAkBD,MAAM,CAACE,MAAzB,EAAiC;AAClCC,MAAAA,UAAU,EAAE,cADsB;AAElCC,MAAAA,EAAE,EAAE,SAF8B;AAGlCC,MAAAA,QAAQ,EAAE;AAHwB,KAAjC;AAMD,GARD;;AASA,SAAOpB,SAAP;AACD,CAtBD",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const giangvien = sequelize.define('giangvien', {\n    hoten: DataTypes.STRING,\n    sdt: DataTypes.INTEGER,\n    diachi: DataTypes.STRING,\n    email: DataTypes.STRING,\n    gioitinh: DataTypes.STRING,\n    linhvuc: DataTypes.TEXT,\n    hinhanh: DataTypes.STRING,\n    trangthai: DataTypes.INTEGER,\n    id_tk: DataTypes.INTEGER\n  }, {});\n  giangvien.associate = function(models) {\n    // associations can be defined here\n    giangvien.hasMany(models.lophoc, {\n\t\t\tforeignKey: 'id_giangvien',\n\t\t\tas: 'lophocs',\n\t\t\tonDelete: 'CASCADE',\n\t\t});\n\n  };\n  return giangvien;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1584801687634
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\Model\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\Model\\\\models\\\\khoahoc.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models\\khoahoc.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models\\khoahoc.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models\\khoahoc.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models",
        "sourceFileName": "khoahoc.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var khoahoc = sequelize.define('khoahoc', {\n    tenkhoahoc: DataTypes.STRING,\n    hinhanh: DataTypes.STRING,\n    loaikhoahoc: DataTypes.STRING,\n    trangthai: DataTypes.INTEGER\n  }, {});\n\n  khoahoc.associate = function (models) {\n    // associations can be defined here\n    khoahoc.hasMany(models.lophoc, {\n      foreignKey: 'id_phonghoc',\n      as: 'lophocs',\n      onDelete: 'CASCADE'\n    });\n  };\n\n  return khoahoc;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImtob2Fob2MuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsImtob2Fob2MiLCJkZWZpbmUiLCJ0ZW5raG9haG9jIiwiU1RSSU5HIiwiaGluaGFuaCIsImxvYWlraG9haG9jIiwidHJhbmd0aGFpIiwiSU5URUdFUiIsImFzc29jaWF0ZSIsIm1vZGVscyIsImhhc01hbnkiLCJsb3Bob2MiLCJmb3JlaWduS2V5IiwiYXMiLCJvbkRlbGV0ZSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0FBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFDQyxTQUFELEVBQVlDLFNBQVosRUFBMEI7QUFDekMsTUFBTUMsT0FBTyxHQUFHRixTQUFTLENBQUNHLE1BQVYsQ0FBaUIsU0FBakIsRUFBNEI7QUFDMUNDLElBQUFBLFVBQVUsRUFBRUgsU0FBUyxDQUFDSSxNQURvQjtBQUUxQ0MsSUFBQUEsT0FBTyxFQUFFTCxTQUFTLENBQUNJLE1BRnVCO0FBRzFDRSxJQUFBQSxXQUFXLEVBQUVOLFNBQVMsQ0FBQ0ksTUFIbUI7QUFJMUNHLElBQUFBLFNBQVMsRUFBRVAsU0FBUyxDQUFDUTtBQUpxQixHQUE1QixFQUtiLEVBTGEsQ0FBaEI7O0FBTUFQLEVBQUFBLE9BQU8sQ0FBQ1EsU0FBUixHQUFvQixVQUFTQyxNQUFULEVBQWlCO0FBQ25DO0FBQ0FULElBQUFBLE9BQU8sQ0FBQ1UsT0FBUixDQUFnQkQsTUFBTSxDQUFDRSxNQUF2QixFQUErQjtBQUNoQ0MsTUFBQUEsVUFBVSxFQUFFLGFBRG9CO0FBRWhDQyxNQUFBQSxFQUFFLEVBQUUsU0FGNEI7QUFHaENDLE1BQUFBLFFBQVEsRUFBRTtBQUhzQixLQUEvQjtBQUtELEdBUEQ7O0FBUUEsU0FBT2QsT0FBUDtBQUNELENBaEJEIiwic291cmNlUm9vdCI6IkQ6XFxMdWFuVmFuXFxMdWFuVmFuRDJcXHRydW5ndGFtX2xhbjRcXE1vZGVsXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IChzZXF1ZWxpemUsIERhdGFUeXBlcykgPT4ge1xuICBjb25zdCBraG9haG9jID0gc2VxdWVsaXplLmRlZmluZSgna2hvYWhvYycsIHtcbiAgICB0ZW5raG9haG9jOiBEYXRhVHlwZXMuU1RSSU5HLCAgIFxuICAgIGhpbmhhbmg6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgbG9haWtob2Fob2M6IERhdGFUeXBlcy5TVFJJTkcsICAgXG4gICAgdHJhbmd0aGFpOiBEYXRhVHlwZXMuSU5URUdFUlxuICB9LCB7fSk7XG4gIGtob2Fob2MuYXNzb2NpYXRlID0gZnVuY3Rpb24obW9kZWxzKSB7XG4gICAgLy8gYXNzb2NpYXRpb25zIGNhbiBiZSBkZWZpbmVkIGhlcmVcbiAgICBraG9haG9jLmhhc01hbnkobW9kZWxzLmxvcGhvYywge1xuXHRcdFx0Zm9yZWlnbktleTogJ2lkX3Bob25naG9jJyxcblx0XHRcdGFzOiAnbG9waG9jcycsXG5cdFx0XHRvbkRlbGV0ZTogJ0NBU0NBREUnLFxuXHRcdH0pO1xuICB9O1xuICByZXR1cm4ga2hvYWhvYztcbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "khoahoc.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "khoahoc",
        "define",
        "tenkhoahoc",
        "STRING",
        "hinhanh",
        "loaikhoahoc",
        "trangthai",
        "INTEGER",
        "associate",
        "models",
        "hasMany",
        "lophoc",
        "foreignKey",
        "as",
        "onDelete"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,OAAO,GAAGF,SAAS,CAACG,MAAV,CAAiB,SAAjB,EAA4B;AAC1CC,IAAAA,UAAU,EAAEH,SAAS,CAACI,MADoB;AAE1CC,IAAAA,OAAO,EAAEL,SAAS,CAACI,MAFuB;AAG1CE,IAAAA,WAAW,EAAEN,SAAS,CAACI,MAHmB;AAI1CG,IAAAA,SAAS,EAAEP,SAAS,CAACQ;AAJqB,GAA5B,EAKb,EALa,CAAhB;;AAMAP,EAAAA,OAAO,CAACQ,SAAR,GAAoB,UAASC,MAAT,EAAiB;AACnC;AACAT,IAAAA,OAAO,CAACU,OAAR,CAAgBD,MAAM,CAACE,MAAvB,EAA+B;AAChCC,MAAAA,UAAU,EAAE,aADoB;AAEhCC,MAAAA,EAAE,EAAE,SAF4B;AAGhCC,MAAAA,QAAQ,EAAE;AAHsB,KAA/B;AAKD,GAPD;;AAQA,SAAOd,OAAP;AACD,CAhBD",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const khoahoc = sequelize.define('khoahoc', {\n    tenkhoahoc: DataTypes.STRING,   \n    hinhanh: DataTypes.STRING,\n    loaikhoahoc: DataTypes.STRING,   \n    trangthai: DataTypes.INTEGER\n  }, {});\n  khoahoc.associate = function(models) {\n    // associations can be defined here\n    khoahoc.hasMany(models.lophoc, {\n\t\t\tforeignKey: 'id_phonghoc',\n\t\t\tas: 'lophocs',\n\t\t\tonDelete: 'CASCADE',\n\t\t});\n  };\n  return khoahoc;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1583394535046
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\Model\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\Model\\\\models\\\\lophoc.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models\\lophoc.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models\\lophoc.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models\\lophoc.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models",
        "sourceFileName": "lophoc.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var lophoc = sequelize.define('lophoc', {\n    tenlophoc: DataTypes.STRING,\n    id_giangvien: DataTypes.INTEGER,\n    id_phonghoc: DataTypes.INTEGER,\n    thoigianbatdau: DataTypes.DATE,\n    thoiluonghoc: DataTypes.STRING,\n    soluonghocvien: DataTypes.INTEGER,\n    thoigianhoc: DataTypes.STRING,\n    phidichvu: DataTypes.INTEGER,\n    dieukienhoc: DataTypes.TEXT,\n    trangthai: DataTypes.INTEGER\n  }, {});\n\n  lophoc.associate = function (models) {\n    // associations can be defined here\n    lophoc.belongsTo(models.phonghoc, {\n      foreignKey: 'id',\n      as: 'phonghocs',\n      onDelete: 'CASCADE'\n    });\n    lophoc.belongsTo(models.giangvien, {\n      foreignKey: 'id',\n      as: 'giangviens',\n      onDelete: 'CASCADE'\n    });\n    lophoc.belongsTo(models.khoahoc, {\n      foreignKey: 'id',\n      as: 'khoahocs',\n      onDelete: 'CASCADE'\n    });\n    lophoc.hasMany(models.dangky, {\n      foreignKey: 'id_lophoc',\n      as: 'dangkies',\n      onDelete: 'CASCADE'\n    });\n  };\n\n  return lophoc;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvcGhvYy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwic2VxdWVsaXplIiwiRGF0YVR5cGVzIiwibG9waG9jIiwiZGVmaW5lIiwidGVubG9waG9jIiwiU1RSSU5HIiwiaWRfZ2lhbmd2aWVuIiwiSU5URUdFUiIsImlkX3Bob25naG9jIiwidGhvaWdpYW5iYXRkYXUiLCJEQVRFIiwidGhvaWx1b25naG9jIiwic29sdW9uZ2hvY3ZpZW4iLCJ0aG9pZ2lhbmhvYyIsInBoaWRpY2h2dSIsImRpZXVraWVuaG9jIiwiVEVYVCIsInRyYW5ndGhhaSIsImFzc29jaWF0ZSIsIm1vZGVscyIsImJlbG9uZ3NUbyIsInBob25naG9jIiwiZm9yZWlnbktleSIsImFzIiwib25EZWxldGUiLCJnaWFuZ3ZpZW4iLCJraG9haG9jIiwiaGFzTWFueSIsImRhbmdreSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0FBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFDQyxTQUFELEVBQVlDLFNBQVosRUFBMEI7QUFDekMsTUFBTUMsTUFBTSxHQUFHRixTQUFTLENBQUNHLE1BQVYsQ0FBaUIsUUFBakIsRUFBMkI7QUFDeENDLElBQUFBLFNBQVMsRUFBRUgsU0FBUyxDQUFDSSxNQURtQjtBQUV4Q0MsSUFBQUEsWUFBWSxFQUFFTCxTQUFTLENBQUNNLE9BRmdCO0FBR3hDQyxJQUFBQSxXQUFXLEVBQUVQLFNBQVMsQ0FBQ00sT0FIaUI7QUFJeENFLElBQUFBLGNBQWMsRUFBRVIsU0FBUyxDQUFDUyxJQUpjO0FBS3hDQyxJQUFBQSxZQUFZLEVBQUVWLFNBQVMsQ0FBQ0ksTUFMZ0I7QUFNeENPLElBQUFBLGNBQWMsRUFBRVgsU0FBUyxDQUFDTSxPQU5jO0FBT3hDTSxJQUFBQSxXQUFXLEVBQUVaLFNBQVMsQ0FBQ0ksTUFQaUI7QUFReENTLElBQUFBLFNBQVMsRUFBRWIsU0FBUyxDQUFDTSxPQVJtQjtBQVN4Q1EsSUFBQUEsV0FBVyxFQUFFZCxTQUFTLENBQUNlLElBVGlCO0FBVXhDQyxJQUFBQSxTQUFTLEVBQUVoQixTQUFTLENBQUNNO0FBVm1CLEdBQTNCLEVBV1osRUFYWSxDQUFmOztBQVlBTCxFQUFBQSxNQUFNLENBQUNnQixTQUFQLEdBQW1CLFVBQVNDLE1BQVQsRUFBaUI7QUFDbEM7QUFDQWpCLElBQUFBLE1BQU0sQ0FBQ2tCLFNBQVAsQ0FBaUJELE1BQU0sQ0FBQ0UsUUFBeEIsRUFBa0M7QUFDbkNDLE1BQUFBLFVBQVUsRUFBRSxJQUR1QjtBQUVuQ0MsTUFBQUEsRUFBRSxFQUFFLFdBRitCO0FBR25DQyxNQUFBQSxRQUFRLEVBQUU7QUFIeUIsS0FBbEM7QUFLQXRCLElBQUFBLE1BQU0sQ0FBQ2tCLFNBQVAsQ0FBaUJELE1BQU0sQ0FBQ00sU0FBeEIsRUFBbUM7QUFDcENILE1BQUFBLFVBQVUsRUFBRSxJQUR3QjtBQUVwQ0MsTUFBQUEsRUFBRSxFQUFFLFlBRmdDO0FBR3BDQyxNQUFBQSxRQUFRLEVBQUU7QUFIMEIsS0FBbkM7QUFLQXRCLElBQUFBLE1BQU0sQ0FBQ2tCLFNBQVAsQ0FBaUJELE1BQU0sQ0FBQ08sT0FBeEIsRUFBaUM7QUFDbENKLE1BQUFBLFVBQVUsRUFBRSxJQURzQjtBQUVsQ0MsTUFBQUEsRUFBRSxFQUFFLFVBRjhCO0FBR2xDQyxNQUFBQSxRQUFRLEVBQUU7QUFId0IsS0FBakM7QUFLQXRCLElBQUFBLE1BQU0sQ0FBQ3lCLE9BQVAsQ0FBZVIsTUFBTSxDQUFDUyxNQUF0QixFQUE4QjtBQUMvQk4sTUFBQUEsVUFBVSxFQUFFLFdBRG1CO0FBRS9CQyxNQUFBQSxFQUFFLEVBQUUsVUFGMkI7QUFHL0JDLE1BQUFBLFFBQVEsRUFBRTtBQUhxQixLQUE5QjtBQU1ELEdBdkJEOztBQXdCQSxTQUFPdEIsTUFBUDtBQUNELENBdENEIiwic291cmNlUm9vdCI6IkQ6XFxMdWFuVmFuXFxMdWFuVmFuRDJcXHRydW5ndGFtX2xhbjRcXE1vZGVsXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IChzZXF1ZWxpemUsIERhdGFUeXBlcykgPT4ge1xuICBjb25zdCBsb3Bob2MgPSBzZXF1ZWxpemUuZGVmaW5lKCdsb3Bob2MnLCB7XG4gICAgdGVubG9waG9jOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIGlkX2dpYW5ndmllbjogRGF0YVR5cGVzLklOVEVHRVIsXG4gICAgaWRfcGhvbmdob2M6IERhdGFUeXBlcy5JTlRFR0VSLFxuICAgIHRob2lnaWFuYmF0ZGF1OiBEYXRhVHlwZXMuREFURSxcbiAgICB0aG9pbHVvbmdob2M6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgc29sdW9uZ2hvY3ZpZW46IERhdGFUeXBlcy5JTlRFR0VSLFxuICAgIHRob2lnaWFuaG9jOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIHBoaWRpY2h2dTogRGF0YVR5cGVzLklOVEVHRVIsXG4gICAgZGlldWtpZW5ob2M6IERhdGFUeXBlcy5URVhULCAgICAgXG4gICAgdHJhbmd0aGFpOiBEYXRhVHlwZXMuSU5URUdFUlxuICB9LCB7fSk7XG4gIGxvcGhvYy5hc3NvY2lhdGUgPSBmdW5jdGlvbihtb2RlbHMpIHtcbiAgICAvLyBhc3NvY2lhdGlvbnMgY2FuIGJlIGRlZmluZWQgaGVyZVxuICAgIGxvcGhvYy5iZWxvbmdzVG8obW9kZWxzLnBob25naG9jLCB7XG5cdFx0XHRmb3JlaWduS2V5OiAnaWQnLFxuXHRcdFx0YXM6ICdwaG9uZ2hvY3MnLFxuXHRcdFx0b25EZWxldGU6ICdDQVNDQURFJyxcbiAgICB9KTtcbiAgICBsb3Bob2MuYmVsb25nc1RvKG1vZGVscy5naWFuZ3ZpZW4sIHtcblx0XHRcdGZvcmVpZ25LZXk6ICdpZCcsXG5cdFx0XHRhczogJ2dpYW5ndmllbnMnLFxuXHRcdFx0b25EZWxldGU6ICdDQVNDQURFJyxcbiAgICB9KTtcbiAgICBsb3Bob2MuYmVsb25nc1RvKG1vZGVscy5raG9haG9jLCB7XG5cdFx0XHRmb3JlaWduS2V5OiAnaWQnLFxuXHRcdFx0YXM6ICdraG9haG9jcycsXG5cdFx0XHRvbkRlbGV0ZTogJ0NBU0NBREUnLFxuICAgIH0pO1xuICAgIGxvcGhvYy5oYXNNYW55KG1vZGVscy5kYW5na3ksIHtcblx0XHRcdGZvcmVpZ25LZXk6ICdpZF9sb3Bob2MnLFxuXHRcdFx0YXM6ICdkYW5na2llcycsXG5cdFx0XHRvbkRlbGV0ZTogJ0NBU0NBREUnLFxuXHRcdH0pO1xuXG4gIH07XG4gIHJldHVybiBsb3Bob2M7XG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "lophoc.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "lophoc",
        "define",
        "tenlophoc",
        "STRING",
        "id_giangvien",
        "INTEGER",
        "id_phonghoc",
        "thoigianbatdau",
        "DATE",
        "thoiluonghoc",
        "soluonghocvien",
        "thoigianhoc",
        "phidichvu",
        "dieukienhoc",
        "TEXT",
        "trangthai",
        "associate",
        "models",
        "belongsTo",
        "phonghoc",
        "foreignKey",
        "as",
        "onDelete",
        "giangvien",
        "khoahoc",
        "hasMany",
        "dangky"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,MAAM,GAAGF,SAAS,CAACG,MAAV,CAAiB,QAAjB,EAA2B;AACxCC,IAAAA,SAAS,EAAEH,SAAS,CAACI,MADmB;AAExCC,IAAAA,YAAY,EAAEL,SAAS,CAACM,OAFgB;AAGxCC,IAAAA,WAAW,EAAEP,SAAS,CAACM,OAHiB;AAIxCE,IAAAA,cAAc,EAAER,SAAS,CAACS,IAJc;AAKxCC,IAAAA,YAAY,EAAEV,SAAS,CAACI,MALgB;AAMxCO,IAAAA,cAAc,EAAEX,SAAS,CAACM,OANc;AAOxCM,IAAAA,WAAW,EAAEZ,SAAS,CAACI,MAPiB;AAQxCS,IAAAA,SAAS,EAAEb,SAAS,CAACM,OARmB;AASxCQ,IAAAA,WAAW,EAAEd,SAAS,CAACe,IATiB;AAUxCC,IAAAA,SAAS,EAAEhB,SAAS,CAACM;AAVmB,GAA3B,EAWZ,EAXY,CAAf;;AAYAL,EAAAA,MAAM,CAACgB,SAAP,GAAmB,UAASC,MAAT,EAAiB;AAClC;AACAjB,IAAAA,MAAM,CAACkB,SAAP,CAAiBD,MAAM,CAACE,QAAxB,EAAkC;AACnCC,MAAAA,UAAU,EAAE,IADuB;AAEnCC,MAAAA,EAAE,EAAE,WAF+B;AAGnCC,MAAAA,QAAQ,EAAE;AAHyB,KAAlC;AAKAtB,IAAAA,MAAM,CAACkB,SAAP,CAAiBD,MAAM,CAACM,SAAxB,EAAmC;AACpCH,MAAAA,UAAU,EAAE,IADwB;AAEpCC,MAAAA,EAAE,EAAE,YAFgC;AAGpCC,MAAAA,QAAQ,EAAE;AAH0B,KAAnC;AAKAtB,IAAAA,MAAM,CAACkB,SAAP,CAAiBD,MAAM,CAACO,OAAxB,EAAiC;AAClCJ,MAAAA,UAAU,EAAE,IADsB;AAElCC,MAAAA,EAAE,EAAE,UAF8B;AAGlCC,MAAAA,QAAQ,EAAE;AAHwB,KAAjC;AAKAtB,IAAAA,MAAM,CAACyB,OAAP,CAAeR,MAAM,CAACS,MAAtB,EAA8B;AAC/BN,MAAAA,UAAU,EAAE,WADmB;AAE/BC,MAAAA,EAAE,EAAE,UAF2B;AAG/BC,MAAAA,QAAQ,EAAE;AAHqB,KAA9B;AAMD,GAvBD;;AAwBA,SAAOtB,MAAP;AACD,CAtCD",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const lophoc = sequelize.define('lophoc', {\n    tenlophoc: DataTypes.STRING,\n    id_giangvien: DataTypes.INTEGER,\n    id_phonghoc: DataTypes.INTEGER,\n    thoigianbatdau: DataTypes.DATE,\n    thoiluonghoc: DataTypes.STRING,\n    soluonghocvien: DataTypes.INTEGER,\n    thoigianhoc: DataTypes.STRING,\n    phidichvu: DataTypes.INTEGER,\n    dieukienhoc: DataTypes.TEXT,     \n    trangthai: DataTypes.INTEGER\n  }, {});\n  lophoc.associate = function(models) {\n    // associations can be defined here\n    lophoc.belongsTo(models.phonghoc, {\n\t\t\tforeignKey: 'id',\n\t\t\tas: 'phonghocs',\n\t\t\tonDelete: 'CASCADE',\n    });\n    lophoc.belongsTo(models.giangvien, {\n\t\t\tforeignKey: 'id',\n\t\t\tas: 'giangviens',\n\t\t\tonDelete: 'CASCADE',\n    });\n    lophoc.belongsTo(models.khoahoc, {\n\t\t\tforeignKey: 'id',\n\t\t\tas: 'khoahocs',\n\t\t\tonDelete: 'CASCADE',\n    });\n    lophoc.hasMany(models.dangky, {\n\t\t\tforeignKey: 'id_lophoc',\n\t\t\tas: 'dangkies',\n\t\t\tonDelete: 'CASCADE',\n\t\t});\n\n  };\n  return lophoc;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1583394602702
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\Model\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\Model\\\\models\\\\phanhoi.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models\\phanhoi.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models\\phanhoi.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models\\phanhoi.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models",
        "sourceFileName": "phanhoi.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var phanhoi = sequelize.define('phanhoi', {\n    noidungtraloi: DataTypes.TEXT,\n    id_tktraloi: DataTypes.INTEGER,\n    id_diendan: DataTypes.INTEGER\n  }, {});\n\n  phanhoi.associate = function (models) {\n    // associations can be defined here\n    phanhoi.belongsTo(models.diendan, {\n      foreignKey: 'id',\n      as: 'diendans',\n      onDelete: 'CASCADE'\n    });\n    phanhoi.belongsTo(models.taikhoan, {\n      foreignKey: 'id',\n      as: 'taikhoans',\n      onDelete: 'CASCADE'\n    });\n  };\n\n  return phanhoi;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBoYW5ob2kuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsInBoYW5ob2kiLCJkZWZpbmUiLCJub2lkdW5ndHJhbG9pIiwiVEVYVCIsImlkX3RrdHJhbG9pIiwiSU5URUdFUiIsImlkX2RpZW5kYW4iLCJhc3NvY2lhdGUiLCJtb2RlbHMiLCJiZWxvbmdzVG8iLCJkaWVuZGFuIiwiZm9yZWlnbktleSIsImFzIiwib25EZWxldGUiLCJ0YWlraG9hbiJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0FBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFDQyxTQUFELEVBQVlDLFNBQVosRUFBMEI7QUFDekMsTUFBTUMsT0FBTyxHQUFHRixTQUFTLENBQUNHLE1BQVYsQ0FBaUIsU0FBakIsRUFBNEI7QUFDMUNDLElBQUFBLGFBQWEsRUFBRUgsU0FBUyxDQUFDSSxJQURpQjtBQUUxQ0MsSUFBQUEsV0FBVyxFQUFFTCxTQUFTLENBQUNNLE9BRm1CO0FBRzFDQyxJQUFBQSxVQUFVLEVBQUVQLFNBQVMsQ0FBQ007QUFIb0IsR0FBNUIsRUFJYixFQUphLENBQWhCOztBQUtBTCxFQUFBQSxPQUFPLENBQUNPLFNBQVIsR0FBb0IsVUFBU0MsTUFBVCxFQUFpQjtBQUNuQztBQUNBUixJQUFBQSxPQUFPLENBQUNTLFNBQVIsQ0FBa0JELE1BQU0sQ0FBQ0UsT0FBekIsRUFBaUM7QUFDbENDLE1BQUFBLFVBQVUsRUFBRSxJQURzQjtBQUVsQ0MsTUFBQUEsRUFBRSxFQUFFLFVBRjhCO0FBR2xDQyxNQUFBQSxRQUFRLEVBQUU7QUFId0IsS0FBakM7QUFLQWIsSUFBQUEsT0FBTyxDQUFDUyxTQUFSLENBQWtCRCxNQUFNLENBQUNNLFFBQXpCLEVBQW1DO0FBQ3BDSCxNQUFBQSxVQUFVLEVBQUUsSUFEd0I7QUFFcENDLE1BQUFBLEVBQUUsRUFBRSxXQUZnQztBQUdwQ0MsTUFBQUEsUUFBUSxFQUFFO0FBSDBCLEtBQW5DO0FBS0QsR0FaRDs7QUFhQSxTQUFPYixPQUFQO0FBQ0QsQ0FwQkQiLCJzb3VyY2VSb290IjoiRDpcXEx1YW5WYW5cXEx1YW5WYW5EMlxcdHJ1bmd0YW1fbGFuNFxcTW9kZWxcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbm1vZHVsZS5leHBvcnRzID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XG4gIGNvbnN0IHBoYW5ob2kgPSBzZXF1ZWxpemUuZGVmaW5lKCdwaGFuaG9pJywgeyAgIFxuICAgIG5vaWR1bmd0cmFsb2k6IERhdGFUeXBlcy5URVhULCAgIFxuICAgIGlkX3RrdHJhbG9pOiBEYXRhVHlwZXMuSU5URUdFUixcbiAgICBpZF9kaWVuZGFuOiBEYXRhVHlwZXMuSU5URUdFUlxuICB9LCB7fSk7XG4gIHBoYW5ob2kuYXNzb2NpYXRlID0gZnVuY3Rpb24obW9kZWxzKSB7XG4gICAgLy8gYXNzb2NpYXRpb25zIGNhbiBiZSBkZWZpbmVkIGhlcmVcbiAgICBwaGFuaG9pLmJlbG9uZ3NUbyhtb2RlbHMuZGllbmRhbix7XG5cdFx0XHRmb3JlaWduS2V5OiAnaWQnLFxuXHRcdFx0YXM6ICdkaWVuZGFucycsXG5cdFx0XHRvbkRlbGV0ZTogJ0NBU0NBREUnLFxuICAgIH0pO1xuICAgIHBoYW5ob2kuYmVsb25nc1RvKG1vZGVscy50YWlraG9hbiwge1xuXHRcdFx0Zm9yZWlnbktleTogJ2lkJyxcblx0XHRcdGFzOiAndGFpa2hvYW5zJyxcblx0XHRcdG9uRGVsZXRlOiAnQ0FTQ0FERScsXG4gICAgfSk7XG4gIH07XG4gIHJldHVybiBwaGFuaG9pO1xufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "phanhoi.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "phanhoi",
        "define",
        "noidungtraloi",
        "TEXT",
        "id_tktraloi",
        "INTEGER",
        "id_diendan",
        "associate",
        "models",
        "belongsTo",
        "diendan",
        "foreignKey",
        "as",
        "onDelete",
        "taikhoan"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,OAAO,GAAGF,SAAS,CAACG,MAAV,CAAiB,SAAjB,EAA4B;AAC1CC,IAAAA,aAAa,EAAEH,SAAS,CAACI,IADiB;AAE1CC,IAAAA,WAAW,EAAEL,SAAS,CAACM,OAFmB;AAG1CC,IAAAA,UAAU,EAAEP,SAAS,CAACM;AAHoB,GAA5B,EAIb,EAJa,CAAhB;;AAKAL,EAAAA,OAAO,CAACO,SAAR,GAAoB,UAASC,MAAT,EAAiB;AACnC;AACAR,IAAAA,OAAO,CAACS,SAAR,CAAkBD,MAAM,CAACE,OAAzB,EAAiC;AAClCC,MAAAA,UAAU,EAAE,IADsB;AAElCC,MAAAA,EAAE,EAAE,UAF8B;AAGlCC,MAAAA,QAAQ,EAAE;AAHwB,KAAjC;AAKAb,IAAAA,OAAO,CAACS,SAAR,CAAkBD,MAAM,CAACM,QAAzB,EAAmC;AACpCH,MAAAA,UAAU,EAAE,IADwB;AAEpCC,MAAAA,EAAE,EAAE,WAFgC;AAGpCC,MAAAA,QAAQ,EAAE;AAH0B,KAAnC;AAKD,GAZD;;AAaA,SAAOb,OAAP;AACD,CApBD",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const phanhoi = sequelize.define('phanhoi', {   \n    noidungtraloi: DataTypes.TEXT,   \n    id_tktraloi: DataTypes.INTEGER,\n    id_diendan: DataTypes.INTEGER\n  }, {});\n  phanhoi.associate = function(models) {\n    // associations can be defined here\n    phanhoi.belongsTo(models.diendan,{\n\t\t\tforeignKey: 'id',\n\t\t\tas: 'diendans',\n\t\t\tonDelete: 'CASCADE',\n    });\n    phanhoi.belongsTo(models.taikhoan, {\n\t\t\tforeignKey: 'id',\n\t\t\tas: 'taikhoans',\n\t\t\tonDelete: 'CASCADE',\n    });\n  };\n  return phanhoi;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1583394747863
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\Model\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\Model\\\\models\\\\phanquyen.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models\\phanquyen.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models\\phanquyen.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models\\phanquyen.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models",
        "sourceFileName": "phanquyen.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var phanquyen = sequelize.define('phanquyen', {\n    quyenhang: DataTypes.STRING,\n    trangthai: DataTypes.INTEGER\n  }, {});\n\n  phanquyen.associate = function (models) {\n    // associations can be defined here\n    phanquyen.hasMany(models.taikhoan, {\n      foreignKey: 'quyenhang',\n      as: 'taikhoans',\n      onDelete: 'CASCADE'\n    });\n  };\n\n  return phanquyen;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBoYW5xdXllbi5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwic2VxdWVsaXplIiwiRGF0YVR5cGVzIiwicGhhbnF1eWVuIiwiZGVmaW5lIiwicXV5ZW5oYW5nIiwiU1RSSU5HIiwidHJhbmd0aGFpIiwiSU5URUdFUiIsImFzc29jaWF0ZSIsIm1vZGVscyIsImhhc01hbnkiLCJ0YWlraG9hbiIsImZvcmVpZ25LZXkiLCJhcyIsIm9uRGVsZXRlIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUN6QyxNQUFNQyxTQUFTLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUFpQixXQUFqQixFQUE4QjtBQUM5Q0MsSUFBQUEsU0FBUyxFQUFFSCxTQUFTLENBQUNJLE1BRHlCO0FBRTlDQyxJQUFBQSxTQUFTLEVBQUVMLFNBQVMsQ0FBQ007QUFGeUIsR0FBOUIsRUFHZixFQUhlLENBQWxCOztBQUlBTCxFQUFBQSxTQUFTLENBQUNNLFNBQVYsR0FBc0IsVUFBU0MsTUFBVCxFQUFpQjtBQUNyQztBQUNBUCxJQUFBQSxTQUFTLENBQUNRLE9BQVYsQ0FBa0JELE1BQU0sQ0FBQ0UsUUFBekIsRUFBbUM7QUFDcENDLE1BQUFBLFVBQVUsRUFBRSxXQUR3QjtBQUVwQ0MsTUFBQUEsRUFBRSxFQUFFLFdBRmdDO0FBR3BDQyxNQUFBQSxRQUFRLEVBQUU7QUFIMEIsS0FBbkM7QUFNRCxHQVJEOztBQVNBLFNBQU9aLFNBQVA7QUFDRCxDQWZEIiwic291cmNlUm9vdCI6IkQ6XFxMdWFuVmFuXFxMdWFuVmFuRDJcXHRydW5ndGFtX2xhbjRcXE1vZGVsXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IChzZXF1ZWxpemUsIERhdGFUeXBlcykgPT4ge1xuICBjb25zdCBwaGFucXV5ZW4gPSBzZXF1ZWxpemUuZGVmaW5lKCdwaGFucXV5ZW4nLCB7XG4gICAgcXV5ZW5oYW5nOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIHRyYW5ndGhhaTogRGF0YVR5cGVzLklOVEVHRVJcbiAgfSwge30pO1xuICBwaGFucXV5ZW4uYXNzb2NpYXRlID0gZnVuY3Rpb24obW9kZWxzKSB7XG4gICAgLy8gYXNzb2NpYXRpb25zIGNhbiBiZSBkZWZpbmVkIGhlcmVcbiAgICBwaGFucXV5ZW4uaGFzTWFueShtb2RlbHMudGFpa2hvYW4sIHtcblx0XHRcdGZvcmVpZ25LZXk6ICdxdXllbmhhbmcnLFxuXHRcdFx0YXM6ICd0YWlraG9hbnMnLFxuXHRcdFx0b25EZWxldGU6ICdDQVNDQURFJyxcblx0XHR9KTtcblxuICB9O1xuICByZXR1cm4gcGhhbnF1eWVuO1xufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "phanquyen.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "phanquyen",
        "define",
        "quyenhang",
        "STRING",
        "trangthai",
        "INTEGER",
        "associate",
        "models",
        "hasMany",
        "taikhoan",
        "foreignKey",
        "as",
        "onDelete"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,SAAS,GAAGF,SAAS,CAACG,MAAV,CAAiB,WAAjB,EAA8B;AAC9CC,IAAAA,SAAS,EAAEH,SAAS,CAACI,MADyB;AAE9CC,IAAAA,SAAS,EAAEL,SAAS,CAACM;AAFyB,GAA9B,EAGf,EAHe,CAAlB;;AAIAL,EAAAA,SAAS,CAACM,SAAV,GAAsB,UAASC,MAAT,EAAiB;AACrC;AACAP,IAAAA,SAAS,CAACQ,OAAV,CAAkBD,MAAM,CAACE,QAAzB,EAAmC;AACpCC,MAAAA,UAAU,EAAE,WADwB;AAEpCC,MAAAA,EAAE,EAAE,WAFgC;AAGpCC,MAAAA,QAAQ,EAAE;AAH0B,KAAnC;AAMD,GARD;;AASA,SAAOZ,SAAP;AACD,CAfD",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const phanquyen = sequelize.define('phanquyen', {\n    quyenhang: DataTypes.STRING,\n    trangthai: DataTypes.INTEGER\n  }, {});\n  phanquyen.associate = function(models) {\n    // associations can be defined here\n    phanquyen.hasMany(models.taikhoan, {\n\t\t\tforeignKey: 'quyenhang',\n\t\t\tas: 'taikhoans',\n\t\t\tonDelete: 'CASCADE',\n\t\t});\n\n  };\n  return phanquyen;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1583394847187
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\Model\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\Model\\\\models\\\\phonghoc.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models\\phonghoc.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models\\phonghoc.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models\\phonghoc.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models",
        "sourceFileName": "phonghoc.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var phonghoc = sequelize.define('phonghoc', {\n    tenphonghoc: DataTypes.STRING,\n    hientrang: DataTypes.STRING,\n    soluongnguoi: DataTypes.INTEGER,\n    trangthai: DataTypes.INTEGER\n  }, {});\n\n  phonghoc.associate = function (models) {\n    // associations can be defined here\n    phonghoc.hasMany(models.lophoc, {\n      foreignKey: 'id_phonghoc',\n      as: 'lophocs',\n      onDelete: 'CASCADE'\n    });\n  };\n\n  return phonghoc;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBob25naG9jLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJzZXF1ZWxpemUiLCJEYXRhVHlwZXMiLCJwaG9uZ2hvYyIsImRlZmluZSIsInRlbnBob25naG9jIiwiU1RSSU5HIiwiaGllbnRyYW5nIiwic29sdW9uZ25ndW9pIiwiSU5URUdFUiIsInRyYW5ndGhhaSIsImFzc29jaWF0ZSIsIm1vZGVscyIsImhhc01hbnkiLCJsb3Bob2MiLCJmb3JlaWduS2V5IiwiYXMiLCJvbkRlbGV0ZSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0FBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFDQyxTQUFELEVBQVlDLFNBQVosRUFBMEI7QUFDekMsTUFBTUMsUUFBUSxHQUFHRixTQUFTLENBQUNHLE1BQVYsQ0FBaUIsVUFBakIsRUFBNkI7QUFDNUNDLElBQUFBLFdBQVcsRUFBRUgsU0FBUyxDQUFDSSxNQURxQjtBQUU1Q0MsSUFBQUEsU0FBUyxFQUFFTCxTQUFTLENBQUNJLE1BRnVCO0FBRzVDRSxJQUFBQSxZQUFZLEVBQUVOLFNBQVMsQ0FBQ08sT0FIb0I7QUFJNUNDLElBQUFBLFNBQVMsRUFBRVIsU0FBUyxDQUFDTztBQUp1QixHQUE3QixFQUtkLEVBTGMsQ0FBakI7O0FBTUFOLEVBQUFBLFFBQVEsQ0FBQ1EsU0FBVCxHQUFxQixVQUFTQyxNQUFULEVBQWlCO0FBQ3BDO0FBQ0FULElBQUFBLFFBQVEsQ0FBQ1UsT0FBVCxDQUFpQkQsTUFBTSxDQUFDRSxNQUF4QixFQUFnQztBQUNqQ0MsTUFBQUEsVUFBVSxFQUFFLGFBRHFCO0FBRWpDQyxNQUFBQSxFQUFFLEVBQUUsU0FGNkI7QUFHakNDLE1BQUFBLFFBQVEsRUFBRTtBQUh1QixLQUFoQztBQUtELEdBUEQ7O0FBUUEsU0FBT2QsUUFBUDtBQUNELENBaEJEIiwic291cmNlUm9vdCI6IkQ6XFxMdWFuVmFuXFxMdWFuVmFuRDJcXHRydW5ndGFtX2xhbjRcXE1vZGVsXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IChzZXF1ZWxpemUsIERhdGFUeXBlcykgPT4ge1xuICBjb25zdCBwaG9uZ2hvYyA9IHNlcXVlbGl6ZS5kZWZpbmUoJ3Bob25naG9jJywge1xuICAgIHRlbnBob25naG9jOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIGhpZW50cmFuZzogRGF0YVR5cGVzLlNUUklORyxcbiAgICBzb2x1b25nbmd1b2k6IERhdGFUeXBlcy5JTlRFR0VSLFxuICAgIHRyYW5ndGhhaTogRGF0YVR5cGVzLklOVEVHRVJcbiAgfSwge30pO1xuICBwaG9uZ2hvYy5hc3NvY2lhdGUgPSBmdW5jdGlvbihtb2RlbHMpIHtcbiAgICAvLyBhc3NvY2lhdGlvbnMgY2FuIGJlIGRlZmluZWQgaGVyZVxuICAgIHBob25naG9jLmhhc01hbnkobW9kZWxzLmxvcGhvYywge1xuXHRcdFx0Zm9yZWlnbktleTogJ2lkX3Bob25naG9jJyxcblx0XHRcdGFzOiAnbG9waG9jcycsXG5cdFx0XHRvbkRlbGV0ZTogJ0NBU0NBREUnLFxuXHRcdH0pO1xuICB9O1xuICByZXR1cm4gcGhvbmdob2M7XG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "phonghoc.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "phonghoc",
        "define",
        "tenphonghoc",
        "STRING",
        "hientrang",
        "soluongnguoi",
        "INTEGER",
        "trangthai",
        "associate",
        "models",
        "hasMany",
        "lophoc",
        "foreignKey",
        "as",
        "onDelete"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,QAAQ,GAAGF,SAAS,CAACG,MAAV,CAAiB,UAAjB,EAA6B;AAC5CC,IAAAA,WAAW,EAAEH,SAAS,CAACI,MADqB;AAE5CC,IAAAA,SAAS,EAAEL,SAAS,CAACI,MAFuB;AAG5CE,IAAAA,YAAY,EAAEN,SAAS,CAACO,OAHoB;AAI5CC,IAAAA,SAAS,EAAER,SAAS,CAACO;AAJuB,GAA7B,EAKd,EALc,CAAjB;;AAMAN,EAAAA,QAAQ,CAACQ,SAAT,GAAqB,UAASC,MAAT,EAAiB;AACpC;AACAT,IAAAA,QAAQ,CAACU,OAAT,CAAiBD,MAAM,CAACE,MAAxB,EAAgC;AACjCC,MAAAA,UAAU,EAAE,aADqB;AAEjCC,MAAAA,EAAE,EAAE,SAF6B;AAGjCC,MAAAA,QAAQ,EAAE;AAHuB,KAAhC;AAKD,GAPD;;AAQA,SAAOd,QAAP;AACD,CAhBD",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const phonghoc = sequelize.define('phonghoc', {\n    tenphonghoc: DataTypes.STRING,\n    hientrang: DataTypes.STRING,\n    soluongnguoi: DataTypes.INTEGER,\n    trangthai: DataTypes.INTEGER\n  }, {});\n  phonghoc.associate = function(models) {\n    // associations can be defined here\n    phonghoc.hasMany(models.lophoc, {\n\t\t\tforeignKey: 'id_phonghoc',\n\t\t\tas: 'lophocs',\n\t\t\tonDelete: 'CASCADE',\n\t\t});\n  };\n  return phonghoc;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1583395056151
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\Model\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\Model\\\\models\\\\taikhoan.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models\\taikhoan.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models\\taikhoan.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models\\taikhoan.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models",
        "sourceFileName": "taikhoan.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var taikhoan = sequelize.define('taikhoan', {\n    email: DataTypes.STRING,\n    tentaikhoan: DataTypes.STRING,\n    matkhau: DataTypes.STRING,\n    hinhanh: DataTypes.STRING,\n    quyenhang: DataTypes.STRING,\n    token: DataTypes.STRING,\n    kichhoat: DataTypes.BOOLEAN,\n    trangthai: DataTypes.INTEGER\n  }, {});\n\n  taikhoan.associate = function (models) {\n    // associations can be defined here\n    taikhoan.hasMany(models.phanhoi, {\n      foreignKey: 'id_traloi',\n      as: 'phanhois',\n      onDelete: 'CASCADE'\n    });\n    taikhoan.hasMany(models.diendan, {\n      foreignKey: 'id_taikhoan',\n      as: 'diendans',\n      onDelete: 'CASCADE'\n    });\n    taikhoan.belongsTo(models.phanquyen, {\n      foreignKey: 'quyenhang',\n      as: 'phanquyens',\n      onDelete: 'CASCADE'\n    });\n  };\n\n  return taikhoan;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhaWtob2FuLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJzZXF1ZWxpemUiLCJEYXRhVHlwZXMiLCJ0YWlraG9hbiIsImRlZmluZSIsImVtYWlsIiwiU1RSSU5HIiwidGVudGFpa2hvYW4iLCJtYXRraGF1IiwiaGluaGFuaCIsInF1eWVuaGFuZyIsInRva2VuIiwia2ljaGhvYXQiLCJCT09MRUFOIiwidHJhbmd0aGFpIiwiSU5URUdFUiIsImFzc29jaWF0ZSIsIm1vZGVscyIsImhhc01hbnkiLCJwaGFuaG9pIiwiZm9yZWlnbktleSIsImFzIiwib25EZWxldGUiLCJkaWVuZGFuIiwiYmVsb25nc1RvIiwicGhhbnF1eWVuIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUN6QyxNQUFNQyxRQUFRLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUFpQixVQUFqQixFQUE2QjtBQUM1Q0MsSUFBQUEsS0FBSyxFQUFFSCxTQUFTLENBQUNJLE1BRDJCO0FBRTVDQyxJQUFBQSxXQUFXLEVBQUVMLFNBQVMsQ0FBQ0ksTUFGcUI7QUFHNUNFLElBQUFBLE9BQU8sRUFBRU4sU0FBUyxDQUFDSSxNQUh5QjtBQUk1Q0csSUFBQUEsT0FBTyxFQUFFUCxTQUFTLENBQUNJLE1BSnlCO0FBSzVDSSxJQUFBQSxTQUFTLEVBQUVSLFNBQVMsQ0FBQ0ksTUFMdUI7QUFNNUNLLElBQUFBLEtBQUssRUFBRVQsU0FBUyxDQUFDSSxNQU4yQjtBQU81Q00sSUFBQUEsUUFBUSxFQUFFVixTQUFTLENBQUNXLE9BUHdCO0FBUTVDQyxJQUFBQSxTQUFTLEVBQUVaLFNBQVMsQ0FBQ2E7QUFSdUIsR0FBN0IsRUFTZCxFQVRjLENBQWpCOztBQVVBWixFQUFBQSxRQUFRLENBQUNhLFNBQVQsR0FBcUIsVUFBU0MsTUFBVCxFQUFpQjtBQUNwQztBQUNBZCxJQUFBQSxRQUFRLENBQUNlLE9BQVQsQ0FBaUJELE1BQU0sQ0FBQ0UsT0FBeEIsRUFBaUM7QUFDbENDLE1BQUFBLFVBQVUsRUFBRSxXQURzQjtBQUVsQ0MsTUFBQUEsRUFBRSxFQUFFLFVBRjhCO0FBR2xDQyxNQUFBQSxRQUFRLEVBQUU7QUFId0IsS0FBakM7QUFLQW5CLElBQUFBLFFBQVEsQ0FBQ2UsT0FBVCxDQUFpQkQsTUFBTSxDQUFDTSxPQUF4QixFQUFpQztBQUNsQ0gsTUFBQUEsVUFBVSxFQUFFLGFBRHNCO0FBRWxDQyxNQUFBQSxFQUFFLEVBQUUsVUFGOEI7QUFHbENDLE1BQUFBLFFBQVEsRUFBRTtBQUh3QixLQUFqQztBQUtBbkIsSUFBQUEsUUFBUSxDQUFDcUIsU0FBVCxDQUFtQlAsTUFBTSxDQUFDUSxTQUExQixFQUFvQztBQUNyQ0wsTUFBQUEsVUFBVSxFQUFFLFdBRHlCO0FBRXJDQyxNQUFBQSxFQUFFLEVBQUUsWUFGaUM7QUFHckNDLE1BQUFBLFFBQVEsRUFBRTtBQUgyQixLQUFwQztBQUtELEdBakJEOztBQWtCQSxTQUFPbkIsUUFBUDtBQUNELENBOUJEIiwic291cmNlUm9vdCI6IkQ6XFxMdWFuVmFuXFxMdWFuVmFuRDJcXHRydW5ndGFtX2xhbjRcXE1vZGVsXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IChzZXF1ZWxpemUsIERhdGFUeXBlcykgPT4ge1xuICBjb25zdCB0YWlraG9hbiA9IHNlcXVlbGl6ZS5kZWZpbmUoJ3RhaWtob2FuJywge1xuICAgIGVtYWlsOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIHRlbnRhaWtob2FuOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIG1hdGtoYXU6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgaGluaGFuaDogRGF0YVR5cGVzLlNUUklORyxcbiAgICBxdXllbmhhbmc6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgdG9rZW46IERhdGFUeXBlcy5TVFJJTkcsXG4gICAga2ljaGhvYXQ6IERhdGFUeXBlcy5CT09MRUFOICAgICAgICAgICAgICAgICAgICAgLFxuICAgIHRyYW5ndGhhaTogRGF0YVR5cGVzLklOVEVHRVJcbiAgfSwge30pO1xuICB0YWlraG9hbi5hc3NvY2lhdGUgPSBmdW5jdGlvbihtb2RlbHMpIHtcbiAgICAvLyBhc3NvY2lhdGlvbnMgY2FuIGJlIGRlZmluZWQgaGVyZVxuICAgIHRhaWtob2FuLmhhc01hbnkobW9kZWxzLnBoYW5ob2ksIHtcblx0XHRcdGZvcmVpZ25LZXk6ICdpZF90cmFsb2knLFxuXHRcdFx0YXM6ICdwaGFuaG9pcycsXG5cdFx0XHRvbkRlbGV0ZTogJ0NBU0NBREUnLFxuICAgIH0pO1xuICAgIHRhaWtob2FuLmhhc01hbnkobW9kZWxzLmRpZW5kYW4sIHtcblx0XHRcdGZvcmVpZ25LZXk6ICdpZF90YWlraG9hbicsXG5cdFx0XHRhczogJ2RpZW5kYW5zJyxcblx0XHRcdG9uRGVsZXRlOiAnQ0FTQ0FERScsXG4gICAgfSk7XG4gICAgdGFpa2hvYW4uYmVsb25nc1RvKG1vZGVscy5waGFucXV5ZW4se1xuXHRcdFx0Zm9yZWlnbktleTogJ3F1eWVuaGFuZycsXG5cdFx0XHRhczogJ3BoYW5xdXllbnMnLFxuXHRcdFx0b25EZWxldGU6ICdDQVNDQURFJyxcbiAgICB9KTtcbiAgfTtcbiAgcmV0dXJuIHRhaWtob2FuO1xufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "taikhoan.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "taikhoan",
        "define",
        "email",
        "STRING",
        "tentaikhoan",
        "matkhau",
        "hinhanh",
        "quyenhang",
        "token",
        "kichhoat",
        "BOOLEAN",
        "trangthai",
        "INTEGER",
        "associate",
        "models",
        "hasMany",
        "phanhoi",
        "foreignKey",
        "as",
        "onDelete",
        "diendan",
        "belongsTo",
        "phanquyen"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,QAAQ,GAAGF,SAAS,CAACG,MAAV,CAAiB,UAAjB,EAA6B;AAC5CC,IAAAA,KAAK,EAAEH,SAAS,CAACI,MAD2B;AAE5CC,IAAAA,WAAW,EAAEL,SAAS,CAACI,MAFqB;AAG5CE,IAAAA,OAAO,EAAEN,SAAS,CAACI,MAHyB;AAI5CG,IAAAA,OAAO,EAAEP,SAAS,CAACI,MAJyB;AAK5CI,IAAAA,SAAS,EAAER,SAAS,CAACI,MALuB;AAM5CK,IAAAA,KAAK,EAAET,SAAS,CAACI,MAN2B;AAO5CM,IAAAA,QAAQ,EAAEV,SAAS,CAACW,OAPwB;AAQ5CC,IAAAA,SAAS,EAAEZ,SAAS,CAACa;AARuB,GAA7B,EASd,EATc,CAAjB;;AAUAZ,EAAAA,QAAQ,CAACa,SAAT,GAAqB,UAASC,MAAT,EAAiB;AACpC;AACAd,IAAAA,QAAQ,CAACe,OAAT,CAAiBD,MAAM,CAACE,OAAxB,EAAiC;AAClCC,MAAAA,UAAU,EAAE,WADsB;AAElCC,MAAAA,EAAE,EAAE,UAF8B;AAGlCC,MAAAA,QAAQ,EAAE;AAHwB,KAAjC;AAKAnB,IAAAA,QAAQ,CAACe,OAAT,CAAiBD,MAAM,CAACM,OAAxB,EAAiC;AAClCH,MAAAA,UAAU,EAAE,aADsB;AAElCC,MAAAA,EAAE,EAAE,UAF8B;AAGlCC,MAAAA,QAAQ,EAAE;AAHwB,KAAjC;AAKAnB,IAAAA,QAAQ,CAACqB,SAAT,CAAmBP,MAAM,CAACQ,SAA1B,EAAoC;AACrCL,MAAAA,UAAU,EAAE,WADyB;AAErCC,MAAAA,EAAE,EAAE,YAFiC;AAGrCC,MAAAA,QAAQ,EAAE;AAH2B,KAApC;AAKD,GAjBD;;AAkBA,SAAOnB,QAAP;AACD,CA9BD",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\Model\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const taikhoan = sequelize.define('taikhoan', {\n    email: DataTypes.STRING,\n    tentaikhoan: DataTypes.STRING,\n    matkhau: DataTypes.STRING,\n    hinhanh: DataTypes.STRING,\n    quyenhang: DataTypes.STRING,\n    token: DataTypes.STRING,\n    kichhoat: DataTypes.BOOLEAN                     ,\n    trangthai: DataTypes.INTEGER\n  }, {});\n  taikhoan.associate = function(models) {\n    // associations can be defined here\n    taikhoan.hasMany(models.phanhoi, {\n\t\t\tforeignKey: 'id_traloi',\n\t\t\tas: 'phanhois',\n\t\t\tonDelete: 'CASCADE',\n    });\n    taikhoan.hasMany(models.diendan, {\n\t\t\tforeignKey: 'id_taikhoan',\n\t\t\tas: 'diendans',\n\t\t\tonDelete: 'CASCADE',\n    });\n    taikhoan.belongsTo(models.phanquyen,{\n\t\t\tforeignKey: 'quyenhang',\n\t\t\tas: 'phanquyens',\n\t\t\tonDelete: 'CASCADE',\n    });\n  };\n  return taikhoan;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1584882503272
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\\\\dangnhapRouter.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\dangnhapRouter.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\dangnhapRouter.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\dangnhapRouter.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
        "sourceFileName": "dangnhapRouter.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _express = require(\"express\");\n\nvar _dangnhapController = _interopRequireDefault(require(\"../controllers/dangnhapController\"));\n\nvar _ejs = require(\"ejs\");\n\nvar router = (0, _express.Router)();\nrouter.post(\"/\", _dangnhapController[\"default\"].getlogin); //destroy session\n\nrouter.get('/logout', function (req, res) {\n  //destroy session\n  req.session.destroy(function (err) {\n    res.redirect('/');\n  });\n});\nrouter.post(\"/dangky\", _dangnhapController[\"default\"].addTK);\nrouter.post(\"/laymatkhau\", _dangnhapController[\"default\"].laymatkhau);\nrouter.get(\"/dangky/xacnhan\", _dangnhapController[\"default\"].getxacnhan).post(\"/dangky/xacnhan\", _dangnhapController[\"default\"].xacnhan);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhbmduaGFwUm91dGVyLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsInBvc3QiLCJkYW5nbmhhcENvbnRyb2xsZXIiLCJnZXRsb2dpbiIsImdldCIsInJlcSIsInJlcyIsInNlc3Npb24iLCJkZXN0cm95IiwiZXJyIiwicmVkaXJlY3QiLCJhZGRUSyIsImxheW1hdGtoYXUiLCJnZXR4YWNuaGFuIiwieGFjbmhhbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFFQTs7QUFDQTs7QUFFQSxJQUFNQSxNQUFNLEdBQUcsc0JBQWY7QUFFQUEsTUFBTSxDQUFDQyxJQUFQLENBQVksR0FBWixFQUFpQkMsK0JBQW1CQyxRQUFwQyxFLENBQ0E7O0FBQ0FILE1BQU0sQ0FBQ0ksR0FBUCxDQUFXLFNBQVgsRUFBc0IsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDaEM7QUFDQUQsRUFBQUEsR0FBRyxDQUFDRSxPQUFKLENBQVlDLE9BQVosQ0FBb0IsVUFBU0MsR0FBVCxFQUFjO0FBQzlCSCxJQUFBQSxHQUFHLENBQUNJLFFBQUosQ0FBYSxHQUFiO0FBQ0gsR0FGRDtBQUdILENBTEQ7QUFNQVYsTUFBTSxDQUFDQyxJQUFQLENBQVksU0FBWixFQUF1QkMsK0JBQW1CUyxLQUExQztBQUNBWCxNQUFNLENBQUNDLElBQVAsQ0FBWSxhQUFaLEVBQTJCQywrQkFBbUJVLFVBQTlDO0FBQ0FaLE1BQU0sQ0FDTEksR0FERCxDQUNLLGlCQURMLEVBQ3dCRiwrQkFBbUJXLFVBRDNDLEVBRUNaLElBRkQsQ0FFTSxpQkFGTixFQUV5QkMsK0JBQW1CWSxPQUY1QztBQUlBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJoQixNQUFqQiIsInNvdXJjZVJvb3QiOiJEOlxcTHVhblZhblxcTHVhblZhbkQyXFx0cnVuZ3RhbV9sYW40XFxhcHBzXFxyb3V0ZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyIH0gZnJvbSBcImV4cHJlc3NcIjtcclxuXHJcbmltcG9ydCBkYW5nbmhhcENvbnRyb2xsZXIgZnJvbSBcIi4uL2NvbnRyb2xsZXJzL2RhbmduaGFwQ29udHJvbGxlclwiO1xyXG5pbXBvcnQgeyByZW5kZXIgfSBmcm9tIFwiZWpzXCI7XHJcblxyXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKTtcclxuXHJcbnJvdXRlci5wb3N0KFwiL1wiLCBkYW5nbmhhcENvbnRyb2xsZXIuZ2V0bG9naW4pXHJcbi8vZGVzdHJveSBzZXNzaW9uXHJcbnJvdXRlci5nZXQoJy9sb2dvdXQnLCAocmVxLCByZXMpID0+IHtcclxuICAgIC8vZGVzdHJveSBzZXNzaW9uXHJcbiAgICByZXEuc2Vzc2lvbi5kZXN0cm95KGZ1bmN0aW9uKGVycikge1xyXG4gICAgICAgIHJlcy5yZWRpcmVjdCgnLycpXHJcbiAgICB9KVxyXG59KVxyXG5yb3V0ZXIucG9zdChcIi9kYW5na3lcIiwgZGFuZ25oYXBDb250cm9sbGVyLmFkZFRLKVxyXG5yb3V0ZXIucG9zdChcIi9sYXltYXRraGF1XCIsIGRhbmduaGFwQ29udHJvbGxlci5sYXltYXRraGF1KVxyXG5yb3V0ZXJcclxuLmdldChcIi9kYW5na3kveGFjbmhhblwiLCBkYW5nbmhhcENvbnRyb2xsZXIuZ2V0eGFjbmhhbilcclxuLnBvc3QoXCIvZGFuZ2t5L3hhY25oYW5cIiwgZGFuZ25oYXBDb250cm9sbGVyLnhhY25oYW4pXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "dangnhapRouter.js"
      ],
      "names": [
        "router",
        "post",
        "dangnhapController",
        "getlogin",
        "get",
        "req",
        "res",
        "session",
        "destroy",
        "err",
        "redirect",
        "addTK",
        "laymatkhau",
        "getxacnhan",
        "xacnhan",
        "module",
        "exports"
      ],
      "mappings": ";;;;AAAA;;AAEA;;AACA;;AAEA,IAAMA,MAAM,GAAG,sBAAf;AAEAA,MAAM,CAACC,IAAP,CAAY,GAAZ,EAAiBC,+BAAmBC,QAApC,E,CACA;;AACAH,MAAM,CAACI,GAAP,CAAW,SAAX,EAAsB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAChC;AACAD,EAAAA,GAAG,CAACE,OAAJ,CAAYC,OAAZ,CAAoB,UAASC,GAAT,EAAc;AAC9BH,IAAAA,GAAG,CAACI,QAAJ,CAAa,GAAb;AACH,GAFD;AAGH,CALD;AAMAV,MAAM,CAACC,IAAP,CAAY,SAAZ,EAAuBC,+BAAmBS,KAA1C;AACAX,MAAM,CAACC,IAAP,CAAY,aAAZ,EAA2BC,+BAAmBU,UAA9C;AACAZ,MAAM,CACLI,GADD,CACK,iBADL,EACwBF,+BAAmBW,UAD3C,EAECZ,IAFD,CAEM,iBAFN,EAEyBC,+BAAmBY,OAF5C;AAIAC,MAAM,CAACC,OAAP,GAAiBhB,MAAjB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
      "sourcesContent": [
        "import { Router } from \"express\";\r\n\r\nimport dangnhapController from \"../controllers/dangnhapController\";\r\nimport { render } from \"ejs\";\r\n\r\nconst router = Router();\r\n\r\nrouter.post(\"/\", dangnhapController.getlogin)\r\n//destroy session\r\nrouter.get('/logout', (req, res) => {\r\n    //destroy session\r\n    req.session.destroy(function(err) {\r\n        res.redirect('/')\r\n    })\r\n})\r\nrouter.post(\"/dangky\", dangnhapController.addTK)\r\nrouter.post(\"/laymatkhau\", dangnhapController.laymatkhau)\r\nrouter\r\n.get(\"/dangky/xacnhan\", dangnhapController.getxacnhan)\r\n.post(\"/dangky/xacnhan\", dangnhapController.xacnhan)\r\n\r\nmodule.exports = router;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1587481954881
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\\\\dangnhapController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\dangnhapController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\dangnhapController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\dangnhapController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
        "sourceFileName": "dangnhapController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _bcryptjs = _interopRequireDefault(require(\"bcryptjs\"));\n\nvar _nodeFetch = _interopRequireDefault(require(\"node-fetch\"));\n\nvar _randomstring = _interopRequireDefault(require(\"randomstring\"));\n\nvar _dangnhapService = _interopRequireDefault(require(\"../services/dangnhapService\"));\n\nvar _nodemailer = _interopRequireDefault(require(\"../../helpers/nodemailer\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar dangnhapController =\n/*#__PURE__*/\nfunction () {\n  function dangnhapController() {\n    (0, _classCallCheck2[\"default\"])(this, dangnhapController);\n  }\n\n  (0, _createClass2[\"default\"])(dangnhapController, null, [{\n    key: \"addTK\",\n    value: function addTK(req, res) {\n      var secretKey, verifyURL, body, token, kichhoat, html, salt, hash, _req$body, email, tentaikhoan, quyenhang, trangthai, kiemtra, data, createdTK;\n\n      return _regenerator[\"default\"].async(function addTK$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (req.body.captcha) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\", res.json({\n                success: false,\n                msg: \"Please select captcha\"\n              }));\n\n            case 2:\n              // Secret key\n              secretKey = \"6LfWmNgUAAAAAByejHVatp1JvpJtRNccgNjzGeSx\";\n              verifyURL = \"https://www.google.com/recaptcha/api/siteverify?secret=\" + secretKey + \"&response=\" + req.body.captcha + \"&remoteip=\" + req.connection.remoteAddress; // Make a request to verifyURL\n\n              _context.next = 6;\n              return _regenerator[\"default\"].awrap((0, _nodeFetch[\"default\"])(verifyURL).then(function (res) {\n                return res.json();\n              }));\n\n            case 6:\n              body = _context.sent;\n\n              if (!(body.success !== undefined && !body.success)) {\n                _context.next = 9;\n                break;\n              }\n\n              return _context.abrupt(\"return\", res.json({\n                success: false,\n                msg: \"Failed captcha verification\"\n              }));\n\n            case 9:\n              // // If successful\n              // // ============end captcha=================\n              // tạo mã bí mật\n              token = _randomstring[\"default\"].generate(4);\n              kichhoat = false;\n              html = \"Hi there,\\n    <br/>\\n    C\\u1EA3m \\u01A1n b\\u1EA1n \\u0111\\xE3 \\u0111\\u0103ng k\\xFD!\\n    <br/>\\n    Xin h\\xE3y coppy m\\xE3 v\\xE0 d\\xE1n v\\xE0o \\xF4 x\\xE1c nh\\u1EADn \\u0111\\u1EC3 x\\xE1c nh\\u1EADn email:\\n    <br/>\\n    M\\xE3 k\\xEDch ho\\u1EA1t: <b>\".concat(token, \"</b>\\n    <br/>\\n    On the following page:\\n    <a href=\\\"http://localhost:3000/dangnhap/dangky/xacnhan/\\\">http://localhost:3000/xacnhan</a>\\n    <br/><br/>\\n    Ch\\xFAc b\\u1EA1n m\\u1ED9t ng\\xE0y t\\u1ED1t l\\xE0nh.\");\n              salt = _bcryptjs[\"default\"].genSaltSync(10);\n              hash = _bcryptjs[\"default\"].hashSync(req.body.matkhau, salt);\n              _req$body = _objectSpread({}, req.body), email = _req$body.email, tentaikhoan = _req$body.tentaikhoan;\n              quyenhang = \"Học Viên\";\n              trangthai = 1;\n\n              if (!(email.trim().length > 0)) {\n                _context.next = 38;\n                break;\n              }\n\n              _context.next = 20;\n              return _regenerator[\"default\"].awrap(_dangnhapService[\"default\"].getBylogin(email.toLowerCase()));\n\n            case 20:\n              kiemtra = _context.sent;\n\n              if (!(kiemtra.length > 0)) {\n                _context.next = 25;\n                break;\n              }\n\n              //  res.redirect(\"/?kq=0&mes=Email đã tồn tại\");\n              res.json({\n                success: false,\n                msg: \"Email đã tồn tại !!\"\n              });\n              _context.next = 38;\n              break;\n\n            case 25:\n              data = _objectSpread({}, req.body, {\n                matkhau: hash,\n                quyenhang: quyenhang,\n                trangthai: trangthai,\n                token: token,\n                kichhoat: kichhoat\n              });\n              _context.prev = 26;\n              _context.next = 29;\n              return _regenerator[\"default\"].awrap(_dangnhapService[\"default\"].add(data));\n\n            case 29:\n              createdTK = _context.sent;\n              _context.next = 32;\n              return _regenerator[\"default\"].awrap((0, _nodemailer[\"default\"])(email, tentaikhoan, html));\n\n            case 32:\n              if (createdTK) {\n                //  res.redirect(`/?kq=2&mes=Đăng ký thành công. Xác nhận email để được đăng nhập !`);\n                res.json({\n                  success: true,\n                  msg: \"Xác nhận email để có thể tiếp tục đăng nhập !!\"\n                });\n              } else {\n                //  res.redirect(`/?kq=0&mes=Đã có lỗi xin đăng ký lại !!!`);\n                res.json({\n                  success: false,\n                  msg: \"Không đăng ký thành công !!\"\n                });\n              }\n\n              _context.next = 38;\n              break;\n\n            case 35:\n              _context.prev = 35;\n              _context.t0 = _context[\"catch\"](26);\n              return _context.abrupt(\"return\", _context.t0);\n\n            case 38:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[26, 35]]);\n    } //  xác nhận email \n\n  }, {\n    key: \"xacnhan\",\n    value: function xacnhan(req, res) {\n      var token, updatetk;\n      return _regenerator[\"default\"].async(function xacnhan$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              token = req.body.token;\n              _context2.prev = 1;\n              _context2.next = 4;\n              return _regenerator[\"default\"].awrap(_dangnhapService[\"default\"].xacNhanEmail(token));\n\n            case 4:\n              updatetk = _context2.sent;\n\n              if (!updatetk) {\n                res.redirect(\"/?kq=0&mes=L\\u1ED7i x\\xE1c nh\\u1EADn !\");\n              } else {\n                res.redirect(\"/?kq=1&mes=X\\xE1c nh\\u1EADn th\\xE0nh c\\xF4ng, b\\u1EA1n c\\xF3 th\\u1EC3 \\u0111\\u0103ng nh\\u1EADp !\");\n              }\n\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](1);\n              return _context2.abrupt(\"return\", _context2.t0);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[1, 8]]);\n    }\n  }, {\n    key: \"getxacnhan\",\n    value: function getxacnhan(req, res) {\n      return _regenerator[\"default\"].async(function getxacnhan$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              res.render(\"../views/outsite/xacnhanEmail.ejs\");\n              _context3.next = 7;\n              break;\n\n            case 4:\n              _context3.prev = 4;\n              _context3.t0 = _context3[\"catch\"](0);\n              return _context3.abrupt(\"return\", _context3.t0);\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 4]]);\n    } // Kết thức xác nhận \n\n  }, {\n    key: \"updatedtk\",\n    value: function updatedtk(req, res) {\n      var alteredtk, _req$body2, quyenhang, id, updatetk;\n\n      return _regenerator[\"default\"].async(function updatedtk$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              alteredtk = req.body;\n              _req$body2 = _objectSpread({}, req.body), quyenhang = _req$body2.quyenhang;\n              id = req.params.id;\n\n              if (!Number(id)) {\n                console.log(\"ID Not a Number!!!\");\n              }\n\n              _context4.prev = 4;\n              _context4.next = 7;\n              return _regenerator[\"default\"].awrap(_dangnhapService[\"default\"].UpdateTK(id, alteredtk));\n\n            case 7:\n              updatetk = _context4.sent;\n\n              if (!updatetk) {\n                res.redirect(\"/admin/taikhoan/\" + quyenhang + \"?kq=0\");\n              } else {\n                res.redirect(\"/admin/taikhoan/\" + quyenhang + \"?kq=1\");\n              }\n\n              _context4.next = 14;\n              break;\n\n            case 11:\n              _context4.prev = 11;\n              _context4.t0 = _context4[\"catch\"](4);\n              return _context4.abrupt(\"return\", _context4.t0);\n\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[4, 11]]);\n    }\n  }, {\n    key: \"getATk\",\n    value: function getATk(req, res) {\n      var id, thetk;\n      return _regenerator[\"default\"].async(function getATk$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              id = req.params.id;\n\n              if (!Number(id)) {\n                console.log(\"id not a Number !!!\");\n              }\n\n              _context5.prev = 2;\n              _context5.next = 5;\n              return _regenerator[\"default\"].awrap(_dangnhapService[\"default\"].getByID(id));\n\n            case 5:\n              thetk = _context5.sent;\n\n              if (!thetk) {\n                res.redirect(\"/admin/taikhoan\");\n              } else {\n                res.redirect(\"/admin/taikhoan\");\n              }\n\n              _context5.next = 12;\n              break;\n\n            case 9:\n              _context5.prev = 9;\n              _context5.t0 = _context5[\"catch\"](2);\n              return _context5.abrupt(\"return\", _context5.t0);\n\n            case 12:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[2, 9]]);\n    }\n  }, {\n    key: \"getlogin\",\n    value: function getlogin(req, res) {\n      var _req$body3, email, matkhau, thetk, user;\n\n      return _regenerator[\"default\"].async(function getlogin$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _req$body3 = req.body, email = _req$body3.email, matkhau = _req$body3.matkhau;\n              _context6.prev = 1;\n              _context6.next = 4;\n              return _regenerator[\"default\"].awrap(_dangnhapService[\"default\"].getBylogin(email.toLowerCase()));\n\n            case 4:\n              thetk = _context6.sent;\n              user = thetk[0];\n\n              if (!(thetk == 0)) {\n                _context6.next = 10;\n                break;\n              }\n\n              res.redirect(\"/?kq=0&mes=Email không hợp lệ hoặc chưa được kích hoạt !!!\");\n              _context6.next = 31;\n              break;\n\n            case 10:\n              _context6.t0 = thetk[0].trangthai;\n              _context6.next = _context6.t0 === 1 ? 13 : 30;\n              break;\n\n            case 13:\n              if (!_bcryptjs[\"default\"].compareSync(matkhau, thetk[0].matkhau)) {\n                _context6.next = 28;\n                break;\n              }\n\n              req.session.user = user;\n              _context6.t1 = user.quyenhang;\n              _context6.next = _context6.t1 === \"Admin\" ? 18 : _context6.t1 === \"Nhân Viên\" ? 21 : 24;\n              break;\n\n            case 18:\n              req.session.user = user;\n              res.redirect(\"/admin/index?kq=1&mes=Đăng nhập thành công.\");\n              return _context6.abrupt(\"break\", 26);\n\n            case 21:\n              req.session.user = user;\n              res.redirect(\"/admin/index?kq=1&mes=Nhân viên.\");\n              return _context6.abrupt(\"break\", 26);\n\n            case 24:\n              req.session.user = user;\n              res.redirect(\"/?kq=1&mes=Đăng nhập thành công.\");\n\n            case 26:\n              _context6.next = 29;\n              break;\n\n            case 28:\n              res.redirect(\"/?kq=0&mes=Mật khẩu không đúng !\");\n\n            case 29:\n              return _context6.abrupt(\"break\", 31);\n\n            case 30:\n              res.redirect(\"/?kq=0&mes=Tài khoản của bạn đã bị vô hiệu hóa!!!\");\n\n            case 31:\n              return _context6.abrupt(\"return\", error);\n\n            case 34:\n              _context6.prev = 34;\n              _context6.t2 = _context6[\"catch\"](1);\n              return _context6.abrupt(\"return\", _context6.t2);\n\n            case 37:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[1, 34]]);\n    } // ================lay mat khau moi ==================\n\n  }, {\n    key: \"laymatkhau\",\n    value: function laymatkhau(req, res) {\n      var email, kiemtraemail, matkhaumoi, html, salt, hash, matkhau, updatetk1;\n      return _regenerator[\"default\"].async(function laymatkhau$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              email = req.body.email;\n              _context7.next = 4;\n              return _regenerator[\"default\"].awrap(_dangnhapService[\"default\"].kiemtraemail(email));\n\n            case 4:\n              kiemtraemail = _context7.sent;\n\n              if (!kiemtraemail) {\n                _context7.next = 20;\n                break;\n              }\n\n              matkhaumoi = _randomstring[\"default\"].generate(6);\n              html = \"Hi there,\\n        <br/>\\n        C\\u1EA3m \\u01A1n b\\u1EA1n \\u0111\\xE3 s\\u1EED d\\u1EE5ng d\\u1ECBch v\\u1EE5 c\\u1EE7a ch\\xFAng t\\xF4i!\\n        <br/>\\n        \\u0110\\xE2y l\\xE0 m\\u1EADt kh\\u1EA9u m\\u1EDBi c\\u1EE7a b\\u1EA1n\\n        <br/>\\n        M\\u1EADt kh\\u1EA9u m\\u1EDBi: <b>\".concat(matkhaumoi, \"</b>\\n        <br/>\\n        Quay l\\u1EA1i trang ch\\u1EE7 \\u0111\\u1EC3 \\u0111\\u0103ng nh\\u1EADp n\\xE0o:\\n        <a href=\\\"http://localhost:3000/\\\">http://localhost:3000/</a>\\n        <br/><br/>\\n        Ch\\xFAc b\\u1EA1n m\\u1ED9t ng\\xE0y t\\u1ED1t l\\xE0nh.\");\n              _context7.next = 10;\n              return _regenerator[\"default\"].awrap((0, _nodemailer[\"default\"])(email, email, html));\n\n            case 10:\n              salt = _bcryptjs[\"default\"].genSaltSync(10);\n              hash = _bcryptjs[\"default\"].hashSync(matkhaumoi, salt);\n              matkhau = hash;\n              _context7.next = 15;\n              return _regenerator[\"default\"].awrap(_dangnhapService[\"default\"].quenmatkhau(email, matkhau));\n\n            case 15:\n              updatetk1 = _context7.sent;\n              console.log(updatetk1);\n\n              if (!updatetk1) {\n                res.redirect(\"/?kq=0&mes=L\\u1ED7i !\");\n              } else {\n                res.redirect(\"/?kq=1&mes=Xin h\\xE3y check email \\u0111\\u1EC3 l\\u1EA5y m\\u1EADt kh\\u1EA9u m\\u1EDBi !\");\n              }\n\n              _context7.next = 21;\n              break;\n\n            case 20:\n              res.redirect(\"/?kq=0&mes=Email ch\\u01B0a \\u0111\\u01B0\\u1EE3c \\u0111\\u0103ng k\\xFD !\");\n\n            case 21:\n              _context7.next = 26;\n              break;\n\n            case 23:\n              _context7.prev = 23;\n              _context7.t0 = _context7[\"catch\"](0);\n              return _context7.abrupt(\"return\", _context7.t0);\n\n            case 26:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, [[0, 23]]);\n    }\n  }]);\n  return dangnhapController;\n}();\n\nvar _default = dangnhapController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "dangnhapController.js"
      ],
      "names": [
        "dangnhapController",
        "req",
        "res",
        "body",
        "captcha",
        "json",
        "success",
        "msg",
        "secretKey",
        "verifyURL",
        "connection",
        "remoteAddress",
        "then",
        "undefined",
        "token",
        "randomstring",
        "generate",
        "kichhoat",
        "html",
        "salt",
        "bcrypt",
        "genSaltSync",
        "hash",
        "hashSync",
        "matkhau",
        "email",
        "tentaikhoan",
        "quyenhang",
        "trangthai",
        "trim",
        "length",
        "dangnhapService",
        "getBylogin",
        "toLowerCase",
        "kiemtra",
        "data",
        "add",
        "createdTK",
        "xacNhanEmail",
        "updatetk",
        "redirect",
        "render",
        "alteredtk",
        "id",
        "params",
        "Number",
        "console",
        "log",
        "UpdateTK",
        "getByID",
        "thetk",
        "user",
        "compareSync",
        "session",
        "error",
        "kiemtraemail",
        "matkhaumoi",
        "quenmatkhau",
        "updatetk1"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;;;;;IAEMA,kB;;;;;;;;;0BACeC,G,EAAKC,G;;;;;;;kBAEjBD,GAAG,CAACE,IAAJ,CAASC,O;;;;;+CACLF,GAAG,CAACG,IAAJ,CAAS;AAAEC,gBAAAA,OAAO,EAAE,KAAX;AAAkBC,gBAAAA,GAAG,EAAE;AAAvB,eAAT,C;;;AAET;AACMC,cAAAA,S,GAAY,0C;AACZC,cAAAA,S,GACJ,4DACAD,SADA,GAEA,YAFA,GAGAP,GAAG,CAACE,IAAJ,CAASC,OAHT,GAIA,YAJA,GAKAH,GAAG,CAACS,UAAJ,CAAeC,a,EACjB;;;mDACmB,2BAAMF,SAAN,EAAiBG,IAAjB,CAAsB,UAAAV,GAAG;AAAA,uBAAIA,GAAG,CAACG,IAAJ,EAAJ;AAAA,eAAzB,C;;;AAAbF,cAAAA,I;;oBAEFA,IAAI,CAACG,OAAL,KAAiBO,SAAjB,IAA8B,CAACV,IAAI,CAACG,O;;;;;+CAC/BJ,GAAG,CAACG,IAAJ,CAAS;AAAEC,gBAAAA,OAAO,EAAE,KAAX;AAAkBC,gBAAAA,GAAG,EAAE;AAAvB,eAAT,C;;;AACT;AACA;AACA;AACMO,cAAAA,K,GAAQC,yBAAaC,QAAb,CAAsB,CAAtB,C;AACRC,cAAAA,Q,GAAW,K;AACXC,cAAAA,I,oQAMaJ,K;AAOfK,cAAAA,I,GAAOC,qBAAOC,WAAP,CAAmB,EAAnB,C;AACPC,cAAAA,I,GAAOF,qBAAOG,QAAP,CAAgBtB,GAAG,CAACE,IAAJ,CAASqB,OAAzB,EAAkCL,IAAlC,C;4CACsBlB,GAAG,CAACE,I,GAA/BsB,K,aAAAA,K,EAAMC,W,aAAAA,W;AACRC,cAAAA,S,GAAY,U;AACZC,cAAAA,S,GAAY,C;;oBACZH,KAAK,CAACI,IAAN,GAAaC,MAAb,GAAsB,C;;;;;;mDACJC,4BAAgBC,UAAhB,CAA2BP,KAAK,CAACQ,WAAN,EAA3B,C;;;AAAhBC,cAAAA,O;;oBACAA,OAAO,CAACJ,MAAR,GAAiB,C;;;;;AACnB;AACA5B,cAAAA,GAAG,CAACG,IAAJ,CAAS;AAAEC,gBAAAA,OAAO,EAAE,KAAX;AAAkBC,gBAAAA,GAAG,EAAE;AAAvB,eAAT;;;;;AAEI4B,cAAAA,I,qBAAYlC,GAAG,CAACE,I;AAAMqB,gBAAAA,OAAO,EAAEF,I;AAAMK,gBAAAA,SAAS,EAATA,S;AAAWC,gBAAAA,SAAS,EAATA,S;AAAWd,gBAAAA,KAAK,EAALA,K;AAAMG,gBAAAA,QAAQ,EAARA;;;;mDAE3Cc,4BAAgBK,GAAhB,CAAoBD,IAApB,C;;;AAAlBE,cAAAA,S;;mDACA,4BAAKZ,KAAL,EAAWC,WAAX,EAAuBR,IAAvB,C;;;AACN,kBAAImB,SAAJ,EAAe;AACb;AACAnC,gBAAAA,GAAG,CAACG,IAAJ,CAAS;AAAEC,kBAAAA,OAAO,EAAE,IAAX;AAAiBC,kBAAAA,GAAG,EAAE;AAAtB,iBAAT;AACD,eAHD,MAGO;AACL;AACAL,gBAAAA,GAAG,CAACG,IAAJ,CAAS;AAAEC,kBAAAA,OAAO,EAAE,KAAX;AAAkBC,kBAAAA,GAAG,EAAE;AAAvB,iBAAT;AACD;;;;;;;;;;;;;;;;MAQT;;;;4BACqBN,G,EAAKC,G;;;;;;AAChBY,cAAAA,K,GAAUb,GAAG,CAACE,I,CAAdW,K;;;mDAEiBiB,4BAAgBO,YAAhB,CAA6BxB,KAA7B,C;;;AAAjByB,cAAAA,Q;;AACN,kBAAI,CAACA,QAAL,EAAe;AACbrC,gBAAAA,GAAG,CAACsC,QAAJ;AACD,eAFD,MAEO;AACLtC,gBAAAA,GAAG,CAACsC,QAAJ;AACD;;;;;;;;;;;;;;;;;;;+BAKmBvC,G,EAAKC,G;;;;;;AAE3BA,cAAAA,GAAG,CAACuC,MAAJ,CAAW,mCAAX;;;;;;;;;;;;;;;MAOF;;;;8BAEuBxC,G,EAAKC,G;;;;;;;AACpBwC,cAAAA,S,GAAYzC,GAAG,CAACE,I;6CACGF,GAAG,CAACE,I,GAAvBwB,S,cAAAA,S;AACEgB,cAAAA,E,GAAO1C,GAAG,CAAC2C,M,CAAXD,E;;AACR,kBAAI,CAACE,MAAM,CAACF,EAAD,CAAX,EAAiB;AACfG,gBAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD;;;;mDAEwBhB,4BAAgBiB,QAAhB,CAAyBL,EAAzB,EAA6BD,SAA7B,C;;;AAAjBH,cAAAA,Q;;AACN,kBAAI,CAACA,QAAL,EAAe;AACbrC,gBAAAA,GAAG,CAACsC,QAAJ,CAAa,qBAAqBb,SAArB,UAAb;AACD,eAFD,MAEO;AACLzB,gBAAAA,GAAG,CAACsC,QAAJ,CAAa,qBAAqBb,SAArB,UAAb;AACD;;;;;;;;;;;;;;;;;;;2BAMe1B,G,EAAKC,G;;;;;;AACfyC,cAAAA,E,GAAO1C,GAAG,CAAC2C,M,CAAXD,E;;AAER,kBAAI,CAACE,MAAM,CAACF,EAAD,CAAX,EAAiB;AACfG,gBAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD;;;;mDAGqBhB,4BAAgBkB,OAAhB,CAAwBN,EAAxB,C;;;AAAdO,cAAAA,K;;AAEN,kBAAI,CAACA,KAAL,EAAY;AACVhD,gBAAAA,GAAG,CAACsC,QAAJ,CAAa,iBAAb;AACD,eAFD,MAEO;AACLtC,gBAAAA,GAAG,CAACsC,QAAJ,CAAa,iBAAb;AACD;;;;;;;;;;;;;;;;;;;6BAMiBvC,G,EAAKC,G;;;;;;;2BACED,GAAG,CAACE,I,EAAvBsB,K,cAAAA,K,EAAOD,O,cAAAA,O;;;mDAEOO,4BAAgBC,UAAhB,CAA2BP,KAAK,CAACQ,WAAN,EAA3B,C;;;AAAdiB,cAAAA,K;AACFC,cAAAA,I,GAAOD,KAAK,CAAC,CAAD,C;;oBACZA,KAAK,IAAI,C;;;;;AACXhD,cAAAA,GAAG,CAACsC,QAAJ,CAAa,4DAAb;;;;;6BAEQU,KAAK,CAAC,CAAD,CAAL,CAAStB,S;gDACV,C;;;;mBACCR,qBAAOgC,WAAP,CAAmB5B,OAAnB,EAA4B0B,KAAK,CAAC,CAAD,CAAL,CAAS1B,OAArC,C;;;;;AACFvB,cAAAA,GAAG,CAACoD,OAAJ,CAAYF,IAAZ,GAAmBA,IAAnB;6BACQA,IAAI,CAACxB,S;gDACN,O,yBAIA,W;;;;AAHH1B,cAAAA,GAAG,CAACoD,OAAJ,CAAYF,IAAZ,GAAmBA,IAAnB;AACAjD,cAAAA,GAAG,CAACsC,QAAJ,CAAa,6CAAb;;;;AAGAvC,cAAAA,GAAG,CAACoD,OAAJ,CAAYF,IAAZ,GAAmBA,IAAnB;AACAjD,cAAAA,GAAG,CAACsC,QAAJ,CAAa,kCAAb;;;;AAGAvC,cAAAA,GAAG,CAACoD,OAAJ,CAAYF,IAAZ,GAAmBA,IAAnB;AACAjD,cAAAA,GAAG,CAACsC,QAAJ,CAAa,kCAAb;;;;;;;AAGJtC,cAAAA,GAAG,CAACsC,QAAJ,CAAa,kCAAb;;;;;;AAIFtC,cAAAA,GAAG,CAACsC,QAAJ,CAAa,mDAAb;;;gDAGCc,K;;;;;;;;;;;;;MAKX;;;;+BACwBrD,G,EAAKC,G;;;;;;;AAEnBuB,cAAAA,K,GAAQxB,GAAG,CAACE,IAAJ,CAASsB,K;;mDACIM,4BAAgBwB,YAAhB,CAA6B9B,KAA7B,C;;;AAArB8B,cAAAA,Y;;mBACFA,Y;;;;;AACIC,cAAAA,U,GAAazC,yBAAaC,QAAb,CAAsB,CAAtB,C;AACbE,cAAAA,I,kSAMasC,U;;mDAMZ,4BAAK/B,KAAL,EAAWA,KAAX,EAAiBP,IAAjB,C;;;AACHC,cAAAA,I,GAAOC,qBAAOC,WAAP,CAAmB,EAAnB,C;AACPC,cAAAA,I,GAAOF,qBAAOG,QAAP,CAAgBiC,UAAhB,EAA4BrC,IAA5B,C;AACPK,cAAAA,O,GAAUF,I;;mDACUS,4BAAgB0B,WAAhB,CAA4BhC,KAA5B,EAAmCD,OAAnC,C;;;AAAlBkC,cAAAA,S;AACNZ,cAAAA,OAAO,CAACC,GAAR,CAAYW,SAAZ;;AACA,kBAAI,CAACA,SAAL,EAAgB;AACdxD,gBAAAA,GAAG,CAACsC,QAAJ;AACD,eAFD,MAEO;AACLtC,gBAAAA,GAAG,CAACsC,QAAJ;AACD;;;;;;AAEDtC,cAAAA,GAAG,CAACsC,QAAJ;;;;;;;;;;;;;;;;;;;;;;eAUOxC,kB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
      "sourcesContent": [
        "import bcrypt from \"bcryptjs\";\r\nimport fetch from \"node-fetch\";\r\nimport randomstring from \"randomstring\"\r\n\r\nimport dangnhapService from \"../services/dangnhapService\";\r\nimport mail from \"../../helpers/nodemailer\"\r\n\r\nclass dangnhapController {\r\n  static async addTK(req, res) {      \r\n    // =captcha==============\r\n    if (!req.body.captcha) {\r\n      return res.json({ success: false, msg: \"Please select captcha\" });\r\n    }\r\n    // Secret key\r\n    const secretKey = \"6LfWmNgUAAAAAByejHVatp1JvpJtRNccgNjzGeSx\";\r\n    const verifyURL =\r\n      \"https://www.google.com/recaptcha/api/siteverify?secret=\" +\r\n      secretKey +\r\n      \"&response=\" +\r\n      req.body.captcha +\r\n      \"&remoteip=\" +\r\n      req.connection.remoteAddress;\r\n    // Make a request to verifyURL\r\n    const body = await fetch(verifyURL).then(res => res.json());\r\n    // If not successful\r\n    if (body.success !== undefined && !body.success)\r\n      return res.json({ success: false, msg: \"Failed captcha verification\" });\r\n    // // If successful\r\n    // // ============end captcha=================\r\n    // tạo mã bí mật\r\n    const token = randomstring.generate(4);\r\n    const kichhoat = false\r\n    const html = `Hi there,\r\n    <br/>\r\n    Cảm ơn bạn đã đăng ký!\r\n    <br/>\r\n    Xin hãy coppy mã và dán vào ô xác nhận để xác nhận email:\r\n    <br/>\r\n    Mã kích hoạt: <b>${token}</b>\r\n    <br/>\r\n    On the following page:\r\n    <a href=\"http://localhost:3000/dangnhap/dangky/xacnhan/\">http://localhost:3000/xacnhan</a>\r\n    <br/><br/>\r\n    Chúc bạn một ngày tốt lành.` \r\n\r\n    let salt = bcrypt.genSaltSync(10);\r\n    let hash = bcrypt.hashSync(req.body.matkhau, salt);\r\n    let { email,tentaikhoan } = { ...req.body };\r\n    let quyenhang = \"Học Viên\";\r\n    let trangthai = 1;\r\n    if (email.trim().length > 0) {\r\n      let kiemtra = await dangnhapService.getBylogin(email.toLowerCase());\r\n      if (kiemtra.length > 0) {\r\n        //  res.redirect(\"/?kq=0&mes=Email đã tồn tại\");\r\n        res.json({ success: false, msg: \"Email đã tồn tại !!\" });\r\n      } else {\r\n        let data = { ...req.body, matkhau: hash, quyenhang, trangthai ,token,kichhoat };\r\n        try {        \r\n          const createdTK = await dangnhapService.add(data);\r\n          await mail(email,tentaikhoan,html);\r\n          if (createdTK) {\r\n            //  res.redirect(`/?kq=2&mes=Đăng ký thành công. Xác nhận email để được đăng nhập !`);\r\n            res.json({ success: true, msg: \"Xác nhận email để có thể tiếp tục đăng nhập !!\" });\r\n          } else {\r\n            //  res.redirect(`/?kq=0&mes=Đã có lỗi xin đăng ký lại !!!`);\r\n            res.json({ success: false, msg: \"Không đăng ký thành công !!\" });\r\n          }\r\n        } catch (error) {\r\n          return error;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  //  xác nhận email \r\n  static async xacnhan(req, res) {\r\n    const { token } = req.body;  \r\n    try {\r\n      const updatetk = await dangnhapService.xacNhanEmail(token);\r\n      if (!updatetk) {\r\n        res.redirect(`/?kq=0&mes=Lỗi xác nhận !`);\r\n      } else {\r\n        res.redirect(`/?kq=1&mes=Xác nhận thành công, bạn có thể đăng nhập !`);\r\n      }\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n  static async getxacnhan(req, res) {    \r\n    try {\r\n    res.render(\"../views/outsite/xacnhanEmail.ejs\")\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n\r\n  // Kết thức xác nhận \r\n\r\n  static async updatedtk(req, res) {\r\n    const alteredtk = req.body;\r\n    let { quyenhang } = { ...req.body };\r\n    const { id } = req.params;\r\n    if (!Number(id)) {\r\n      console.log(\"ID Not a Number!!!\");\r\n    }\r\n    try {\r\n      const updatetk = await dangnhapService.UpdateTK(id, alteredtk);\r\n      if (!updatetk) {\r\n        res.redirect(`/admin/taikhoan/` + quyenhang + `?kq=0`);\r\n      } else {\r\n        res.redirect(`/admin/taikhoan/` + quyenhang + `?kq=1`);\r\n      }\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  static async getATk(req, res) {\r\n    const { id } = req.params;\r\n\r\n    if (!Number(id)) {\r\n      console.log(\"id not a Number !!!\");\r\n    }\r\n\r\n    try {\r\n      const thetk = await dangnhapService.getByID(id);\r\n\r\n      if (!thetk) {\r\n        res.redirect(\"/admin/taikhoan\");\r\n      } else {\r\n        res.redirect(\"/admin/taikhoan\");\r\n      }\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  static async getlogin(req, res) {\r\n    const { email, matkhau } = req.body;\r\n    try {\r\n      const thetk = await dangnhapService.getBylogin(email.toLowerCase());\r\n      let user = thetk[0];\r\n      if (thetk == 0) {\r\n        res.redirect(\"/?kq=0&mes=Email không hợp lệ hoặc chưa được kích hoạt !!!\");\r\n      } else {\r\n        switch (thetk[0].trangthai) {\r\n          case 1:\r\n            if (bcrypt.compareSync(matkhau, thetk[0].matkhau)) {\r\n              req.session.user = user;\r\n              switch (user.quyenhang) {\r\n                case \"Admin\":\r\n                  req.session.user = user;\r\n                  res.redirect(\"/admin/index?kq=1&mes=Đăng nhập thành công.\");                 \r\n                  break;\r\n                case \"Nhân Viên\":\r\n                  req.session.user = user;\r\n                  res.redirect(\"/admin/index?kq=1&mes=Nhân viên.\");\r\n                  break;\r\n                default:\r\n                  req.session.user = user;\r\n                  res.redirect(\"/?kq=1&mes=Đăng nhập thành công.\");\r\n              }\r\n            }else{\r\n              res.redirect(\"/?kq=0&mes=Mật khẩu không đúng !\");\r\n            }\r\n            break;\r\n          default:\r\n            res.redirect(\"/?kq=0&mes=Tài khoản của bạn đã bị vô hiệu hóa!!!\");\r\n        }\r\n      }\r\n      return error;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n  // ================lay mat khau moi ==================\r\n  static async laymatkhau(req, res) {   \r\n    try { \r\n      const email = req.body.email;  \r\n      const kiemtraemail = await dangnhapService.kiemtraemail(email);\r\n      if (kiemtraemail) {\r\n        const matkhaumoi = randomstring.generate(6);       \r\n        const html = `Hi there,\r\n        <br/>\r\n        Cảm ơn bạn đã sử dụng dịch vụ của chúng tôi!\r\n        <br/>\r\n        Đây là mật khẩu mới của bạn\r\n        <br/>\r\n        Mật khẩu mới: <b>${matkhaumoi}</b>\r\n        <br/>\r\n        Quay lại trang chủ để đăng nhập nào:\r\n        <a href=\"http://localhost:3000/\">http://localhost:3000/</a>\r\n        <br/><br/>\r\n        Chúc bạn một ngày tốt lành.` \r\n         await mail(email,email,html);\r\n        let salt = bcrypt.genSaltSync(10);\r\n        let hash = bcrypt.hashSync(matkhaumoi, salt);\r\n        let matkhau = hash ; \r\n        const updatetk1 = await dangnhapService.quenmatkhau(email, matkhau); \r\n        console.log(updatetk1);\r\n        if (!updatetk1) {\r\n          res.redirect(`/?kq=0&mes=Lỗi !`);\r\n        } else {\r\n          res.redirect(`/?kq=1&mes=Xin hãy check email để lấy mật khẩu mới !`);\r\n        }\r\n      } else {\r\n        res.redirect(`/?kq=0&mes=Email chưa được đăng ký !`);\r\n      }\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default dangnhapController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1587485796918
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\services\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\services\\\\dangnhapService.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services\\dangnhapService.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services\\dangnhapService.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services\\dangnhapService.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services",
        "sourceFileName": "dangnhapService.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _models = _interopRequireDefault(require(\"../../Model/models\"));\n\nvar dangnhapService =\n/*#__PURE__*/\nfunction () {\n  function dangnhapService() {\n    (0, _classCallCheck2[\"default\"])(this, dangnhapService);\n  }\n\n  (0, _createClass2[\"default\"])(dangnhapService, null, [{\n    key: \"getAllTaiKhoan\",\n    value: function getAllTaiKhoan(quyenhang) {\n      return _regenerator[\"default\"].async(function getAllTaiKhoan$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].taikhoan.findAll({\n                where: {\n                  quyenhang: quyenhang\n                }\n              }));\n\n            case 3:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              throw _context.t0;\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"getAllquyen\",\n    value: function getAllquyen(quyenhang) {\n      return _regenerator[\"default\"].async(function getAllquyen$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].phanquyen.findAll({\n                where: {\n                  quyenhang: quyenhang\n                }\n              }));\n\n            case 3:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              throw _context2.t0;\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"getByID\",\n    value: function getByID(id) {\n      return _regenerator[\"default\"].async(function getByID$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].taikhoan.findAll({\n                where: {\n                  id: id\n                }\n              }));\n\n            case 3:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 6:\n              _context3.prev = 6;\n              _context3.t0 = _context3[\"catch\"](0);\n              throw _context3.t0;\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"UpdateTK\",\n    value: function UpdateTK(id, data) {\n      var tk;\n      return _regenerator[\"default\"].async(function UpdateTK$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].taikhoan.findOne({\n                where: {\n                  id: id\n                }\n              }));\n\n            case 3:\n              tk = _context4.sent;\n\n              if (!tk) {\n                _context4.next = 8;\n                break;\n              }\n\n              _context4.next = 7;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].taikhoan.update(data, {\n                where: {\n                  id: Number(id)\n                }\n              }));\n\n            case 7:\n              return _context4.abrupt(\"return\", _context4.sent);\n\n            case 8:\n              return _context4.abrupt(\"return\", null);\n\n            case 11:\n              _context4.prev = 11;\n              _context4.t0 = _context4[\"catch\"](0);\n              throw _context4.t0;\n\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 11]]);\n    }\n  }, {\n    key: \"kiemtraemail\",\n    value: function kiemtraemail(email) {\n      return _regenerator[\"default\"].async(function kiemtraemail$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.t0 = _regenerator[\"default\"];\n              _context5.next = 4;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].taikhoan.findOne({\n                where: {\n                  email: email\n                }\n              }));\n\n            case 4:\n              _context5.t1 = _context5.sent;\n              _context5.next = 7;\n              return _context5.t0.awrap.call(_context5.t0, _context5.t1);\n\n            case 7:\n              return _context5.abrupt(\"return\", _context5.sent);\n\n            case 10:\n              _context5.prev = 10;\n              _context5.t2 = _context5[\"catch\"](0);\n              throw _context5.t2;\n\n            case 13:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 10]]);\n    }\n  }, {\n    key: \"quenmatkhau\",\n    value: function quenmatkhau(email, matkhau) {\n      var tk;\n      return _regenerator[\"default\"].async(function quenmatkhau$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].taikhoan.findOne({\n                where: {\n                  email: email,\n                  kichhoat: true\n                }\n              }));\n\n            case 3:\n              tk = _context6.sent;\n\n              if (!tk) {\n                _context6.next = 8;\n                break;\n              }\n\n              _context6.next = 7;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].taikhoan.sequelize.query(\"UPDATE public.taikhoans\\n          SET  email='\" + email + \"', matkhau='\" + matkhau + \"'         \\n          WHERE  email='\" + email + \"' \"));\n\n            case 7:\n              return _context6.abrupt(\"return\", _context6.sent);\n\n            case 8:\n              return _context6.abrupt(\"return\", error);\n\n            case 11:\n              _context6.prev = 11;\n              _context6.t0 = _context6[\"catch\"](0);\n              throw _context6.t0;\n\n            case 14:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[0, 11]]);\n    }\n  }, {\n    key: \"add\",\n    value: function add(data) {\n      var email, tk;\n      return _regenerator[\"default\"].async(function add$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              email = data.email;\n              _context7.next = 4;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].taikhoan.findOne({\n                where: {\n                  email: email\n                }\n              }));\n\n            case 4:\n              tk = _context7.sent;\n\n              if (!tk) {\n                _context7.next = 9;\n                break;\n              }\n\n              return _context7.abrupt(\"return\", null);\n\n            case 9:\n              _context7.next = 11;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].taikhoan.create(data));\n\n            case 11:\n              return _context7.abrupt(\"return\", _context7.sent);\n\n            case 12:\n              _context7.next = 17;\n              break;\n\n            case 14:\n              _context7.prev = 14;\n              _context7.t0 = _context7[\"catch\"](0);\n              throw _context7.t0;\n\n            case 17:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, [[0, 14]]);\n    }\n  }, {\n    key: \"getBylogin\",\n    value: function getBylogin(email) {\n      var tk;\n      return _regenerator[\"default\"].async(function getBylogin$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              _context8.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].taikhoan.findAll({\n                where: {\n                  email: email,\n                  kichhoat: true\n                }\n              }));\n\n            case 3:\n              tk = _context8.sent;\n\n              if (tk) {\n                _context8.next = 8;\n                break;\n              }\n\n              return _context8.abrupt(\"return\", 0);\n\n            case 8:\n              return _context8.abrupt(\"return\", tk);\n\n            case 9:\n              _context8.next = 14;\n              break;\n\n            case 11:\n              _context8.prev = 11;\n              _context8.t0 = _context8[\"catch\"](0);\n              throw _context8.t0;\n\n            case 14:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, null, [[0, 11]]);\n    } // xác nhận email\n\n  }, {\n    key: \"xacNhanEmail\",\n    value: function xacNhanEmail(token) {\n      var tk;\n      return _regenerator[\"default\"].async(function xacNhanEmail$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.prev = 0;\n              _context9.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].taikhoan.findOne({\n                where: {\n                  token: token\n                }\n              }));\n\n            case 3:\n              tk = _context9.sent;\n\n              if (!tk) {\n                _context9.next = 8;\n                break;\n              }\n\n              _context9.next = 7;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].taikhoan.update({\n                kichhoat: true,\n                token: \"\"\n              }, {\n                where: {\n                  token: token\n                }\n              }));\n\n            case 7:\n              return _context9.abrupt(\"return\", _context9.sent);\n\n            case 8:\n              return _context9.abrupt(\"return\", null);\n\n            case 11:\n              _context9.prev = 11;\n              _context9.t0 = _context9[\"catch\"](0);\n              throw _context9.t0;\n\n            case 14:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, null, null, [[0, 11]]);\n    }\n  }, {\n    key: \"getxacnhan\",\n    value: function getxacnhan(email) {\n      var tk;\n      return _regenerator[\"default\"].async(function getxacnhan$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.prev = 0;\n              _context10.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].taikhoan.findAll({\n                where: {\n                  email: email,\n                  kichhoat: true\n                }\n              }));\n\n            case 3:\n              tk = _context10.sent;\n\n              if (tk) {\n                _context10.next = 8;\n                break;\n              }\n\n              return _context10.abrupt(\"return\", 0);\n\n            case 8:\n              return _context10.abrupt(\"return\", error);\n\n            case 9:\n              _context10.next = 14;\n              break;\n\n            case 11:\n              _context10.prev = 11;\n              _context10.t0 = _context10[\"catch\"](0);\n              throw _context10.t0;\n\n            case 14:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, null, null, [[0, 11]]);\n    }\n  }]);\n  return dangnhapService;\n}();\n\nvar _default = dangnhapService;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhbmduaGFwU2VydmljZS5qcyJdLCJuYW1lcyI6WyJkYW5nbmhhcFNlcnZpY2UiLCJxdXllbmhhbmciLCJkYXRhYmFzZSIsInRhaWtob2FuIiwiZmluZEFsbCIsIndoZXJlIiwicGhhbnF1eWVuIiwiaWQiLCJkYXRhIiwiZmluZE9uZSIsInRrIiwidXBkYXRlIiwiTnVtYmVyIiwiZW1haWwiLCJtYXRraGF1Iiwia2ljaGhvYXQiLCJzZXF1ZWxpemUiLCJxdWVyeSIsImVycm9yIiwiY3JlYXRlIiwidG9rZW4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztJQUVNQSxlOzs7Ozs7Ozs7bUNBQ3dCQyxTOzs7Ozs7O21EQUVYQyxtQkFBU0MsUUFBVCxDQUFrQkMsT0FBbEIsQ0FBMEI7QUFDckNDLGdCQUFBQSxLQUFLLEVBQUU7QUFBRUosa0JBQUFBLFNBQVMsRUFBVEE7QUFBRjtBQUQ4QixlQUExQixDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O2dDQU9RQSxTOzs7Ozs7O21EQUVSQyxtQkFBU0ksU0FBVCxDQUFtQkYsT0FBbkIsQ0FBMkI7QUFDdENDLGdCQUFBQSxLQUFLLEVBQUU7QUFBRUosa0JBQUFBLFNBQVMsRUFBVEE7QUFBRjtBQUQrQixlQUEzQixDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OzRCQU9JTSxFOzs7Ozs7O21EQUVKTCxtQkFBU0MsUUFBVCxDQUFrQkMsT0FBbEIsQ0FBMEI7QUFDckNDLGdCQUFBQSxLQUFLLEVBQUU7QUFBRUUsa0JBQUFBLEVBQUUsRUFBRkE7QUFBRjtBQUQ4QixlQUExQixDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OzZCQVFLQSxFLEVBQUlDLEk7Ozs7Ozs7O21EQUVQTixtQkFBU0MsUUFBVCxDQUFrQk0sT0FBbEIsQ0FBMEI7QUFDdkNKLGdCQUFBQSxLQUFLLEVBQUU7QUFBRUUsa0JBQUFBLEVBQUUsRUFBRkE7QUFBRjtBQURnQyxlQUExQixDOzs7QUFBWEcsY0FBQUEsRTs7bUJBR0FBLEU7Ozs7OzttREFDV1IsbUJBQVNDLFFBQVQsQ0FBa0JRLE1BQWxCLENBQXlCSCxJQUF6QixFQUErQjtBQUMxQ0gsZ0JBQUFBLEtBQUssRUFBRTtBQUFFRSxrQkFBQUEsRUFBRSxFQUFFSyxNQUFNLENBQUNMLEVBQUQ7QUFBWjtBQURtQyxlQUEvQixDOzs7Ozs7Z0RBSVIsSTs7Ozs7Ozs7Ozs7Ozs7OztpQ0FLZU0sSzs7Ozs7Ozs7bURBRUhYLG1CQUFTQyxRQUFULENBQWtCTSxPQUFsQixDQUEwQjtBQUMzQ0osZ0JBQUFBLEtBQUssRUFBRTtBQUFFUSxrQkFBQUEsS0FBSyxFQUFMQTtBQUFGO0FBRG9DLGVBQTFCLEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztnQ0FRRUEsSyxFQUFPQyxPOzs7Ozs7OzttREFFYlosbUJBQVNDLFFBQVQsQ0FBa0JNLE9BQWxCLENBQTBCO0FBQ3ZDSixnQkFBQUEsS0FBSyxFQUFFO0FBQUVRLGtCQUFBQSxLQUFLLEVBQUxBLEtBQUY7QUFBVUUsa0JBQUFBLFFBQVEsRUFBRztBQUFyQjtBQURnQyxlQUExQixDOzs7QUFBWEwsY0FBQUEsRTs7bUJBR0FBLEU7Ozs7OzttREFDV1IsbUJBQVNDLFFBQVQsQ0FBa0JhLFNBQWxCLENBQTRCQyxLQUE1QixDQUNYLG9EQUNjSixLQURkLG9CQUNtQ0MsT0FEbkMsNENBRWdCRCxLQUZoQixPQURXLEM7Ozs7OztnREFNUkssSzs7Ozs7Ozs7Ozs7Ozs7Ozt3QkFNTVYsSTs7Ozs7OztBQUVUSyxjQUFBQSxLLEdBQVFMLElBQUksQ0FBQ0ssSzs7bURBQ0ZYLG1CQUFTQyxRQUFULENBQWtCTSxPQUFsQixDQUEwQjtBQUN2Q0osZ0JBQUFBLEtBQUssRUFBRTtBQUFFUSxrQkFBQUEsS0FBSyxFQUFMQTtBQUFGO0FBRGdDLGVBQTFCLEM7OztBQUFYSCxjQUFBQSxFOzttQkFHQUEsRTs7Ozs7Z0RBQ0ssSTs7OzttREFDV1IsbUJBQVNDLFFBQVQsQ0FBa0JnQixNQUFsQixDQUF5QlgsSUFBekIsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0JBS0FLLEs7Ozs7Ozs7O21EQUVMWCxtQkFBU0MsUUFBVCxDQUFrQkMsT0FBbEIsQ0FBMEI7QUFDdkNDLGdCQUFBQSxLQUFLLEVBQUU7QUFBRVEsa0JBQUFBLEtBQUssRUFBTEEsS0FBRjtBQUFVRSxrQkFBQUEsUUFBUSxFQUFHO0FBQXJCO0FBRGdDLGVBQTFCLEM7OztBQUFYTCxjQUFBQSxFOztrQkFJQ0EsRTs7Ozs7Z0RBQ0ksQzs7O2dEQUNLQSxFOzs7Ozs7Ozs7Ozs7Ozs7OztNQU1sQjs7OztpQ0FDMEJVLEs7Ozs7Ozs7O21EQUVQbEIsbUJBQVNDLFFBQVQsQ0FBa0JNLE9BQWxCLENBQTBCO0FBQ3ZDSixnQkFBQUEsS0FBSyxFQUFFO0FBQUVlLGtCQUFBQSxLQUFLLEVBQUxBO0FBQUY7QUFEZ0MsZUFBMUIsQzs7O0FBQVhWLGNBQUFBLEU7O21CQUdBQSxFOzs7Ozs7bURBQ1dSLG1CQUFTQyxRQUFULENBQWtCUSxNQUFsQixDQUNYO0FBQUVJLGdCQUFBQSxRQUFRLEVBQUUsSUFBWjtBQUFrQkssZ0JBQUFBLEtBQUssRUFBRTtBQUF6QixlQURXLEVBRVg7QUFDRWYsZ0JBQUFBLEtBQUssRUFBRTtBQUFFZSxrQkFBQUEsS0FBSyxFQUFMQTtBQUFGO0FBRFQsZUFGVyxDOzs7Ozs7Z0RBT1IsSTs7Ozs7Ozs7Ozs7Ozs7OzsrQkFNYVAsSzs7Ozs7Ozs7bURBRUxYLG1CQUFTQyxRQUFULENBQWtCQyxPQUFsQixDQUEwQjtBQUN2Q0MsZ0JBQUFBLEtBQUssRUFBRTtBQUFFUSxrQkFBQUEsS0FBSyxFQUFMQSxLQUFGO0FBQVNFLGtCQUFBQSxRQUFRLEVBQUU7QUFBbkI7QUFEZ0MsZUFBMUIsQzs7O0FBQVhMLGNBQUFBLEU7O2tCQUdDQSxFOzs7OztpREFDSSxDOzs7aURBRUFRLEs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7ZUFRQWxCLGUiLCJzb3VyY2VSb290IjoiRDpcXEx1YW5WYW5cXEx1YW5WYW5EMlxcdHJ1bmd0YW1fbGFuNFxcYXBwc1xcc2VydmljZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZGF0YWJhc2UgZnJvbSBcIi4uLy4uL01vZGVsL21vZGVsc1wiO1xyXG5cclxuY2xhc3MgZGFuZ25oYXBTZXJ2aWNlIHtcclxuICBzdGF0aWMgYXN5bmMgZ2V0QWxsVGFpS2hvYW4ocXV5ZW5oYW5nKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICByZXR1cm4gYXdhaXQgZGF0YWJhc2UudGFpa2hvYW4uZmluZEFsbCh7XHJcbiAgICAgICAgd2hlcmU6IHsgcXV5ZW5oYW5nIH1cclxuICAgICAgfSk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9XHJcbiAgc3RhdGljIGFzeW5jIGdldEFsbHF1eWVuKHF1eWVuaGFuZykge1xyXG4gICAgdHJ5IHtcclxuICAgICAgcmV0dXJuIGF3YWl0IGRhdGFiYXNlLnBoYW5xdXllbi5maW5kQWxsKHtcclxuICAgICAgICB3aGVyZTogeyBxdXllbmhhbmcgfVxyXG4gICAgICB9KTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG4gIH1cclxuICBzdGF0aWMgYXN5bmMgZ2V0QnlJRChpZCkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgcmV0dXJuIGF3YWl0IGRhdGFiYXNlLnRhaWtob2FuLmZpbmRBbGwoe1xyXG4gICAgICAgIHdoZXJlOiB7IGlkIH1cclxuICAgICAgfSk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHN0YXRpYyBhc3luYyBVcGRhdGVUSyhpZCwgZGF0YSkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgbGV0IHRrID0gYXdhaXQgZGF0YWJhc2UudGFpa2hvYW4uZmluZE9uZSh7XHJcbiAgICAgICAgd2hlcmU6IHsgaWQgfVxyXG4gICAgICB9KTtcclxuICAgICAgaWYgKHRrKSB7XHJcbiAgICAgICAgcmV0dXJuIGF3YWl0IGRhdGFiYXNlLnRhaWtob2FuLnVwZGF0ZShkYXRhLCB7XHJcbiAgICAgICAgICB3aGVyZTogeyBpZDogTnVtYmVyKGlkKSB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9XHJcbiAgc3RhdGljIGFzeW5jIGtpZW10cmFlbWFpbChlbWFpbCkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgcmV0dXJuIGF3YWl0IGF3YWl0IGRhdGFiYXNlLnRhaWtob2FuLmZpbmRPbmUoe1xyXG4gICAgICAgIHdoZXJlOiB7IGVtYWlsIH1cclxuICAgICAgfSk7XHJcbiAgICAgXHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9XHJcbiAgc3RhdGljIGFzeW5jIHF1ZW5tYXRraGF1KGVtYWlsLCBtYXRraGF1KSB7XHJcbiAgICB0cnkge1xyXG4gICAgICBsZXQgdGsgPSBhd2FpdCBkYXRhYmFzZS50YWlraG9hbi5maW5kT25lKHtcclxuICAgICAgICB3aGVyZTogeyBlbWFpbCAsIGtpY2hob2F0IDogdHJ1ZSB9XHJcbiAgICAgIH0pOyAgXHJcbiAgICAgIGlmICh0aykgeyAgICAgICBcclxuICAgICAgICByZXR1cm4gYXdhaXQgZGF0YWJhc2UudGFpa2hvYW4uc2VxdWVsaXplLnF1ZXJ5KFxyXG4gICAgICAgICAgYFVQREFURSBwdWJsaWMudGFpa2hvYW5zXHJcbiAgICAgICAgICBTRVQgIGVtYWlsPSdgK2VtYWlsK2AnLCBtYXRraGF1PSdgK21hdGtoYXUrYCcgICAgICAgICBcclxuICAgICAgICAgIFdIRVJFICBlbWFpbD0nYCtlbWFpbCtgJyBgXHJcbiAgICAgICAgKTtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gZXJyb3I7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHN0YXRpYyBhc3luYyBhZGQoZGF0YSkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgbGV0IGVtYWlsID0gZGF0YS5lbWFpbDtcclxuICAgICAgbGV0IHRrID0gYXdhaXQgZGF0YWJhc2UudGFpa2hvYW4uZmluZE9uZSh7XHJcbiAgICAgICAgd2hlcmU6IHsgZW1haWwgfVxyXG4gICAgICB9KTtcclxuICAgICAgaWYgKHRrKSB7XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgIH0gZWxzZSByZXR1cm4gYXdhaXQgZGF0YWJhc2UudGFpa2hvYW4uY3JlYXRlKGRhdGEpO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHN0YXRpYyBhc3luYyBnZXRCeWxvZ2luKGVtYWlsKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICBsZXQgdGsgPSBhd2FpdCBkYXRhYmFzZS50YWlraG9hbi5maW5kQWxsKHtcclxuICAgICAgICB3aGVyZTogeyBlbWFpbCAsIGtpY2hob2F0IDogdHJ1ZX1cclxuICAgICAgfSk7XHJcblxyXG4gICAgICBpZiAoIXRrKSB7XHJcbiAgICAgICAgcmV0dXJuIDA7XHJcbiAgICAgIH0gZWxzZSByZXR1cm4gdGs7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vIHjDoWMgbmjhuq1uIGVtYWlsXHJcbiAgc3RhdGljIGFzeW5jIHhhY05oYW5FbWFpbCh0b2tlbikge1xyXG4gICAgdHJ5IHtcclxuICAgICAgbGV0IHRrID0gYXdhaXQgZGF0YWJhc2UudGFpa2hvYW4uZmluZE9uZSh7XHJcbiAgICAgICAgd2hlcmU6IHsgdG9rZW4gfVxyXG4gICAgICB9KTtcclxuICAgICAgaWYgKHRrKSB7XHJcbiAgICAgICAgcmV0dXJuIGF3YWl0IGRhdGFiYXNlLnRhaWtob2FuLnVwZGF0ZShcclxuICAgICAgICAgIHsga2ljaGhvYXQ6IHRydWUsIHRva2VuOiBcIlwiIH0sXHJcbiAgICAgICAgICB7XHJcbiAgICAgICAgICAgIHdoZXJlOiB7IHRva2VuIH1cclxuICAgICAgICAgIH1cclxuICAgICAgICApO1xyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgYXN5bmMgZ2V0eGFjbmhhbihlbWFpbCkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgbGV0IHRrID0gYXdhaXQgZGF0YWJhc2UudGFpa2hvYW4uZmluZEFsbCh7XHJcbiAgICAgICAgd2hlcmU6IHsgZW1haWwsIGtpY2hob2F0OiB0cnVlIH1cclxuICAgICAgfSk7XHJcbiAgICAgIGlmICghdGspIHtcclxuICAgICAgICByZXR1cm4gMDtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICByZXR1cm4gZXJyb3I7XHJcbiAgICAgIH1cclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgZGFuZ25oYXBTZXJ2aWNlO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "dangnhapService.js"
      ],
      "names": [
        "dangnhapService",
        "quyenhang",
        "database",
        "taikhoan",
        "findAll",
        "where",
        "phanquyen",
        "id",
        "data",
        "findOne",
        "tk",
        "update",
        "Number",
        "email",
        "matkhau",
        "kichhoat",
        "sequelize",
        "query",
        "error",
        "create",
        "token"
      ],
      "mappings": ";;;;;;;;;;;;;;;AAAA;;IAEMA,e;;;;;;;;;mCACwBC,S;;;;;;;mDAEXC,mBAASC,QAAT,CAAkBC,OAAlB,CAA0B;AACrCC,gBAAAA,KAAK,EAAE;AAAEJ,kBAAAA,SAAS,EAATA;AAAF;AAD8B,eAA1B,C;;;;;;;;;;;;;;;;;;;gCAOQA,S;;;;;;;mDAERC,mBAASI,SAAT,CAAmBF,OAAnB,CAA2B;AACtCC,gBAAAA,KAAK,EAAE;AAAEJ,kBAAAA,SAAS,EAATA;AAAF;AAD+B,eAA3B,C;;;;;;;;;;;;;;;;;;;4BAOIM,E;;;;;;;mDAEJL,mBAASC,QAAT,CAAkBC,OAAlB,CAA0B;AACrCC,gBAAAA,KAAK,EAAE;AAAEE,kBAAAA,EAAE,EAAFA;AAAF;AAD8B,eAA1B,C;;;;;;;;;;;;;;;;;;;6BAQKA,E,EAAIC,I;;;;;;;;mDAEPN,mBAASC,QAAT,CAAkBM,OAAlB,CAA0B;AACvCJ,gBAAAA,KAAK,EAAE;AAAEE,kBAAAA,EAAE,EAAFA;AAAF;AADgC,eAA1B,C;;;AAAXG,cAAAA,E;;mBAGAA,E;;;;;;mDACWR,mBAASC,QAAT,CAAkBQ,MAAlB,CAAyBH,IAAzB,EAA+B;AAC1CH,gBAAAA,KAAK,EAAE;AAAEE,kBAAAA,EAAE,EAAEK,MAAM,CAACL,EAAD;AAAZ;AADmC,eAA/B,C;;;;;;gDAIR,I;;;;;;;;;;;;;;;;iCAKeM,K;;;;;;;;mDAEHX,mBAASC,QAAT,CAAkBM,OAAlB,CAA0B;AAC3CJ,gBAAAA,KAAK,EAAE;AAAEQ,kBAAAA,KAAK,EAALA;AAAF;AADoC,eAA1B,C;;;;;;;;;;;;;;;;;;;;;;;;gCAQEA,K,EAAOC,O;;;;;;;;mDAEbZ,mBAASC,QAAT,CAAkBM,OAAlB,CAA0B;AACvCJ,gBAAAA,KAAK,EAAE;AAAEQ,kBAAAA,KAAK,EAALA,KAAF;AAAUE,kBAAAA,QAAQ,EAAG;AAArB;AADgC,eAA1B,C;;;AAAXL,cAAAA,E;;mBAGAA,E;;;;;;mDACWR,mBAASC,QAAT,CAAkBa,SAAlB,CAA4BC,KAA5B,CACX,oDACcJ,KADd,oBACmCC,OADnC,4CAEgBD,KAFhB,OADW,C;;;;;;gDAMRK,K;;;;;;;;;;;;;;;;wBAMMV,I;;;;;;;AAETK,cAAAA,K,GAAQL,IAAI,CAACK,K;;mDACFX,mBAASC,QAAT,CAAkBM,OAAlB,CAA0B;AACvCJ,gBAAAA,KAAK,EAAE;AAAEQ,kBAAAA,KAAK,EAALA;AAAF;AADgC,eAA1B,C;;;AAAXH,cAAAA,E;;mBAGAA,E;;;;;gDACK,I;;;;mDACWR,mBAASC,QAAT,CAAkBgB,MAAlB,CAAyBX,IAAzB,C;;;;;;;;;;;;;;;;;;;;;;;+BAKAK,K;;;;;;;;mDAELX,mBAASC,QAAT,CAAkBC,OAAlB,CAA0B;AACvCC,gBAAAA,KAAK,EAAE;AAAEQ,kBAAAA,KAAK,EAALA,KAAF;AAAUE,kBAAAA,QAAQ,EAAG;AAArB;AADgC,eAA1B,C;;;AAAXL,cAAAA,E;;kBAICA,E;;;;;gDACI,C;;;gDACKA,E;;;;;;;;;;;;;;;;;MAMlB;;;;iCAC0BU,K;;;;;;;;mDAEPlB,mBAASC,QAAT,CAAkBM,OAAlB,CAA0B;AACvCJ,gBAAAA,KAAK,EAAE;AAAEe,kBAAAA,KAAK,EAALA;AAAF;AADgC,eAA1B,C;;;AAAXV,cAAAA,E;;mBAGAA,E;;;;;;mDACWR,mBAASC,QAAT,CAAkBQ,MAAlB,CACX;AAAEI,gBAAAA,QAAQ,EAAE,IAAZ;AAAkBK,gBAAAA,KAAK,EAAE;AAAzB,eADW,EAEX;AACEf,gBAAAA,KAAK,EAAE;AAAEe,kBAAAA,KAAK,EAALA;AAAF;AADT,eAFW,C;;;;;;gDAOR,I;;;;;;;;;;;;;;;;+BAMaP,K;;;;;;;;mDAELX,mBAASC,QAAT,CAAkBC,OAAlB,CAA0B;AACvCC,gBAAAA,KAAK,EAAE;AAAEQ,kBAAAA,KAAK,EAALA,KAAF;AAASE,kBAAAA,QAAQ,EAAE;AAAnB;AADgC,eAA1B,C;;;AAAXL,cAAAA,E;;kBAGCA,E;;;;;iDACI,C;;;iDAEAQ,K;;;;;;;;;;;;;;;;;;;;;;eAQAlB,e",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services",
      "sourcesContent": [
        "import database from \"../../Model/models\";\r\n\r\nclass dangnhapService {\r\n  static async getAllTaiKhoan(quyenhang) {\r\n    try {\r\n      return await database.taikhoan.findAll({\r\n        where: { quyenhang }\r\n      });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  static async getAllquyen(quyenhang) {\r\n    try {\r\n      return await database.phanquyen.findAll({\r\n        where: { quyenhang }\r\n      });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  static async getByID(id) {\r\n    try {\r\n      return await database.taikhoan.findAll({\r\n        where: { id }\r\n      });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async UpdateTK(id, data) {\r\n    try {\r\n      let tk = await database.taikhoan.findOne({\r\n        where: { id }\r\n      });\r\n      if (tk) {\r\n        return await database.taikhoan.update(data, {\r\n          where: { id: Number(id) }\r\n        });\r\n      }\r\n      return null;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  static async kiemtraemail(email) {\r\n    try {\r\n      return await await database.taikhoan.findOne({\r\n        where: { email }\r\n      });\r\n     \r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  static async quenmatkhau(email, matkhau) {\r\n    try {\r\n      let tk = await database.taikhoan.findOne({\r\n        where: { email , kichhoat : true }\r\n      });  \r\n      if (tk) {       \r\n        return await database.taikhoan.sequelize.query(\r\n          `UPDATE public.taikhoans\r\n          SET  email='`+email+`', matkhau='`+matkhau+`'         \r\n          WHERE  email='`+email+`' `\r\n        );\r\n      }\r\n      return error;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async add(data) {\r\n    try {\r\n      let email = data.email;\r\n      let tk = await database.taikhoan.findOne({\r\n        where: { email }\r\n      });\r\n      if (tk) {\r\n        return null;\r\n      } else return await database.taikhoan.create(data);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  static async getBylogin(email) {\r\n    try {\r\n      let tk = await database.taikhoan.findAll({\r\n        where: { email , kichhoat : true}\r\n      });\r\n\r\n      if (!tk) {\r\n        return 0;\r\n      } else return tk;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // xác nhận email\r\n  static async xacNhanEmail(token) {\r\n    try {\r\n      let tk = await database.taikhoan.findOne({\r\n        where: { token }\r\n      });\r\n      if (tk) {\r\n        return await database.taikhoan.update(\r\n          { kichhoat: true, token: \"\" },\r\n          {\r\n            where: { token }\r\n          }\r\n        );\r\n      }\r\n      return null;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async getxacnhan(email) {\r\n    try {\r\n      let tk = await database.taikhoan.findAll({\r\n        where: { email, kichhoat: true }\r\n      });\r\n      if (!tk) {\r\n        return 0;\r\n      } else {\r\n        return error;\r\n      }\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default dangnhapService;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1587485969422
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\helpers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\helpers\\\\nodemailer.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\helpers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\helpers\\nodemailer.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\helpers\\nodemailer.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\helpers\\nodemailer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\helpers",
        "sourceFileName": "nodemailer.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _nodemailer = _interopRequireDefault(require(\"nodemailer\"));\n\nfunction mail(email, tenkhachhang, noidung) {\n  var transporter = _nodemailer[\"default\"].createTransport({\n    service: 'gmail',\n    auth: {\n      user: 'tranvanbaocntt1@gmail.com',\n      pass: 'tranvanbaocntt1@gmail'\n    }\n  }); // send mail with defined transport object\n\n\n  var mailOptions = {\n    from: '\"Trung Tâm Tin Học Trí Nguyễn 👻\" <foo@example.com>',\n    // sender address\n    to: email,\n    // list of receivers\n    subject: 'Xin chào ' + tenkhachhang,\n    text: '',\n    html: noidung\n  };\n  transporter.sendMail(mailOptions, function (error, info) {\n    if (error) {\n      console.log(error);\n    } else {\n      console.log('Email sent: ' + info.response);\n    }\n  });\n}\n\nmodule.exports = mail;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVtYWlsZXIuanMiXSwibmFtZXMiOlsibWFpbCIsImVtYWlsIiwidGVua2hhY2hoYW5nIiwibm9pZHVuZyIsInRyYW5zcG9ydGVyIiwibm9kZW1haWxlciIsImNyZWF0ZVRyYW5zcG9ydCIsInNlcnZpY2UiLCJhdXRoIiwidXNlciIsInBhc3MiLCJtYWlsT3B0aW9ucyIsImZyb20iLCJ0byIsInN1YmplY3QiLCJ0ZXh0IiwiaHRtbCIsInNlbmRNYWlsIiwiZXJyb3IiLCJpbmZvIiwiY29uc29sZSIsImxvZyIsInJlc3BvbnNlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUVDLFNBQVNBLElBQVQsQ0FBY0MsS0FBZCxFQUFvQkMsWUFBcEIsRUFBa0NDLE9BQWxDLEVBQTBDO0FBQ3pDLE1BQUlDLFdBQVcsR0FBR0MsdUJBQVdDLGVBQVgsQ0FBMkI7QUFDM0NDLElBQUFBLE9BQU8sRUFBRSxPQURrQztBQUUzQ0MsSUFBQUEsSUFBSSxFQUFFO0FBQ0pDLE1BQUFBLElBQUksRUFBRSwyQkFERjtBQUVKQyxNQUFBQSxJQUFJLEVBQUU7QUFGRjtBQUZxQyxHQUEzQixDQUFsQixDQUR5QyxDQVF6Qzs7O0FBQ0EsTUFBSUMsV0FBVyxHQUFHO0FBQ2hCQyxJQUFBQSxJQUFJLEVBQUUscURBRFU7QUFDNkM7QUFDN0RDLElBQUFBLEVBQUUsRUFBRVosS0FGWTtBQUVMO0FBQ1hhLElBQUFBLE9BQU8sRUFBRSxjQUFjWixZQUhQO0FBSWhCYSxJQUFBQSxJQUFJLEVBQUUsRUFKVTtBQUtoQkMsSUFBQUEsSUFBSSxFQUFFYjtBQUxVLEdBQWxCO0FBT0FDLEVBQUFBLFdBQVcsQ0FBQ2EsUUFBWixDQUFxQk4sV0FBckIsRUFBa0MsVUFBU08sS0FBVCxFQUFnQkMsSUFBaEIsRUFBcUI7QUFDckQsUUFBSUQsS0FBSixFQUFXO0FBQ1RFLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSCxLQUFaO0FBQ0QsS0FGRCxNQUVPO0FBQ0xFLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGlCQUFpQkYsSUFBSSxDQUFDRyxRQUFsQztBQUNEO0FBQ0YsR0FORDtBQU9EOztBQUVEQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJ4QixJQUFqQiIsInNvdXJjZVJvb3QiOiJEOlxcTHVhblZhblxcTHVhblZhbkQyXFx0cnVuZ3RhbV9sYW40XFxoZWxwZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG5vZGVtYWlsZXIgZnJvbSBcIm5vZGVtYWlsZXJcIlxyXG5cclxuIGZ1bmN0aW9uIG1haWwoZW1haWwsdGVua2hhY2hoYW5nLCBub2lkdW5nKXsgIFxyXG4gIHZhciB0cmFuc3BvcnRlciA9IG5vZGVtYWlsZXIuY3JlYXRlVHJhbnNwb3J0KHtcclxuICAgIHNlcnZpY2U6ICdnbWFpbCcsXHJcbiAgICBhdXRoOiB7XHJcbiAgICAgIHVzZXI6ICd0cmFudmFuYmFvY250dDFAZ21haWwuY29tJyxcclxuICAgICAgcGFzczogJ3RyYW52YW5iYW9jbnR0MUBnbWFpbCdcclxuICAgIH1cclxuICB9KTsgIFxyXG4gIC8vIHNlbmQgbWFpbCB3aXRoIGRlZmluZWQgdHJhbnNwb3J0IG9iamVjdFxyXG4gIGxldCBtYWlsT3B0aW9ucyA9IHtcclxuICAgIGZyb206ICdcIlRydW5nIFTDom0gVGluIEjhu41jIFRyw60gTmd1eeG7hW4g8J+Ru1wiIDxmb29AZXhhbXBsZS5jb20+JywgLy8gc2VuZGVyIGFkZHJlc3NcclxuICAgIHRvOiBlbWFpbCwgLy8gbGlzdCBvZiByZWNlaXZlcnNcclxuICAgIHN1YmplY3Q6ICdYaW4gY2jDoG8gJyArIHRlbmtoYWNoaGFuZyxcclxuICAgIHRleHQ6ICcnLFxyXG4gICAgaHRtbDogbm9pZHVuZ1xyXG4gIH07ICBcclxuICB0cmFuc3BvcnRlci5zZW5kTWFpbChtYWlsT3B0aW9ucywgZnVuY3Rpb24oZXJyb3IsIGluZm8pe1xyXG4gICAgaWYgKGVycm9yKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdFbWFpbCBzZW50OiAnICsgaW5mby5yZXNwb25zZSk7XHJcbiAgICB9XHJcbiAgfSk7XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gbWFpbCJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "nodemailer.js"
      ],
      "names": [
        "mail",
        "email",
        "tenkhachhang",
        "noidung",
        "transporter",
        "nodemailer",
        "createTransport",
        "service",
        "auth",
        "user",
        "pass",
        "mailOptions",
        "from",
        "to",
        "subject",
        "text",
        "html",
        "sendMail",
        "error",
        "info",
        "console",
        "log",
        "response",
        "module",
        "exports"
      ],
      "mappings": ";;;;AAAA;;AAEC,SAASA,IAAT,CAAcC,KAAd,EAAoBC,YAApB,EAAkCC,OAAlC,EAA0C;AACzC,MAAIC,WAAW,GAAGC,uBAAWC,eAAX,CAA2B;AAC3CC,IAAAA,OAAO,EAAE,OADkC;AAE3CC,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAE,2BADF;AAEJC,MAAAA,IAAI,EAAE;AAFF;AAFqC,GAA3B,CAAlB,CADyC,CAQzC;;;AACA,MAAIC,WAAW,GAAG;AAChBC,IAAAA,IAAI,EAAE,qDADU;AAC6C;AAC7DC,IAAAA,EAAE,EAAEZ,KAFY;AAEL;AACXa,IAAAA,OAAO,EAAE,cAAcZ,YAHP;AAIhBa,IAAAA,IAAI,EAAE,EAJU;AAKhBC,IAAAA,IAAI,EAAEb;AALU,GAAlB;AAOAC,EAAAA,WAAW,CAACa,QAAZ,CAAqBN,WAArB,EAAkC,UAASO,KAAT,EAAgBC,IAAhB,EAAqB;AACrD,QAAID,KAAJ,EAAW;AACTE,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACD,KAFD,MAEO;AACLE,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBF,IAAI,CAACG,QAAlC;AACD;AACF,GAND;AAOD;;AAEDC,MAAM,CAACC,OAAP,GAAiBxB,IAAjB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\helpers",
      "sourcesContent": [
        "import nodemailer from \"nodemailer\"\r\n\r\n function mail(email,tenkhachhang, noidung){  \r\n  var transporter = nodemailer.createTransport({\r\n    service: 'gmail',\r\n    auth: {\r\n      user: 'tranvanbaocntt1@gmail.com',\r\n      pass: 'tranvanbaocntt1@gmail'\r\n    }\r\n  });  \r\n  // send mail with defined transport object\r\n  let mailOptions = {\r\n    from: '\"Trung Tâm Tin Học Trí Nguyễn 👻\" <foo@example.com>', // sender address\r\n    to: email, // list of receivers\r\n    subject: 'Xin chào ' + tenkhachhang,\r\n    text: '',\r\n    html: noidung\r\n  };  \r\n  transporter.sendMail(mailOptions, function(error, info){\r\n    if (error) {\r\n      console.log(error);\r\n    } else {\r\n      console.log('Email sent: ' + info.response);\r\n    }\r\n  });\r\n}\r\n\r\nmodule.exports = mail"
      ]
    },
    "sourceType": "script",
    "mtime": 1584884275503
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\\\\outsite\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\\\\outsite\\\\indexOutsiteR.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\outsite",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\outsite\\indexOutsiteR.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\outsite\\indexOutsiteR.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\outsite\\indexOutsiteR.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\outsite",
        "sourceFileName": "indexOutsiteR.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _express = require(\"express\");\n\nvar _indexC = _interopRequireDefault(require(\"../../controllers/outsite/indexC\"));\n\nvar router = (0, _express.Router)();\nrouter.route('/').get(_indexC[\"default\"].getAll); //router.get('*', (req, res) => res.redirect(\"/\"));\n//export default router;\n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4T3V0c2l0ZVIuanMiXSwibmFtZXMiOlsicm91dGVyIiwicm91dGUiLCJnZXQiLCJpbmRleEMiLCJnZXRBbGwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUE7O0FBQ0E7O0FBR0EsSUFBTUEsTUFBTSxHQUFHLHNCQUFmO0FBQ0FBLE1BQU0sQ0FBQ0MsS0FBUCxDQUFhLEdBQWIsRUFDQ0MsR0FERCxDQUNLQyxtQkFBT0MsTUFEWixFLENBSUE7QUFFQTs7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCTixNQUFqQiIsInNvdXJjZVJvb3QiOiJEOlxcTHVhblZhblxcTHVhblZhbkQyXFx0cnVuZ3RhbV9sYW40XFxhcHBzXFxyb3V0ZXJzXFxvdXRzaXRlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnZXhwcmVzcyc7XHJcbmltcG9ydCBpbmRleEMgZnJvbSAnLi4vLi4vY29udHJvbGxlcnMvb3V0c2l0ZS9pbmRleEMnO1xyXG5cclxuXHJcbmNvbnN0IHJvdXRlciA9IFJvdXRlcigpO1xyXG5yb3V0ZXIucm91dGUoJy8nKVxyXG4uZ2V0KGluZGV4Qy5nZXRBbGwpXHJcblxyXG5cclxuLy9yb3V0ZXIuZ2V0KCcqJywgKHJlcSwgcmVzKSA9PiByZXMucmVkaXJlY3QoXCIvXCIpKTtcclxuXHJcbi8vZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "indexOutsiteR.js"
      ],
      "names": [
        "router",
        "route",
        "get",
        "indexC",
        "getAll",
        "module",
        "exports"
      ],
      "mappings": ";;;;AAAA;;AACA;;AAGA,IAAMA,MAAM,GAAG,sBAAf;AACAA,MAAM,CAACC,KAAP,CAAa,GAAb,EACCC,GADD,CACKC,mBAAOC,MADZ,E,CAIA;AAEA;;AAEAC,MAAM,CAACC,OAAP,GAAiBN,MAAjB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\outsite",
      "sourcesContent": [
        "import { Router } from 'express';\r\nimport indexC from '../../controllers/outsite/indexC';\r\n\r\n\r\nconst router = Router();\r\nrouter.route('/')\r\n.get(indexC.getAll)\r\n\r\n\r\n//router.get('*', (req, res) => res.redirect(\"/\"));\r\n\r\n//export default router;\r\n\r\nmodule.exports = router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1583501969119
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\\\\outsite\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\\\\outsite\\\\indexC.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite\\indexC.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite\\indexC.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite\\indexC.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite",
        "sourceFileName": "indexC.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _sDate = _interopRequireDefault(require(\"s-date\"));\n\nvar _lopHocService = _interopRequireDefault(require(\"../../services/lopHocService\"));\n\nvar _baivietService = _interopRequireDefault(require(\"../../services/baivietService\"));\n\nvar indexController =\n/*#__PURE__*/\nfunction () {\n  function indexController() {\n    (0, _classCallCheck2[\"default\"])(this, indexController);\n  }\n\n  (0, _createClass2[\"default\"])(indexController, null, [{\n    key: \"getAll\",\n    value: function getAll(req, res) {\n      var user, data1, baiviet, data;\n      return _regenerator[\"default\"].async(function getAll$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              user = [];\n\n              if (req.session.user) {\n                user = req.session.user;\n              }\n\n              _context.next = 5;\n              return _regenerator[\"default\"].awrap(_lopHocService[\"default\"].getAllOusite());\n\n            case 5:\n              data1 = _context.sent;\n              _context.next = 8;\n              return _regenerator[\"default\"].awrap(_baivietService[\"default\"].getNew());\n\n            case 8:\n              baiviet = _context.sent;\n              data = data1[0];\n\n              if (data.length > 0) {\n                res.render(\"../views/outsite/index.ejs\", {\n                  data: data,\n                  date: _sDate[\"default\"],\n                  user: user,\n                  baiviet: baiviet\n                });\n              } else {\n                res.render(\"../views/outsite/index.ejs\", {\n                  data: data,\n                  date: _sDate[\"default\"],\n                  user: user,\n                  baiviet: baiviet\n                });\n              }\n\n              return _context.abrupt(\"return\", 0);\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](0);\n              return _context.abrupt(\"return\", 0);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 14]]);\n    }\n  }]);\n  return indexController;\n}();\n\nvar _default = indexController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4Qy5qcyJdLCJuYW1lcyI6WyJpbmRleENvbnRyb2xsZXIiLCJyZXEiLCJyZXMiLCJ1c2VyIiwic2Vzc2lvbiIsImxvcEhvY1NlcnZpY2UiLCJnZXRBbGxPdXNpdGUiLCJkYXRhMSIsImJhaXZpZXRTZXJ2aWNlIiwiZ2V0TmV3IiwiYmFpdmlldCIsImRhdGEiLCJsZW5ndGgiLCJyZW5kZXIiLCJkYXRlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7SUFDTUEsZTs7Ozs7Ozs7OzJCQUNnQkMsRyxFQUFLQyxHOzs7Ozs7O0FBRWZDLGNBQUFBLEksR0FBTyxFOztBQUNYLGtCQUFHRixHQUFHLENBQUNHLE9BQUosQ0FBWUQsSUFBZixFQUFvQjtBQUNsQkEsZ0JBQUFBLElBQUksR0FBR0YsR0FBRyxDQUFDRyxPQUFKLENBQVlELElBQW5CO0FBQ0Q7OzttREFDaUJFLDBCQUFjQyxZQUFkLEU7OztBQUFkQyxjQUFBQSxLOzttREFDZ0JDLDJCQUFlQyxNQUFmLEU7OztBQUFoQkMsY0FBQUEsTztBQUNDQyxjQUFBQSxJLEdBQVFKLEtBQUssQ0FBQyxDQUFELEM7O0FBQ2xCLGtCQUFJSSxJQUFJLENBQUNDLE1BQUwsR0FBYyxDQUFsQixFQUFxQjtBQUNuQlYsZ0JBQUFBLEdBQUcsQ0FBQ1csTUFBSixDQUFXLDRCQUFYLEVBQXlDO0FBQUVGLGtCQUFBQSxJQUFJLEVBQUpBLElBQUY7QUFBUUcsa0JBQUFBLElBQUksRUFBSkEsaUJBQVI7QUFBY1gsa0JBQUFBLElBQUksRUFBSkEsSUFBZDtBQUFtQk8sa0JBQUFBLE9BQU8sRUFBUEE7QUFBbkIsaUJBQXpDO0FBQ0QsZUFGRCxNQUVPO0FBQ0xSLGdCQUFBQSxHQUFHLENBQUNXLE1BQUosQ0FBVyw0QkFBWCxFQUF5QztBQUFFRixrQkFBQUEsSUFBSSxFQUFKQSxJQUFGO0FBQVFHLGtCQUFBQSxJQUFJLEVBQUpBLGlCQUFSO0FBQWNYLGtCQUFBQSxJQUFJLEVBQUpBLElBQWQ7QUFBbUJPLGtCQUFBQSxPQUFPLEVBQVBBO0FBQW5CLGlCQUF6QztBQUNEOzsrQ0FDTSxDOzs7OzsrQ0FFQSxDOzs7Ozs7Ozs7Ozs7O2VBTUFWLGUiLCJzb3VyY2VSb290IjoiRDpcXEx1YW5WYW5cXEx1YW5WYW5EMlxcdHJ1bmd0YW1fbGFuNFxcYXBwc1xcY29udHJvbGxlcnNcXG91dHNpdGUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZGF0ZSBmcm9tIFwicy1kYXRlXCI7XHJcbmltcG9ydCBsb3BIb2NTZXJ2aWNlIGZyb20gXCIuLi8uLi9zZXJ2aWNlcy9sb3BIb2NTZXJ2aWNlXCI7XHJcbmltcG9ydCBiYWl2aWV0U2VydmljZSBmcm9tIFwiLi4vLi4vc2VydmljZXMvYmFpdmlldFNlcnZpY2VcIjtcclxuY2xhc3MgaW5kZXhDb250cm9sbGVyIHtcclxuICBzdGF0aWMgYXN5bmMgZ2V0QWxsKHJlcSwgcmVzKSB7ICBcclxuICAgICAgdHJ5IHsgICAgICAgICAgXHJcbiAgICAgICAgbGV0IHVzZXIgPSBbXVxyXG4gICAgICAgIGlmKHJlcS5zZXNzaW9uLnVzZXIpe1xyXG4gICAgICAgICAgdXNlciA9IHJlcS5zZXNzaW9uLnVzZXJcclxuICAgICAgICB9ICAgICAgICAgIFxyXG4gICAgICBjb25zdCBkYXRhMSA9IGF3YWl0IGxvcEhvY1NlcnZpY2UuZ2V0QWxsT3VzaXRlKCk7ICAgICAgXHJcbiAgICAgIGNvbnN0IGJhaXZpZXQgPSBhd2FpdCBiYWl2aWV0U2VydmljZS5nZXROZXcoKTsgICAgIFxyXG4gICAgICAgY29uc3QgZGF0YSA9ICBkYXRhMVswXVxyXG4gICAgICAgIGlmIChkYXRhLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgIHJlcy5yZW5kZXIoXCIuLi92aWV3cy9vdXRzaXRlL2luZGV4LmVqc1wiLCB7IGRhdGEsIGRhdGUsIHVzZXIsYmFpdmlldCB9KTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgcmVzLnJlbmRlcihcIi4uL3ZpZXdzL291dHNpdGUvaW5kZXguZWpzXCIsIHsgZGF0YSwgZGF0ZSAsdXNlcixiYWl2aWV0fSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiAwO1xyXG4gICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIHJldHVybiAwO1xyXG4gICAgICB9XHJcbiAgIFxyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgaW5kZXhDb250cm9sbGVyO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "indexC.js"
      ],
      "names": [
        "indexController",
        "req",
        "res",
        "user",
        "session",
        "lopHocService",
        "getAllOusite",
        "data1",
        "baivietService",
        "getNew",
        "baiviet",
        "data",
        "length",
        "render",
        "date"
      ],
      "mappings": ";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;IACMA,e;;;;;;;;;2BACgBC,G,EAAKC,G;;;;;;;AAEfC,cAAAA,I,GAAO,E;;AACX,kBAAGF,GAAG,CAACG,OAAJ,CAAYD,IAAf,EAAoB;AAClBA,gBAAAA,IAAI,GAAGF,GAAG,CAACG,OAAJ,CAAYD,IAAnB;AACD;;;mDACiBE,0BAAcC,YAAd,E;;;AAAdC,cAAAA,K;;mDACgBC,2BAAeC,MAAf,E;;;AAAhBC,cAAAA,O;AACCC,cAAAA,I,GAAQJ,KAAK,CAAC,CAAD,C;;AAClB,kBAAII,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AACnBV,gBAAAA,GAAG,CAACW,MAAJ,CAAW,4BAAX,EAAyC;AAAEF,kBAAAA,IAAI,EAAJA,IAAF;AAAQG,kBAAAA,IAAI,EAAJA,iBAAR;AAAcX,kBAAAA,IAAI,EAAJA,IAAd;AAAmBO,kBAAAA,OAAO,EAAPA;AAAnB,iBAAzC;AACD,eAFD,MAEO;AACLR,gBAAAA,GAAG,CAACW,MAAJ,CAAW,4BAAX,EAAyC;AAAEF,kBAAAA,IAAI,EAAJA,IAAF;AAAQG,kBAAAA,IAAI,EAAJA,iBAAR;AAAcX,kBAAAA,IAAI,EAAJA,IAAd;AAAmBO,kBAAAA,OAAO,EAAPA;AAAnB,iBAAzC;AACD;;+CACM,C;;;;;+CAEA,C;;;;;;;;;;;;;eAMAV,e",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite",
      "sourcesContent": [
        "import date from \"s-date\";\r\nimport lopHocService from \"../../services/lopHocService\";\r\nimport baivietService from \"../../services/baivietService\";\r\nclass indexController {\r\n  static async getAll(req, res) {  \r\n      try {          \r\n        let user = []\r\n        if(req.session.user){\r\n          user = req.session.user\r\n        }          \r\n      const data1 = await lopHocService.getAllOusite();      \r\n      const baiviet = await baivietService.getNew();     \r\n       const data =  data1[0]\r\n        if (data.length > 0) {\r\n          res.render(\"../views/outsite/index.ejs\", { data, date, user,baiviet });\r\n        } else {\r\n          res.render(\"../views/outsite/index.ejs\", { data, date ,user,baiviet});\r\n        }\r\n        return 0;\r\n      } catch (error) {\r\n        return 0;\r\n      }\r\n   \r\n  }\r\n}\r\n\r\nexport default indexController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1587478003595
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\services\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\services\\\\lopHocService.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services\\lopHocService.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services\\lopHocService.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services\\lopHocService.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services",
        "sourceFileName": "lopHocService.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _models = _interopRequireDefault(require(\"../../Model/models\"));\n\nvar lophocService =\n/*#__PURE__*/\nfunction () {\n  function lophocService() {\n    (0, _classCallCheck2[\"default\"])(this, lophocService);\n  }\n\n  (0, _createClass2[\"default\"])(lophocService, null, [{\n    key: \"getAll\",\n    value: function getAll(trangthai) {\n      var lophoc;\n      return _regenerator[\"default\"].async(function getAll$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].khoahoc.sequelize.query(\"Select giangviens.hoten , lophocs.* , phonghocs.tenphonghoc ,phonghocs.id as id_phong\\n        from public.lophocs,public.phonghocs, public.giangviens\\n        where giangviens.id = lophocs.id_giangvien and lophocs.trangthai=\" + trangthai + \" and phonghocs.id = lophocs.id_phonghoc\\n        ORDER BY id DESC\"));\n\n            case 3:\n              lophoc = _context.sent;\n              return _context.abrupt(\"return\", lophoc);\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              throw _context.t0;\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    }\n  }, {\n    key: \"getsapmo\",\n    value: function getsapmo() {\n      return _regenerator[\"default\"].async(function getsapmo$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].lophoc.findAll({\n                where: {\n                  trangthai: 1\n                }\n              }));\n\n            case 3:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              throw _context2.t0;\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    } // === sd thoi khoa bieu ====\n\n  }, {\n    key: \"getdanghoc\",\n    value: function getdanghoc() {\n      var lophoc;\n      return _regenerator[\"default\"].async(function getdanghoc$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].khoahoc.sequelize.query(\"Select giangviens.hoten , lophocs.* ,phonghocs.tenphonghoc\\n        from public.lophocs, public.giangviens , public.phonghocs\\n        where giangviens.id = lophocs.id_giangvien and lophocs.trangthai=2 and phonghocs.id = lophocs.id_phonghoc\\n         ORDER BY id DESC\"));\n\n            case 3:\n              lophoc = _context3.sent;\n              return _context3.abrupt(\"return\", lophoc);\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](0);\n              throw _context3.t0;\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    }\n  }, {\n    key: \"get1lop\",\n    value: function get1lop(trangthai) {\n      var lophoc;\n      return _regenerator[\"default\"].async(function get1lop$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].khoahoc.sequelize.query(\"Select giangviens.hoten , lophocs.* \\n        from public.lophocs, public.giangviens \\n        where giangviens.id = lophocs.id_giangvien and lophocs.trangthai=\" + trangthai + \" ORDER BY id DESC\"));\n\n            case 3:\n              lophoc = _context4.sent;\n              return _context4.abrupt(\"return\", lophoc);\n\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4[\"catch\"](0);\n              throw _context4.t0;\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    }\n  }, {\n    key: \"getByID\",\n    value: function getByID(id) {\n      return _regenerator[\"default\"].async(function getByID$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].lophoc.findAll({\n                where: {\n                  id: id\n                }\n              }));\n\n            case 3:\n              return _context5.abrupt(\"return\", _context5.sent);\n\n            case 6:\n              _context5.prev = 6;\n              _context5.t0 = _context5[\"catch\"](0);\n              throw _context5.t0;\n\n            case 9:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(id) {\n      return _regenerator[\"default\"].async(function _delete$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].lophoc.destroy({\n                where: {\n                  id: id\n                }\n              }));\n\n            case 3:\n              return _context6.abrupt(\"return\", _context6.sent);\n\n            case 6:\n              _context6.prev = 6;\n              _context6.t0 = _context6[\"catch\"](0);\n              throw _context6.t0;\n\n            case 9:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"Save\",\n    value: function Save(data) {\n      return _regenerator[\"default\"].async(function Save$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _context7.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].lophoc.create(data));\n\n            case 3:\n              return _context7.abrupt(\"return\", _context7.sent);\n\n            case 6:\n              _context7.prev = 6;\n              _context7.t0 = _context7[\"catch\"](0);\n              throw _context7.t0;\n\n            case 9:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"Update\",\n    value: function Update(id, data) {\n      var tk;\n      return _regenerator[\"default\"].async(function Update$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              _context8.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].lophoc.findOne({\n                where: {\n                  id: id\n                }\n              }));\n\n            case 3:\n              tk = _context8.sent;\n\n              if (!tk) {\n                _context8.next = 8;\n                break;\n              }\n\n              _context8.next = 7;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].lophoc.update(data, {\n                where: {\n                  id: id\n                }\n              }));\n\n            case 7:\n              return _context8.abrupt(\"return\", data);\n\n            case 8:\n              return _context8.abrupt(\"return\", null);\n\n            case 11:\n              _context8.prev = 11;\n              _context8.t0 = _context8[\"catch\"](0);\n              throw _context8.t0;\n\n            case 14:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, null, [[0, 11]]);\n    }\n  }, {\n    key: \"add\",\n    value: function add(data) {\n      var thoigianbatdau, tenlophoc, trangthai, tk, up;\n      return _regenerator[\"default\"].async(function add$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.prev = 0;\n              thoigianbatdau = data.thoigianbatdau;\n              tenlophoc = data.tenlophoc;\n              trangthai = data.trangthai;\n              _context9.next = 6;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].lophoc.findOne({\n                where: {\n                  thoigianbatdau: thoigianbatdau,\n                  tenlophoc: tenlophoc,\n                  trangthai: trangthai\n                }\n              }));\n\n            case 6:\n              tk = _context9.sent;\n              console.log(tk);\n\n              if (!(tk == null)) {\n                _context9.next = 12;\n                break;\n              }\n\n              return _context9.abrupt(\"return\", 0);\n\n            case 12:\n              _context9.next = 14;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].lophoc.create(data));\n\n            case 14:\n              up = _context9.sent;\n\n              if (!up) {\n                _context9.next = 19;\n                break;\n              }\n\n              return _context9.abrupt(\"return\", 2);\n\n            case 19:\n              return _context9.abrupt(\"return\", 1);\n\n            case 20:\n              _context9.next = 25;\n              break;\n\n            case 22:\n              _context9.prev = 22;\n              _context9.t0 = _context9[\"catch\"](0);\n              throw _context9.t0;\n\n            case 25:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, null, null, [[0, 22]]);\n    } // ====================out site=========\n\n  }, {\n    key: \"getAllOusite\",\n    value: function getAllOusite() {\n      var id_khoahoc;\n      return _regenerator[\"default\"].async(function getAllOusite$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.prev = 0;\n              _context10.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].khoahoc.sequelize.query(\"SELECT  khoahocs.hinhanh ,lophocs.*\\n        FROM public.khoahocs,public.lophocs \\n        where lophocs.tenlophoc = khoahocs.tenkhoahoc  and lophocs.trangthai =1 \\n        ORDER BY id DESC\"));\n\n            case 3:\n              id_khoahoc = _context10.sent;\n              return _context10.abrupt(\"return\", id_khoahoc);\n\n            case 7:\n              _context10.prev = 7;\n              _context10.t0 = _context10[\"catch\"](0);\n              throw _context10.t0;\n\n            case 10:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    } //  === noi dung khoa hoc /course/noidung\n\n  }, {\n    key: \"getAllOusiteND\",\n    value: function getAllOusiteND() {\n      var id_khoahoc;\n      return _regenerator[\"default\"].async(function getAllOusiteND$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.prev = 0;\n              _context11.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].khoahoc.sequelize.query(\"SELECT  khoahocs.* \\n        FROM public.khoahocs,public.lophocs \\n        where lophocs.tenlophoc = khoahocs.tenkhoahoc  and lophocs.trangthai =1 \\n        ORDER BY id DESC\"));\n\n            case 3:\n              id_khoahoc = _context11.sent;\n              return _context11.abrupt(\"return\", id_khoahoc);\n\n            case 7:\n              _context11.prev = 7;\n              _context11.t0 = _context11[\"catch\"](0);\n              throw _context11.t0;\n\n            case 10:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    } // =================trang ca nhan giang vien==========\n    // static async getAllGV(trangthai ,id_giangvien) {\n    //   try {\n    //      let lophoc = await database.khoahoc.sequelize.query(\n    //       `Select giangviens.hoten , lophocs.*\n    //       from public.lophocs, public.giangviens\n    //       where giangviens.id = lophocs.id_giangvien and lophocs.trangthai=`+trangthai+` and lophocs.id_giangvien = `+id_giangvien+`\n    //       ORDER BY id DESC`\n    //     );\n    //     return lophoc;\n    //   } catch (error) {\n    //     throw error;\n    //   }\n    // }\n\n  }]);\n  return lophocService;\n}();\n\nvar _default = lophocService;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "lopHocService.js"
      ],
      "names": [
        "lophocService",
        "trangthai",
        "database",
        "khoahoc",
        "sequelize",
        "query",
        "lophoc",
        "findAll",
        "where",
        "id",
        "destroy",
        "data",
        "create",
        "findOne",
        "tk",
        "update",
        "thoigianbatdau",
        "tenlophoc",
        "console",
        "log",
        "up",
        "id_khoahoc"
      ],
      "mappings": ";;;;;;;;;;;;;;;AAAA;;IAEMA,a;;;;;;;;;2BACgBC,S;;;;;;;;mDAEGC,mBAASC,OAAT,CAAiBC,SAAjB,CAA2BC,KAA3B,CACjB,sOAGEJ,SAHF,sEADiB,C;;;AAAfK,cAAAA,M;+CAQGA,M;;;;;;;;;;;;;;;;;;;;;;;mDAOMJ,mBAASI,MAAT,CAAgBC,OAAhB,CAAwB;AACnCC,gBAAAA,KAAK,EAAE;AAAEP,kBAAAA,SAAS,EAAE;AAAb;AAD4B,eAAxB,C;;;;;;;;;;;;;;;;MAOjB;;;;;;;;;;;;mDAGuBC,mBAASC,OAAT,CAAiBC,SAAjB,CAA2BC,KAA3B,+Q;;;AAAfC,cAAAA,M;gDAMGA,M;;;;;;;;;;;;;;;;4BAKUL,S;;;;;;;;mDAEEC,mBAASC,OAAT,CAAiBC,SAAjB,CAA2BC,KAA3B,CACjB,qKAGEJ,SAHF,sBADiB,C;;;AAAfK,cAAAA,M;gDAOGA,M;;;;;;;;;;;;;;;;4BAKUG,E;;;;;;;mDAEJP,mBAASI,MAAT,CAAgBC,OAAhB,CAAwB;AACnCC,gBAAAA,KAAK,EAAE;AAAEC,kBAAAA,EAAE,EAAFA;AAAF;AAD4B,eAAxB,C;;;;;;;;;;;;;;;;;;;4BAQGA,E;;;;;;;mDAEHP,mBAASI,MAAT,CAAgBI,OAAhB,CAAwB;AACnCF,gBAAAA,KAAK,EAAE;AAAEC,kBAAAA,EAAE,EAAFA;AAAF;AAD4B,eAAxB,C;;;;;;;;;;;;;;;;;;;yBAOCE,I;;;;;;;mDAEDT,mBAASI,MAAT,CAAgBM,MAAhB,CAAuBD,IAAvB,C;;;;;;;;;;;;;;;;;;;2BAMGF,E,EAAIE,I;;;;;;;;mDAELT,mBAASI,MAAT,CAAgBO,OAAhB,CAAwB;AACrCL,gBAAAA,KAAK,EAAE;AAAEC,kBAAAA,EAAE,EAAFA;AAAF;AAD8B,eAAxB,C;;;AAAXK,cAAAA,E;;mBAGAA,E;;;;;;mDACIZ,mBAASI,MAAT,CAAgBS,MAAhB,CAAuBJ,IAAvB,EAA6B;AACjCH,gBAAAA,KAAK,EAAE;AAAEC,kBAAAA,EAAE,EAAFA;AAAF;AAD0B,eAA7B,C;;;gDAGCE,I;;;gDAEF,I;;;;;;;;;;;;;;;;wBAMMA,I;;;;;;;AAETK,cAAAA,c,GAAiBL,IAAI,CAACK,c;AACtBC,cAAAA,S,GAAaN,IAAI,CAACM,S;AAClBhB,cAAAA,S,GAAaU,IAAI,CAACV,S;;mDACPC,mBAASI,MAAT,CAAgBO,OAAhB,CAAwB;AACrCL,gBAAAA,KAAK,EAAE;AAAEQ,kBAAAA,cAAc,EAAdA,cAAF;AAAmBC,kBAAAA,SAAS,EAATA,SAAnB;AAA8BhB,kBAAAA,SAAS,EAATA;AAA9B;AAD8B,eAAxB,C;;;AAAXa,cAAAA,E;AAGJI,cAAAA,OAAO,CAACC,GAAR,CAAYL,EAAZ;;oBACIA,EAAE,IAAI,I;;;;;gDACA,C;;;;mDAEOZ,mBAASI,MAAT,CAAgBM,MAAhB,CAAuBD,IAAvB,C;;;AAAXS,cAAAA,E;;mBACDA,E;;;;;gDACM,C;;;gDACI,C;;;;;;;;;;;;;;;;;MAQnB;;;;;;;;;;;;mDAG2BlB,mBAASC,OAAT,CAAiBC,SAAjB,CAA2BC,KAA3B,iM;;;AAAnBgB,cAAAA,U;iDAMGA,U;;;;;;;;;;;;;MAMX;;;;;;;;;;;;mDAG2BnB,mBAASC,OAAT,CAAiBC,SAAjB,CAA2BC,KAA3B,iL;;;AAAnBgB,cAAAA,U;iDAMGA,U;;;;;;;;;;;;;MAMX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;eAGarB,a",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services",
      "sourcesContent": [
        "import database from \"../../Model/models\";\r\n\r\nclass lophocService {\r\n  static async getAll(trangthai) {\r\n    try {\r\n      let lophoc = await database.khoahoc.sequelize.query(\r\n        `Select giangviens.hoten , lophocs.* , phonghocs.tenphonghoc ,phonghocs.id as id_phong\r\n        from public.lophocs,public.phonghocs, public.giangviens\r\n        where giangviens.id = lophocs.id_giangvien and lophocs.trangthai=` +\r\n          trangthai +\r\n          ` and phonghocs.id = lophocs.id_phonghoc\r\n        ORDER BY id DESC`\r\n      );\r\n      return lophoc;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  static async getsapmo() {\r\n    try {\r\n      return await database.lophoc.findAll({\r\n        where: { trangthai: 1 }\r\n      });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  // === sd thoi khoa bieu ====\r\n  static async getdanghoc() {\r\n    try {\r\n      let lophoc = await database.khoahoc.sequelize.query(\r\n        `Select giangviens.hoten , lophocs.* ,phonghocs.tenphonghoc\r\n        from public.lophocs, public.giangviens , public.phonghocs\r\n        where giangviens.id = lophocs.id_giangvien and lophocs.trangthai=2 and phonghocs.id = lophocs.id_phonghoc\r\n         ORDER BY id DESC`\r\n      );\r\n      return lophoc;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  static async get1lop(trangthai) {\r\n    try {\r\n      let lophoc = await database.khoahoc.sequelize.query(\r\n        `Select giangviens.hoten , lophocs.* \r\n        from public.lophocs, public.giangviens \r\n        where giangviens.id = lophocs.id_giangvien and lophocs.trangthai=` +\r\n          trangthai +\r\n          ` ORDER BY id DESC`\r\n      );\r\n      return lophoc;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  static async getByID(id) {\r\n    try {\r\n      return await database.lophoc.findAll({\r\n        where: { id }\r\n      });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async delete(id) {\r\n    try {\r\n      return await database.lophoc.destroy({\r\n        where: { id }\r\n      });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  static async Save(data) {\r\n    try {\r\n      return await database.lophoc.create(data);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async Update(id, data) {\r\n    try {\r\n      let tk = await database.lophoc.findOne({\r\n        where: { id }\r\n      });\r\n      if (tk) {\r\n        await database.lophoc.update(data, {\r\n          where: { id }\r\n        });\r\n        return data;\r\n      }\r\n      return null;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async add(data) {\r\n    try {\r\n      let thoigianbatdau = data.thoigianbatdau   \r\n      let tenlophoc  = data.tenlophoc \r\n      let trangthai  = data.trangthai \r\n      let tk = await database.lophoc.findOne({\r\n        where: { thoigianbatdau , tenlophoc, trangthai }\r\n      });\r\n      console.log(tk);      \r\n      if (tk == null) {\r\n         return 0;\r\n      }else{\r\n        let up = await database.lophoc.create(data);\r\n        if(up){\r\n          return 2\r\n        }else return 1\r\n       \r\n      }     \r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // ====================out site=========\r\n  static async getAllOusite() {\r\n    try {\r\n      let id_khoahoc = await database.khoahoc.sequelize.query(\r\n        `SELECT  khoahocs.hinhanh ,lophocs.*\r\n        FROM public.khoahocs,public.lophocs \r\n        where lophocs.tenlophoc = khoahocs.tenkhoahoc  and lophocs.trangthai =1 \r\n        ORDER BY id DESC`\r\n      );\r\n      return id_khoahoc;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  //  === noi dung khoa hoc /course/noidung\r\n  static async getAllOusiteND() {\r\n    try {\r\n      let id_khoahoc = await database.khoahoc.sequelize.query(\r\n        `SELECT  khoahocs.* \r\n        FROM public.khoahocs,public.lophocs \r\n        where lophocs.tenlophoc = khoahocs.tenkhoahoc  and lophocs.trangthai =1 \r\n        ORDER BY id DESC`\r\n      );\r\n      return id_khoahoc;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // =================trang ca nhan giang vien==========\r\n  // static async getAllGV(trangthai ,id_giangvien) {\r\n  //   try {\r\n  //      let lophoc = await database.khoahoc.sequelize.query(\r\n  //       `Select giangviens.hoten , lophocs.*\r\n  //       from public.lophocs, public.giangviens\r\n  //       where giangviens.id = lophocs.id_giangvien and lophocs.trangthai=`+trangthai+` and lophocs.id_giangvien = `+id_giangvien+`\r\n  //       ORDER BY id DESC`\r\n  //     );\r\n  //     return lophoc;\r\n\r\n  //   } catch (error) {\r\n  //     throw error;\r\n  //   }\r\n  // }\r\n}\r\n\r\nexport default lophocService;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585664770433
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\\\\outsite\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\\\\outsite\\\\forumsRoute.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\outsite",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\outsite\\forumsRoute.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\outsite\\forumsRoute.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\outsite\\forumsRoute.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\outsite",
        "sourceFileName": "forumsRoute.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _express = require(\"express\");\n\nvar _forumController = _interopRequireDefault(require(\"../../controllers/outsite/forumController\"));\n\nvar router = (0, _express.Router)();\nrouter.route(\"/baiviet/:limit\").get(_forumController[\"default\"].getAll); //   router\n//   .route(\"/chi-tiet\")\n//   .get(forumController.getAll)\n\nrouter.route(\"/chi-tiet/:id\").get(_forumController[\"default\"].getChiTiet).post(_forumController[\"default\"].addcoment);\nrouter.route(\"/hoi-bai\").get(_forumController[\"default\"].getHoiBai).post(_forumController[\"default\"].add);\nrouter.route(\"/khoahoc/:id/:tenkhoahoc/:limit\").get(_forumController[\"default\"].gettheokhoahoc);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZvcnVtc1JvdXRlLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsInJvdXRlIiwiZ2V0IiwiZm9ydW1Db250cm9sbGVyIiwiZ2V0QWxsIiwiZ2V0Q2hpVGlldCIsInBvc3QiLCJhZGRjb21lbnQiLCJnZXRIb2lCYWkiLCJhZGQiLCJnZXR0aGVva2hvYWhvYyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFDQTs7QUFDQSxJQUFNQSxNQUFNLEdBQUcsc0JBQWY7QUFHQUEsTUFBTSxDQUNIQyxLQURILENBQ1MsaUJBRFQsRUFFR0MsR0FGSCxDQUVPQyw0QkFBZ0JDLE1BRnZCLEUsQ0FJQTtBQUNBO0FBQ0E7O0FBRUFKLE1BQU0sQ0FDSEMsS0FESCxDQUNTLGVBRFQsRUFFR0MsR0FGSCxDQUVPQyw0QkFBZ0JFLFVBRnZCLEVBR0dDLElBSEgsQ0FHUUgsNEJBQWdCSSxTQUh4QjtBQU1BUCxNQUFNLENBQ0xDLEtBREQsQ0FDTyxVQURQLEVBRUNDLEdBRkQsQ0FFS0MsNEJBQWdCSyxTQUZyQixFQUdDRixJQUhELENBR01ILDRCQUFnQk0sR0FIdEI7QUFPQVQsTUFBTSxDQUNMQyxLQURELENBQ08saUNBRFAsRUFFQ0MsR0FGRCxDQUVLQyw0QkFBZ0JPLGNBRnJCO0FBT0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlosTUFBakIiLCJzb3VyY2VSb290IjoiRDpcXEx1YW5WYW5cXEx1YW5WYW5EMlxcdHJ1bmd0YW1fbGFuNFxcYXBwc1xccm91dGVyc1xcb3V0c2l0ZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gXCJleHByZXNzXCI7XHJcbmltcG9ydCBmb3J1bUNvbnRyb2xsZXIgZnJvbSBcIi4uLy4uL2NvbnRyb2xsZXJzL291dHNpdGUvZm9ydW1Db250cm9sbGVyXCI7XHJcbmNvbnN0IHJvdXRlciA9IFJvdXRlcigpO1xyXG5cclxuXHJcbnJvdXRlclxyXG4gIC5yb3V0ZShcIi9iYWl2aWV0LzpsaW1pdFwiKVxyXG4gIC5nZXQoZm9ydW1Db250cm9sbGVyLmdldEFsbClcclxuICBcclxuLy8gICByb3V0ZXJcclxuLy8gICAucm91dGUoXCIvY2hpLXRpZXRcIilcclxuLy8gICAuZ2V0KGZvcnVtQ29udHJvbGxlci5nZXRBbGwpXHJcbiAgXHJcbnJvdXRlclxyXG4gIC5yb3V0ZShcIi9jaGktdGlldC86aWRcIilcclxuICAuZ2V0KGZvcnVtQ29udHJvbGxlci5nZXRDaGlUaWV0KSBcclxuICAucG9zdChmb3J1bUNvbnRyb2xsZXIuYWRkY29tZW50KVxyXG4gXHJcbiBcclxucm91dGVyXHJcbi5yb3V0ZShcIi9ob2ktYmFpXCIpXHJcbi5nZXQoZm9ydW1Db250cm9sbGVyLmdldEhvaUJhaSlcclxuLnBvc3QoZm9ydW1Db250cm9sbGVyLmFkZClcclxuXHJcblxyXG5cclxucm91dGVyXHJcbi5yb3V0ZShcIi9raG9haG9jLzppZC86dGVua2hvYWhvYy86bGltaXRcIilcclxuLmdldChmb3J1bUNvbnRyb2xsZXIuZ2V0dGhlb2tob2Fob2MpXHJcblxyXG4gIFxyXG4gIFxyXG4gIFxyXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "forumsRoute.js"
      ],
      "names": [
        "router",
        "route",
        "get",
        "forumController",
        "getAll",
        "getChiTiet",
        "post",
        "addcoment",
        "getHoiBai",
        "add",
        "gettheokhoahoc",
        "module",
        "exports"
      ],
      "mappings": ";;;;AAAA;;AACA;;AACA,IAAMA,MAAM,GAAG,sBAAf;AAGAA,MAAM,CACHC,KADH,CACS,iBADT,EAEGC,GAFH,CAEOC,4BAAgBC,MAFvB,E,CAIA;AACA;AACA;;AAEAJ,MAAM,CACHC,KADH,CACS,eADT,EAEGC,GAFH,CAEOC,4BAAgBE,UAFvB,EAGGC,IAHH,CAGQH,4BAAgBI,SAHxB;AAMAP,MAAM,CACLC,KADD,CACO,UADP,EAECC,GAFD,CAEKC,4BAAgBK,SAFrB,EAGCF,IAHD,CAGMH,4BAAgBM,GAHtB;AAOAT,MAAM,CACLC,KADD,CACO,iCADP,EAECC,GAFD,CAEKC,4BAAgBO,cAFrB;AAOAC,MAAM,CAACC,OAAP,GAAiBZ,MAAjB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\outsite",
      "sourcesContent": [
        "import { Router } from \"express\";\r\nimport forumController from \"../../controllers/outsite/forumController\";\r\nconst router = Router();\r\n\r\n\r\nrouter\r\n  .route(\"/baiviet/:limit\")\r\n  .get(forumController.getAll)\r\n  \r\n//   router\r\n//   .route(\"/chi-tiet\")\r\n//   .get(forumController.getAll)\r\n  \r\nrouter\r\n  .route(\"/chi-tiet/:id\")\r\n  .get(forumController.getChiTiet) \r\n  .post(forumController.addcoment)\r\n \r\n \r\nrouter\r\n.route(\"/hoi-bai\")\r\n.get(forumController.getHoiBai)\r\n.post(forumController.add)\r\n\r\n\r\n\r\nrouter\r\n.route(\"/khoahoc/:id/:tenkhoahoc/:limit\")\r\n.get(forumController.gettheokhoahoc)\r\n\r\n  \r\n  \r\n  \r\nmodule.exports = router;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585236498347
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\\\\outsite\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\\\\outsite\\\\forumController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite\\forumController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite\\forumController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite\\forumController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite",
        "sourceFileName": "forumController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _sDate = _interopRequireDefault(require(\"s-date\"));\n\nvar _dienDanService = _interopRequireDefault(require(\"../../services/dienDanService\"));\n\nvar _khoaHocService = _interopRequireDefault(require(\"../../services/khoaHocService\"));\n\nvar _phanHoiService = _interopRequireDefault(require(\"../../services/phanHoiService\"));\n\nvar _baivietService = _interopRequireDefault(require(\"../../services/baivietService\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar diendanController =\n/*#__PURE__*/\nfunction () {\n  function diendanController() {\n    (0, _classCallCheck2[\"default\"])(this, diendanController);\n  }\n\n  (0, _createClass2[\"default\"])(diendanController, null, [{\n    key: \"getAll\",\n    value: function getAll(req, res) {\n      var limit, user, khoahoc, baiviet, data1, data;\n      return _regenerator[\"default\"].async(function getAll$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              limit = req.params.limit;\n              user = [];\n\n              if (req.session.user) {\n                user = req.session.user;\n              }\n\n              _context.next = 6;\n              return _regenerator[\"default\"].awrap(_khoaHocService[\"default\"].getAll());\n\n            case 6:\n              khoahoc = _context.sent;\n              _context.next = 9;\n              return _regenerator[\"default\"].awrap(_baivietService[\"default\"].getNew());\n\n            case 9:\n              baiviet = _context.sent;\n              _context.next = 12;\n              return _regenerator[\"default\"].awrap(_dienDanService[\"default\"].getAll(limit));\n\n            case 12:\n              data1 = _context.sent;\n              data = data1[0];\n\n              if (data.length > 0) {\n                res.render(\"../views/outsite/forums/baiviet.ejs\", {\n                  data: data,\n                  baiviet: baiviet,\n                  limit: limit,\n                  date: _sDate[\"default\"],\n                  khoahoc: khoahoc,\n                  user: user\n                });\n              } else {\n                res.render(\"../views/outsite/forums/baiviet.ejs\", {\n                  data: data,\n                  limit: limit,\n                  baiviet: baiviet,\n                  date: _sDate[\"default\"],\n                  khoahoc: khoahoc,\n                  user: user,\n                  message: \"Khong co du lieu\"\n                });\n              }\n\n              return _context.abrupt(\"return\", 0);\n\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](0);\n              return _context.abrupt(\"return\", _context.t0);\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 18]]);\n    }\n  }, {\n    key: \"Delete\",\n    value: function Delete(req, res) {\n      var id, Xoa;\n      return _regenerator[\"default\"].async(function Delete$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!req.session.user) {\n                _context2.next = 16;\n                break;\n              }\n\n              id = req.params.id;\n\n              if (!Number(id)) {\n                console.log(\"ID not Number !!!\");\n                res.redirect(\"/admin/lophoc\");\n              }\n\n              _context2.prev = 3;\n              _context2.next = 6;\n              return _regenerator[\"default\"].awrap(_dienDanService[\"default\"][\"delete\"](id));\n\n            case 6:\n              Xoa = _context2.sent;\n\n              if (Xoa) {\n                res.status(204).redirect(\"/admin/lophoc\");\n              } else {\n                res.status(404).redirect(\"/admin/lophoc\");\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](3);\n              return _context2.abrupt(\"return\", _context2.t0);\n\n            case 14:\n              _context2.next = 17;\n              break;\n\n            case 16:\n              return _context2.abrupt(\"return\", res.redirect(\"/\"));\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[3, 11]]);\n    }\n  }, {\n    key: \"add\",\n    value: function add(req, res) {\n      var id_taikhoan, trangthai, data, created;\n      return _regenerator[\"default\"].async(function add$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!req.session.user) {\n                _context3.next = 18;\n                break;\n              }\n\n              id_taikhoan = req.session.user.id;\n              trangthai = 1;\n              _context3.next = 5;\n              return _regenerator[\"default\"].awrap(_objectSpread({}, req.body, {\n                id_taikhoan: id_taikhoan,\n                trangthai: trangthai\n              }));\n\n            case 5:\n              data = _context3.sent;\n              _context3.prev = 6;\n              _context3.next = 9;\n              return _regenerator[\"default\"].awrap(_dienDanService[\"default\"].Save(data));\n\n            case 9:\n              created = _context3.sent;\n\n              if (created == null) {\n                res.redirect(\"/forum/hoi-bai?kq=0&mes=Không tạo được bài viết\");\n              } else {\n                res.redirect(\"/forum/hoi-bai?kq=1\");\n              }\n\n              _context3.next = 16;\n              break;\n\n            case 13:\n              _context3.prev = 13;\n              _context3.t0 = _context3[\"catch\"](6);\n              return _context3.abrupt(\"return\", _context3.t0);\n\n            case 16:\n              _context3.next = 19;\n              break;\n\n            case 18:\n              res.redirect(\"/forum/hoi-bai?kq=0&mes=Xin vui lòng đăng nhập!!!\");\n\n            case 19:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[6, 13]]);\n    }\n  }, {\n    key: \"getHoiBai\",\n    value: function getHoiBai(req, res) {\n      var user, khoahoc, baiviet;\n      return _regenerator[\"default\"].async(function getHoiBai$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              user = [];\n\n              if (req.session.user) {\n                user = req.session.user;\n              }\n\n              _context4.next = 5;\n              return _regenerator[\"default\"].awrap(_khoaHocService[\"default\"].getAll());\n\n            case 5:\n              khoahoc = _context4.sent;\n              _context4.next = 8;\n              return _regenerator[\"default\"].awrap(_baivietService[\"default\"].getNew());\n\n            case 8:\n              baiviet = _context4.sent;\n\n              if (khoahoc.length > 0) {\n                res.render(\"../views/outsite/forums.ejs\", {\n                  data: khoahoc,\n                  baiviet: baiviet,\n                  khoahoc: khoahoc,\n                  user: user\n                });\n              } else {\n                res.render(\"../views/outsite/forums.ejs\", {\n                  data: khoahoc,\n                  baiviet: baiviet,\n                  khoahoc: khoahoc,\n                  user: user,\n                  message: \"Khong co du lieu\"\n                });\n              }\n\n              return _context4.abrupt(\"return\", 0);\n\n            case 13:\n              _context4.prev = 13;\n              _context4.t0 = _context4[\"catch\"](0);\n              return _context4.abrupt(\"return\", _context4.t0);\n\n            case 16:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 13]]);\n    }\n  }, {\n    key: \"getChiTiet\",\n    value: function getChiTiet(req, res) {\n      var user, khoahoc, id, data, comment, baiviet;\n      return _regenerator[\"default\"].async(function getChiTiet$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              user = [];\n\n              if (req.session.user) {\n                user = req.session.user;\n              }\n\n              _context5.next = 5;\n              return _regenerator[\"default\"].awrap(_khoaHocService[\"default\"].getAll());\n\n            case 5:\n              khoahoc = _context5.sent;\n              id = req.params.id;\n              _context5.next = 9;\n              return _regenerator[\"default\"].awrap(_dienDanService[\"default\"].getByID(id));\n\n            case 9:\n              data = _context5.sent;\n              _context5.next = 12;\n              return _regenerator[\"default\"].awrap(_phanHoiService[\"default\"].getByID(id));\n\n            case 12:\n              comment = _context5.sent;\n              _context5.next = 15;\n              return _regenerator[\"default\"].awrap(_baivietService[\"default\"].getNew());\n\n            case 15:\n              baiviet = _context5.sent;\n\n              if (data.length > 0) {\n                res.render(\"../views/outsite/forums/xembaiviet.ejs\", {\n                  data: data,\n                  baiviet: baiviet,\n                  user: user,\n                  date: _sDate[\"default\"],\n                  comment: comment,\n                  khoahoc: khoahoc\n                });\n              } else {\n                res.redirect(\"/forum/baiviet?kq=0&mes=Bài viết đã bị xóa!!!\");\n              }\n\n              return _context5.abrupt(\"return\", 0);\n\n            case 20:\n              _context5.prev = 20;\n              _context5.t0 = _context5[\"catch\"](0);\n              return _context5.abrupt(\"return\", _context5.t0);\n\n            case 23:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 20]]);\n    } // ========coment ==================\n\n  }, {\n    key: \"addcoment\",\n    value: function addcoment(req, res) {\n      var id_diendan, id_tktraloi, data, created;\n      return _regenerator[\"default\"].async(function addcoment$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              id_diendan = req.params.id;\n\n              if (!req.session.user) {\n                _context6.next = 18;\n                break;\n              }\n\n              id_tktraloi = req.session.user.id;\n              _context6.next = 5;\n              return _regenerator[\"default\"].awrap(_objectSpread({}, req.body, {\n                id_tktraloi: id_tktraloi,\n                id_diendan: id_diendan\n              }));\n\n            case 5:\n              data = _context6.sent;\n              _context6.prev = 6;\n              _context6.next = 9;\n              return _regenerator[\"default\"].awrap(_phanHoiService[\"default\"].add(data));\n\n            case 9:\n              created = _context6.sent;\n\n              if (created == null) {\n                res.redirect(\"/forum/chi-tiet?kq=0&mes=Không trả lời được!!! \");\n              } else {\n                res.redirect(\"/forum/chi-tiet/\" + id_diendan + \"?kq=1\");\n              }\n\n              _context6.next = 16;\n              break;\n\n            case 13:\n              _context6.prev = 13;\n              _context6.t0 = _context6[\"catch\"](6);\n              return _context6.abrupt(\"return\", _context6.t0);\n\n            case 16:\n              _context6.next = 19;\n              break;\n\n            case 18:\n              res.redirect(\"/forum/chi-tiet/\" + id_diendan + \"?kq=0&mes=Xin vui l\\xF2ng \\u0111\\u0103ng nh\\u1EADp!!!\");\n\n            case 19:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[6, 13]]);\n    }\n  }, {\n    key: \"traloicoment\",\n    value: function traloicoment(req, res) {\n      var id_diendan, _id_diendan, id_tktraloi, noidungtraloi, data, created;\n\n      return _regenerator[\"default\"].async(function traloicoment$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              id_diendan = req.params.id;\n\n              if (!req.session.user) {\n                _context7.next = 20;\n                break;\n              }\n\n              _id_diendan = req.params.id;\n              id_tktraloi = req.session.user.id;\n              noidungtraloi = req.body.noidungtraloi;\n              _context7.next = 7;\n              return _regenerator[\"default\"].awrap(_objectSpread({}, req.body, {\n                id_tktraloi: id_tktraloi,\n                id_diendan: _id_diendan\n              }));\n\n            case 7:\n              data = _context7.sent;\n              _context7.prev = 8;\n              _context7.next = 11;\n              return _regenerator[\"default\"].awrap(_phanHoiService[\"default\"].add(data));\n\n            case 11:\n              created = _context7.sent;\n\n              if (created == null) {\n                res.redirect(\"/forum/chi-tiet?kq=0&mes=Không trả lời được!!! \");\n              } else {\n                res.redirect(\"/forum/chi-tiet/\" + _id_diendan + \"?kq=1\");\n              }\n\n              _context7.next = 18;\n              break;\n\n            case 15:\n              _context7.prev = 15;\n              _context7.t0 = _context7[\"catch\"](8);\n              return _context7.abrupt(\"return\", _context7.t0);\n\n            case 18:\n              _context7.next = 21;\n              break;\n\n            case 20:\n              res.redirect(\"/forum/chi-tiet/\" + id_diendan + \"?kq=0&mes=Xin vui l\\xF2ng \\u0111\\u0103ng nh\\u1EADp!!!\");\n\n            case 21:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, [[8, 15]]);\n    } // =================== xem forum theo khoa hoc ===================\n\n  }, {\n    key: \"gettheokhoahoc\",\n    value: function gettheokhoahoc(req, res) {\n      var user, limit, khoahoc, id_khoahoc, tenkhoahoc, baiviet, data;\n      return _regenerator[\"default\"].async(function gettheokhoahoc$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              user = [];\n\n              if (req.session.user) {\n                user = req.session.user;\n              }\n\n              limit = req.params.limit;\n              _context8.next = 6;\n              return _regenerator[\"default\"].awrap(_khoaHocService[\"default\"].getAll());\n\n            case 6:\n              khoahoc = _context8.sent;\n              id_khoahoc = req.params.id;\n              tenkhoahoc = req.params.tenkhoahoc;\n              _context8.next = 11;\n              return _regenerator[\"default\"].awrap(_baivietService[\"default\"].getNew());\n\n            case 11:\n              baiviet = _context8.sent;\n              _context8.next = 14;\n              return _regenerator[\"default\"].awrap(_dienDanService[\"default\"].gettheokhoahoc(id_khoahoc));\n\n            case 14:\n              data = _context8.sent;\n\n              if (data.length > 0) {\n                res.render(\"../views/outsite/forums/baiviet.ejs\", {\n                  data: data,\n                  limit: limit,\n                  user: user,\n                  baiviet: baiviet,\n                  date: _sDate[\"default\"],\n                  khoahoc: khoahoc,\n                  tenkhoahoc: tenkhoahoc\n                });\n              } else {\n                res.redirect(\"/forum/baiviet/\" + limit + \"?kq=0&mes=Kh\\xF4ng c\\xF3 b\\xE0i ph\\xF9 h\\u1EE3p!!!\");\n              }\n\n              return _context8.abrupt(\"return\", 0);\n\n            case 19:\n              _context8.prev = 19;\n              _context8.t0 = _context8[\"catch\"](0);\n              return _context8.abrupt(\"return\", _context8.t0);\n\n            case 22:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, null, [[0, 19]]);\n    }\n  }]);\n  return diendanController;\n}();\n\nvar _default = diendanController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "forumController.js"
      ],
      "names": [
        "diendanController",
        "req",
        "res",
        "limit",
        "params",
        "user",
        "session",
        "khoaHocService",
        "getAll",
        "khoahoc",
        "baivietService",
        "getNew",
        "baiviet",
        "diendanService",
        "data1",
        "data",
        "length",
        "render",
        "date",
        "message",
        "id",
        "Number",
        "console",
        "log",
        "redirect",
        "Xoa",
        "status",
        "id_taikhoan",
        "trangthai",
        "body",
        "Save",
        "created",
        "getByID",
        "phanHoiService",
        "comment",
        "id_diendan",
        "id_tktraloi",
        "add",
        "noidungtraloi",
        "id_khoahoc",
        "tenkhoahoc",
        "gettheokhoahoc"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;IAEMA,iB;;;;;;;;;2BACgBC,G,EAAKC,G;;;;;;;AAEjBC,cAAAA,K,GAAQF,GAAG,CAACG,MAAJ,CAAWD,K;AAClBE,cAAAA,I,GAAO,E;;AACZ,kBAAIJ,GAAG,CAACK,OAAJ,CAAYD,IAAhB,EAAsB;AACpBA,gBAAAA,IAAI,GAAGJ,GAAG,CAACK,OAAJ,CAAYD,IAAnB;AACD;;;mDACqBE,2BAAeC,MAAf,E;;;AAAhBC,cAAAA,O;;mDACgBC,2BAAeC,MAAf,E;;;AAAhBC,cAAAA,O;;mDACcC,2BAAeL,MAAf,CAAsBL,KAAtB,C;;;AAAdW,cAAAA,K;AACFC,cAAAA,I,GAAOD,KAAK,CAAC,CAAD,C;;AAChB,kBAAIC,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AACnBd,gBAAAA,GAAG,CAACe,MAAJ,CAAW,qCAAX,EAAkD;AAChDF,kBAAAA,IAAI,EAAJA,IADgD;AAC3CH,kBAAAA,OAAO,EAAPA,OAD2C;AAEhDT,kBAAAA,KAAK,EAALA,KAFgD;AAGhDe,kBAAAA,IAAI,EAAJA,iBAHgD;AAIhDT,kBAAAA,OAAO,EAAPA,OAJgD;AAKhDJ,kBAAAA,IAAI,EAAJA;AALgD,iBAAlD;AAOD,eARD,MAQO;AACLH,gBAAAA,GAAG,CAACe,MAAJ,CAAW,qCAAX,EAAkD;AAChDF,kBAAAA,IAAI,EAAJA,IADgD;AAC1CZ,kBAAAA,KAAK,EAALA,KAD0C;AACpCS,kBAAAA,OAAO,EAAPA,OADoC;AAEhDM,kBAAAA,IAAI,EAAJA,iBAFgD;AAGhDT,kBAAAA,OAAO,EAAPA,OAHgD;AAIhDJ,kBAAAA,IAAI,EAAJA,IAJgD;AAKhDc,kBAAAA,OAAO,EAAE;AALuC,iBAAlD;AAOD;;+CACM,C;;;;;;;;;;;;;;;;2BAMSlB,G,EAAKC,G;;;;;;mBACnBD,GAAG,CAACK,OAAJ,CAAYD,I;;;;;AACRe,cAAAA,E,GAAOnB,GAAG,CAACG,M,CAAXgB,E;;AACN,kBAAI,CAACC,MAAM,CAACD,EAAD,CAAX,EAAiB;AACfE,gBAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACArB,gBAAAA,GAAG,CAACsB,QAAJ,CAAa,eAAb;AACD;;;;mDAEiBX,qCAAsBO,EAAtB,C;;;AAAZK,cAAAA,G;;AACJ,kBAAIA,GAAJ,EAAS;AACPvB,gBAAAA,GAAG,CAACwB,MAAJ,CAAW,GAAX,EAAgBF,QAAhB,CAAyB,eAAzB;AACD,eAFD,MAEO;AACLtB,gBAAAA,GAAG,CAACwB,MAAJ,CAAW,GAAX,EAAgBF,QAAhB,CAAyB,eAAzB;AACD;;;;;;;;;;;;;;gDAMItB,GAAG,CAACsB,QAAJ,CAAa,GAAb,C;;;;;;;;;;;wBAGMvB,G,EAAKC,G;;;;;;mBAChBD,GAAG,CAACK,OAAJ,CAAYD,I;;;;;AACVsB,cAAAA,W,GAAc1B,GAAG,CAACK,OAAJ,CAAYD,IAAZ,CAAiBe,E;AAC7BQ,cAAAA,S,GAAY,C;;qEACI3B,GAAG,CAAC4B,I;AAAMF,gBAAAA,WAAW,EAAXA,W;AAAYC,gBAAAA,SAAS,EAATA;;;;AAAxCb,cAAAA,I;;;mDAEoBF,2BAAeiB,IAAf,CAAoBf,IAApB,C;;;AAAhBgB,cAAAA,O;;AACN,kBAAIA,OAAO,IAAI,IAAf,EAAqB;AACnB7B,gBAAAA,GAAG,CAACsB,QAAJ,CAAa,iDAAb;AACD,eAFD,MAEO;AACLtB,gBAAAA,GAAG,CAACsB,QAAJ,CAAa,qBAAb;AACD;;;;;;;;;;;;;;;AAKHtB,cAAAA,GAAG,CAACsB,QAAJ,CAAa,mDAAb;;;;;;;;;;;8BAImBvB,G,EAAKC,G;;;;;;;AAEpBG,cAAAA,I,GAAO,E;;AACX,kBAAIJ,GAAG,CAACK,OAAJ,CAAYD,IAAhB,EAAsB;AACpBA,gBAAAA,IAAI,GAAGJ,GAAG,CAACK,OAAJ,CAAYD,IAAnB;AACD;;;mDACqBE,2BAAeC,MAAf,E;;;AAAhBC,cAAAA,O;;mDACgBC,2BAAeC,MAAf,E;;;AAAhBC,cAAAA,O;;AACN,kBAAIH,OAAO,CAACO,MAAR,GAAiB,CAArB,EAAwB;AACtBd,gBAAAA,GAAG,CAACe,MAAJ,CAAW,6BAAX,EAA0C;AACxCF,kBAAAA,IAAI,EAAEN,OADkC;AAC1BG,kBAAAA,OAAO,EAAPA,OAD0B;AAExCH,kBAAAA,OAAO,EAAPA,OAFwC;AAGxCJ,kBAAAA,IAAI,EAAJA;AAHwC,iBAA1C;AAKD,eAND,MAMO;AACLH,gBAAAA,GAAG,CAACe,MAAJ,CAAW,6BAAX,EAA0C;AACxCF,kBAAAA,IAAI,EAAEN,OADkC;AAC1BG,kBAAAA,OAAO,EAAPA,OAD0B;AAExCH,kBAAAA,OAAO,EAAPA,OAFwC;AAGxCJ,kBAAAA,IAAI,EAAJA,IAHwC;AAIxCc,kBAAAA,OAAO,EAAE;AAJ+B,iBAA1C;AAMD;;gDACM,C;;;;;;;;;;;;;;;;+BAKalB,G,EAAKC,G;;;;;;;AAErBG,cAAAA,I,GAAO,E;;AACX,kBAAIJ,GAAG,CAACK,OAAJ,CAAYD,IAAhB,EAAsB;AACpBA,gBAAAA,IAAI,GAAGJ,GAAG,CAACK,OAAJ,CAAYD,IAAnB;AACD;;;mDACqBE,2BAAeC,MAAf,E;;;AAAhBC,cAAAA,O;AACEW,cAAAA,E,GAAOnB,GAAG,CAACG,M,CAAXgB,E;;mDACWP,2BAAemB,OAAf,CAAuBZ,EAAvB,C;;;AAAbL,cAAAA,I;;mDACgBkB,2BAAeD,OAAf,CAAuBZ,EAAvB,C;;;AAAhBc,cAAAA,O;;mDACgBxB,2BAAeC,MAAf,E;;;AAAhBC,cAAAA,O;;AAEN,kBAAIG,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AACnBd,gBAAAA,GAAG,CAACe,MAAJ,CAAW,wCAAX,EAAqD;AACnDF,kBAAAA,IAAI,EAAEA,IAD6C;AACxCH,kBAAAA,OAAO,EAAPA,OADwC;AAEnDP,kBAAAA,IAAI,EAAJA,IAFmD;AAGnDa,kBAAAA,IAAI,EAAJA,iBAHmD;AAInDgB,kBAAAA,OAAO,EAAPA,OAJmD;AAKnDzB,kBAAAA,OAAO,EAAPA;AALmD,iBAArD;AAOD,eARD,MAQO;AACLP,gBAAAA,GAAG,CAACsB,QAAJ,CAAa,+CAAb;AACD;;gDACM,C;;;;;;;;;;;;;MAKX;;;;8BAEuBvB,G,EAAKC,G;;;;;;AACtBiC,cAAAA,U,GAAalC,GAAG,CAACG,MAAJ,CAAWgB,E;;mBACxBnB,GAAG,CAACK,OAAJ,CAAYD,I;;;;;AAEV+B,cAAAA,W,GAAcnC,GAAG,CAACK,OAAJ,CAAYD,IAAZ,CAAiBe,E;;qEACbnB,GAAG,CAAC4B,I;AAAMO,gBAAAA,WAAW,EAAXA,W;AAAaD,gBAAAA,UAAU,EAAVA;;;;AAAzCpB,cAAAA,I;;;mDAEoBkB,2BAAeI,GAAf,CAAmBtB,IAAnB,C;;;AAAhBgB,cAAAA,O;;AACN,kBAAIA,OAAO,IAAI,IAAf,EAAqB;AACnB7B,gBAAAA,GAAG,CAACsB,QAAJ,CAAa,iDAAb;AACD,eAFD,MAEO;AACLtB,gBAAAA,GAAG,CAACsB,QAAJ,CAAa,qBAAqBW,UAArB,UAAb;AACD;;;;;;;;;;;;;;;AAKHjC,cAAAA,GAAG,CAACsB,QAAJ,CAAa,qBAAmBW,UAAnB,0DAAb;;;;;;;;;;;iCAIsBlC,G,EAAKC,G;;;;;;;AACzBiC,cAAAA,U,GAAalC,GAAG,CAACG,MAAJ,CAAWgB,E;;mBACxBnB,GAAG,CAACK,OAAJ,CAAYD,I;;;;;AACV8B,cAAAA,W,GAAalC,GAAG,CAACG,MAAJ,CAAWgB,E;AACxBgB,cAAAA,W,GAAcnC,GAAG,CAACK,OAAJ,CAAYD,IAAZ,CAAiBe,E;AAC/BkB,cAAAA,a,GAAgBrC,GAAG,CAAC4B,IAAJ,CAASS,a;;qEACPrC,GAAG,CAAC4B,I;AAAMO,gBAAAA,WAAW,EAAXA,W;AAAaD,gBAAAA,UAAU,EAAVA;;;;AAAzCpB,cAAAA,I;;;mDAEoBkB,2BAAeI,GAAf,CAAmBtB,IAAnB,C;;;AAAhBgB,cAAAA,O;;AACN,kBAAIA,OAAO,IAAI,IAAf,EAAqB;AACnB7B,gBAAAA,GAAG,CAACsB,QAAJ,CAAa,iDAAb;AACD,eAFD,MAEO;AACLtB,gBAAAA,GAAG,CAACsB,QAAJ,CAAa,qBAAqBW,WAArB,UAAb;AACD;;;;;;;;;;;;;;;AAKHjC,cAAAA,GAAG,CAACsB,QAAJ,CAAa,qBAAmBW,UAAnB,0DAAb;;;;;;;;MAIJ;;;;mCAC4BlC,G,EAAKC,G;;;;;;;AAEzBG,cAAAA,I,GAAO,E;;AACX,kBAAIJ,GAAG,CAACK,OAAJ,CAAYD,IAAhB,EAAsB;AACpBA,gBAAAA,IAAI,GAAGJ,GAAG,CAACK,OAAJ,CAAYD,IAAnB;AACD;;AACKF,cAAAA,K,GAAQF,GAAG,CAACG,MAAJ,CAAWD,K;;mDACHI,2BAAeC,MAAf,E;;;AAAhBC,cAAAA,O;AACA8B,cAAAA,U,GAAatC,GAAG,CAACG,MAAJ,CAAWgB,E;AACxBoB,cAAAA,U,GAAavC,GAAG,CAACG,MAAJ,CAAWoC,U;;mDACR9B,2BAAeC,MAAf,E;;;AAAhBC,cAAAA,O;;mDACaC,2BAAe4B,cAAf,CAA8BF,UAA9B,C;;;AAAbxB,cAAAA,I;;AACN,kBAAIA,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AACnBd,gBAAAA,GAAG,CAACe,MAAJ,CAAW,qCAAX,EAAkD;AAChDF,kBAAAA,IAAI,EAAEA,IAD0C;AACrCZ,kBAAAA,KAAK,EAALA,KADqC;AAEhDE,kBAAAA,IAAI,EAAJA,IAFgD;AAE3CO,kBAAAA,OAAO,EAAPA,OAF2C;AAGhDM,kBAAAA,IAAI,EAAJA,iBAHgD;AAIhDT,kBAAAA,OAAO,EAAPA,OAJgD;AAKhD+B,kBAAAA,UAAU,EAAVA;AALgD,iBAAlD;AAOD,eARD,MAQO;AACLtC,gBAAAA,GAAG,CAACsB,QAAJ,CAAa,oBAAkBrB,KAAlB,uDAAb;AACD;;gDACM,C;;;;;;;;;;;;;;;;;;eAOEH,iB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite",
      "sourcesContent": [
        "import date from \"s-date\";\r\nimport diendanService from \"../../services/dienDanService\";\r\nimport khoaHocService from \"../../services/khoaHocService\";\r\nimport phanHoiService from \"../../services/phanHoiService\";\r\nimport baivietService from \"../../services/baivietService\";\r\n\r\nclass diendanController {\r\n  static async getAll(req, res) {\r\n    try {\r\n      let limit = req.params.limit;\r\n       let user = [];\r\n      if (req.session.user) {\r\n        user = req.session.user;\r\n      }\r\n      const khoahoc = await khoaHocService.getAll();\r\n      const baiviet = await baivietService.getNew();\r\n      const data1 = await diendanService.getAll(limit);\r\n      var data = data1[0];\r\n      if (data.length > 0) {\r\n        res.render(\"../views/outsite/forums/baiviet.ejs\", {\r\n          data,baiviet,\r\n          limit,\r\n          date,\r\n          khoahoc,\r\n          user\r\n        });\r\n      } else {\r\n        res.render(\"../views/outsite/forums/baiviet.ejs\", {\r\n          data, limit,baiviet,\r\n          date,\r\n          khoahoc,\r\n          user,\r\n          message: \"Khong co du lieu\"\r\n        });\r\n      }\r\n      return 0;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  static async Delete(req, res) {\r\n    if (req.session.user) {\r\n      let { id } = req.params;\r\n      if (!Number(id)) {\r\n        console.log(\"ID not Number !!!\");\r\n        res.redirect(\"/admin/lophoc\");\r\n      }\r\n      try {\r\n        let Xoa = await diendanService.delete(id);\r\n        if (Xoa) {\r\n          res.status(204).redirect(\"/admin/lophoc\");\r\n        } else {\r\n          res.status(404).redirect(\"/admin/lophoc\");\r\n        }\r\n        return;\r\n      } catch (error) {\r\n        return error;\r\n      }\r\n    } else {\r\n      return res.redirect(\"/\");\r\n    }\r\n  }\r\n  static async add(req, res) {\r\n    if (req.session.user) {\r\n      var id_taikhoan = req.session.user.id;\r\n      const trangthai = 1\r\n      let data = await { ...req.body, id_taikhoan,trangthai };\r\n      try {        \r\n        const created = await diendanService.Save(data);\r\n        if (created == null) {\r\n          res.redirect(\"/forum/hoi-bai?kq=0&mes=Không tạo được bài viết\");\r\n        } else {\r\n          res.redirect(\"/forum/hoi-bai?kq=1\");\r\n        }\r\n      } catch (error) {\r\n        return error;\r\n      }\r\n    } else {\r\n      res.redirect(\"/forum/hoi-bai?kq=0&mes=Xin vui lòng đăng nhập!!!\");\r\n    }\r\n  }\r\n\r\n  static async getHoiBai(req, res) {\r\n    try {\r\n      let user = [];\r\n      if (req.session.user) {\r\n        user = req.session.user;\r\n      }\r\n      const khoahoc = await khoaHocService.getAll();\r\n      const baiviet = await baivietService.getNew();\r\n      if (khoahoc.length > 0) {\r\n        res.render(\"../views/outsite/forums.ejs\", {\r\n          data: khoahoc,baiviet,\r\n          khoahoc,\r\n          user\r\n        });\r\n      } else {\r\n        res.render(\"../views/outsite/forums.ejs\", {\r\n          data: khoahoc,baiviet,\r\n          khoahoc,\r\n          user,\r\n          message: \"Khong co du lieu\"\r\n        });\r\n      }\r\n      return 0;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n  static async getChiTiet(req, res) {\r\n    try {\r\n      let user = [];\r\n      if (req.session.user) {\r\n        user = req.session.user;\r\n      }\r\n      const khoahoc = await khoaHocService.getAll();\r\n      const { id } = req.params;\r\n      const data = await diendanService.getByID(id);\r\n      const comment = await phanHoiService.getByID(id);\r\n      const baiviet = await baivietService.getNew();\r\n\r\n      if (data.length > 0) {\r\n        res.render(\"../views/outsite/forums/xembaiviet.ejs\", {\r\n          data: data,baiviet,\r\n          user,\r\n          date,\r\n          comment,\r\n          khoahoc\r\n        });\r\n      } else {\r\n        res.redirect(\"/forum/baiviet?kq=0&mes=Bài viết đã bị xóa!!!\");\r\n      }\r\n      return 0;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n  // ========coment ==================\r\n\r\n  static async addcoment(req, res) {\r\n    let id_diendan = req.params.id;\r\n    if (req.session.user) {\r\n     \r\n      let id_tktraloi = req.session.user.id;\r\n      let data = await { ...req.body, id_tktraloi, id_diendan };\r\n      try {\r\n        const created = await phanHoiService.add(data);\r\n        if (created == null) {\r\n          res.redirect(\"/forum/chi-tiet?kq=0&mes=Không trả lời được!!! \");\r\n        } else {\r\n          res.redirect(`/forum/chi-tiet/` + id_diendan + `?kq=1`);\r\n        }\r\n      } catch (error) {\r\n        return error;\r\n      }\r\n    } else {\r\n      res.redirect(`/forum/chi-tiet/`+id_diendan+`?kq=0&mes=Xin vui lòng đăng nhập!!!`);\r\n    }\r\n  }\r\n\r\n  static async traloicoment(req, res) {\r\n    let id_diendan = req.params.id;\r\n    if (req.session.user) {\r\n      let id_diendan = req.params.id;\r\n      let id_tktraloi = req.session.user.id;\r\n      let noidungtraloi = req.body.noidungtraloi;\r\n      let data = await { ...req.body, id_tktraloi, id_diendan };\r\n      try {\r\n        const created = await phanHoiService.add(data);\r\n        if (created == null) {\r\n          res.redirect(\"/forum/chi-tiet?kq=0&mes=Không trả lời được!!! \");\r\n        } else {\r\n          res.redirect(`/forum/chi-tiet/` + id_diendan + `?kq=1`);\r\n        }\r\n      } catch (error) {\r\n        return error;\r\n      }\r\n    } else {\r\n      res.redirect(`/forum/chi-tiet/`+id_diendan+`?kq=0&mes=Xin vui lòng đăng nhập!!!`);\r\n    }\r\n  }\r\n\r\n  // =================== xem forum theo khoa hoc ===================\r\n  static async gettheokhoahoc(req, res) {\r\n    try {\r\n      let user = [];\r\n      if (req.session.user) {\r\n        user = req.session.user;\r\n      }\r\n      const limit = req.params.limit;\r\n      const khoahoc = await khoaHocService.getAll();\r\n      const id_khoahoc = req.params.id;\r\n      const tenkhoahoc = req.params.tenkhoahoc;\r\n      const baiviet = await baivietService.getNew();\r\n      const data = await diendanService.gettheokhoahoc(id_khoahoc);\r\n      if (data.length > 0) {\r\n        res.render(\"../views/outsite/forums/baiviet.ejs\", {\r\n          data: data,limit,\r\n          user,baiviet,\r\n          date,\r\n          khoahoc,\r\n          tenkhoahoc\r\n        });\r\n      } else {\r\n        res.redirect(`/forum/baiviet/`+limit+`?kq=0&mes=Không có bài phù hợp!!!`);\r\n      }\r\n      return 0;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default diendanController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1587478529847
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\services\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\services\\\\dienDanService.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services\\dienDanService.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services\\dienDanService.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services\\dienDanService.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services",
        "sourceFileName": "dienDanService.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _models = _interopRequireDefault(require(\"../../Model/models\"));\n\nvar diendanService =\n/*#__PURE__*/\nfunction () {\n  function diendanService() {\n    (0, _classCallCheck2[\"default\"])(this, diendanService);\n  }\n\n  (0, _createClass2[\"default\"])(diendanService, null, [{\n    key: \"getAll\",\n    value: function getAll(limit) {\n      var id_khoahoc;\n      return _regenerator[\"default\"].async(function getAll$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].khoahoc.sequelize.query(\"select khoahocs.tenkhoahoc , diendans.* , taikhoans.hinhanh\\n        from public.khoahocs, public.diendans , public.taikhoans\\n        where diendans.id_khoahoc = khoahocs.id and diendans.trangthai =1 and diendans.id_taikhoan = taikhoans.id \\n        and diendans.trangthai = 1\\n        ORDER BY id desc  limit \" + limit + \"\\n         \"));\n\n            case 3:\n              id_khoahoc = _context.sent;\n              return _context.abrupt(\"return\", id_khoahoc);\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              throw _context.t0;\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    }\n  }, {\n    key: \"getAllAd\",\n    value: function getAllAd() {\n      var id_khoahoc;\n      return _regenerator[\"default\"].async(function getAllAd$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].khoahoc.sequelize.query(\"select khoahocs.tenkhoahoc , diendans.* , taikhoans.tentaikhoan\\n        from public.khoahocs, public.diendans , public.taikhoans\\n        where diendans.id_khoahoc = khoahocs.id and diendans.trangthai =1 and diendans.id_taikhoan = taikhoans.id\\n        ORDER BY id desc      \"));\n\n            case 3:\n              id_khoahoc = _context2.sent;\n              return _context2.abrupt(\"return\", id_khoahoc);\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              throw _context2.t0;\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    }\n  }, {\n    key: \"gettheokhoahoc\",\n    value: function gettheokhoahoc(id_khoahoc) {\n      return _regenerator[\"default\"].async(function gettheokhoahoc$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].diendan.findAll({\n                where: {\n                  id_khoahoc: id_khoahoc,\n                  trangthai: 1\n                },\n                limit: 10\n              }));\n\n            case 3:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 6:\n              _context3.prev = 6;\n              _context3.t0 = _context3[\"catch\"](0);\n              throw _context3.t0;\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"getByID\",\n    value: function getByID(id) {\n      var id_khoahoc;\n      return _regenerator[\"default\"].async(function getByID$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].khoahoc.sequelize.query(\"SELECT  khoahocs.tenkhoahoc,diendans.*  , taikhoans.hinhanh\\n        FROM public.khoahocs, public.diendans  , public.taikhoans\\n        where diendans.id_khoahoc = khoahocs.id  and taikhoans.id = diendans.id_taikhoan  and diendans.id =\" + id + \" \"));\n\n            case 3:\n              id_khoahoc = _context4.sent;\n              return _context4.abrupt(\"return\", id_khoahoc);\n\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4[\"catch\"](0);\n              throw _context4.t0;\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(id) {\n      return _regenerator[\"default\"].async(function _delete$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].diendan.destroy({\n                where: {\n                  id: id\n                }\n              }));\n\n            case 3:\n              return _context5.abrupt(\"return\", _context5.sent);\n\n            case 6:\n              _context5.prev = 6;\n              _context5.t0 = _context5[\"catch\"](0);\n              throw _context5.t0;\n\n            case 9:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"Save\",\n    value: function Save(data) {\n      return _regenerator[\"default\"].async(function Save$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].diendan.create(data));\n\n            case 3:\n              return _context6.abrupt(\"return\", _context6.sent);\n\n            case 6:\n              _context6.prev = 6;\n              _context6.t0 = _context6[\"catch\"](0);\n              throw _context6.t0;\n\n            case 9:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"Update\",\n    value: function Update(id, data) {\n      var tk;\n      return _regenerator[\"default\"].async(function Update$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _context7.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].diendan.findOne({\n                where: {\n                  id: id\n                }\n              }));\n\n            case 3:\n              tk = _context7.sent;\n\n              if (!tk) {\n                _context7.next = 8;\n                break;\n              }\n\n              _context7.next = 7;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].diendan.update(data, {\n                where: {\n                  id: Number(id)\n                }\n              }));\n\n            case 7:\n              return _context7.abrupt(\"return\", _context7.sent);\n\n            case 8:\n              return _context7.abrupt(\"return\", null);\n\n            case 11:\n              _context7.prev = 11;\n              _context7.t0 = _context7[\"catch\"](0);\n              throw _context7.t0;\n\n            case 14:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, [[0, 11]]);\n    } // ===================== out site ======================\n\n  }, {\n    key: \"gettheotk\",\n    value: function gettheotk(id) {\n      var id_khoahoc;\n      return _regenerator[\"default\"].async(function gettheotk$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              _context8.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].khoahoc.sequelize.query(\"SELECT  khoahocs.tenkhoahoc,diendans.* FROM public.khoahocs, public.diendans  where diendans.id_khoahoc = khoahocs.id and diendans.id_taikhoan = \" + id + \" \"));\n\n            case 3:\n              id_khoahoc = _context8.sent;\n              return _context8.abrupt(\"return\", id_khoahoc);\n\n            case 7:\n              _context8.prev = 7;\n              _context8.t0 = _context8[\"catch\"](0);\n              throw _context8.t0;\n\n            case 10:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    }\n  }]);\n  return diendanService;\n}();\n\nvar _default = diendanService;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRpZW5EYW5TZXJ2aWNlLmpzIl0sIm5hbWVzIjpbImRpZW5kYW5TZXJ2aWNlIiwibGltaXQiLCJkYXRhYmFzZSIsImtob2Fob2MiLCJzZXF1ZWxpemUiLCJxdWVyeSIsImlkX2tob2Fob2MiLCJkaWVuZGFuIiwiZmluZEFsbCIsIndoZXJlIiwidHJhbmd0aGFpIiwiaWQiLCJkZXN0cm95IiwiZGF0YSIsImNyZWF0ZSIsImZpbmRPbmUiLCJ0ayIsInVwZGF0ZSIsIk51bWJlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0lBRU1BLGM7Ozs7Ozs7OzsyQkFDZ0JDLEs7Ozs7Ozs7O21EQUVPQyxtQkFBU0MsT0FBVCxDQUFpQkMsU0FBakIsQ0FBMkJDLEtBQTNCLENBQ3JCLDRUQUtFSixLQUxGLGdCQURxQixDOzs7QUFBbkJLLGNBQUFBLFU7K0NBVUdBLFU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzttREFPZ0JKLG1CQUFTQyxPQUFULENBQWlCQyxTQUFqQixDQUEyQkMsS0FBM0Isd1I7OztBQUFuQkMsY0FBQUEsVTtnREFNR0EsVTs7Ozs7Ozs7Ozs7Ozs7OzttQ0FLaUJBLFU7Ozs7Ozs7bURBRVhKLG1CQUFTSyxPQUFULENBQWlCQyxPQUFqQixDQUF5QjtBQUNwQ0MsZ0JBQUFBLEtBQUssRUFBRTtBQUFFSCxrQkFBQUEsVUFBVSxFQUFWQSxVQUFGO0FBQWVJLGtCQUFBQSxTQUFTLEVBQUc7QUFBM0IsaUJBRDZCO0FBRXBDVCxnQkFBQUEsS0FBSyxFQUFFO0FBRjZCLGVBQXpCLEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7NEJBUUlVLEU7Ozs7Ozs7O21EQUVNVCxtQkFBU0MsT0FBVCxDQUFpQkMsU0FBakIsQ0FBMkJDLEtBQTNCLENBQ3JCLGdQQUV3R00sRUFGeEcsTUFEcUIsQzs7O0FBQW5CTCxjQUFBQSxVO2dEQUtHQSxVOzs7Ozs7Ozs7Ozs7Ozs7OzRCQU1TSyxFOzs7Ozs7O21EQUVIVCxtQkFBU0ssT0FBVCxDQUFpQkssT0FBakIsQ0FBeUI7QUFDcENILGdCQUFBQSxLQUFLLEVBQUU7QUFBRUUsa0JBQUFBLEVBQUUsRUFBRkE7QUFBRjtBQUQ2QixlQUF6QixDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O3lCQU9DRSxJOzs7Ozs7O21EQUVEWCxtQkFBU0ssT0FBVCxDQUFpQk8sTUFBakIsQ0FBd0JELElBQXhCLEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MkJBTUdGLEUsRUFBSUUsSTs7Ozs7Ozs7bURBRUxYLG1CQUFTSyxPQUFULENBQWlCUSxPQUFqQixDQUF5QjtBQUN0Q04sZ0JBQUFBLEtBQUssRUFBRTtBQUFFRSxrQkFBQUEsRUFBRSxFQUFGQTtBQUFGO0FBRCtCLGVBQXpCLEM7OztBQUFYSyxjQUFBQSxFOzttQkFHQUEsRTs7Ozs7O21EQUNXZCxtQkFBU0ssT0FBVCxDQUFpQlUsTUFBakIsQ0FBd0JKLElBQXhCLEVBQThCO0FBQ3pDSixnQkFBQUEsS0FBSyxFQUFFO0FBQUVFLGtCQUFBQSxFQUFFLEVBQUVPLE1BQU0sQ0FBQ1AsRUFBRDtBQUFaO0FBRGtDLGVBQTlCLEM7Ozs7OztnREFJUixJOzs7Ozs7Ozs7Ozs7O01BTVg7Ozs7OEJBQ3VCQSxFOzs7Ozs7OzttREFFSVQsbUJBQVNDLE9BQVQsQ0FBaUJDLFNBQWpCLENBQTJCQyxLQUEzQixDQUNyQixzSkFDRU0sRUFERixNQURxQixDOzs7QUFBbkJMLGNBQUFBLFU7Z0RBS0dBLFU7Ozs7Ozs7Ozs7Ozs7Ozs7OztlQU9FTixjIiwic291cmNlUm9vdCI6IkQ6XFxMdWFuVmFuXFxMdWFuVmFuRDJcXHRydW5ndGFtX2xhbjRcXGFwcHNcXHNlcnZpY2VzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGRhdGFiYXNlIGZyb20gXCIuLi8uLi9Nb2RlbC9tb2RlbHNcIjtcclxuXHJcbmNsYXNzIGRpZW5kYW5TZXJ2aWNlIHtcclxuICBzdGF0aWMgYXN5bmMgZ2V0QWxsKGxpbWl0KSB7XHJcbiAgICB0cnkge1xyXG4gICAgICBsZXQgaWRfa2hvYWhvYyA9IGF3YWl0IGRhdGFiYXNlLmtob2Fob2Muc2VxdWVsaXplLnF1ZXJ5KFxyXG4gICAgICAgIGBzZWxlY3Qga2hvYWhvY3MudGVua2hvYWhvYyAsIGRpZW5kYW5zLiogLCB0YWlraG9hbnMuaGluaGFuaFxyXG4gICAgICAgIGZyb20gcHVibGljLmtob2Fob2NzLCBwdWJsaWMuZGllbmRhbnMgLCBwdWJsaWMudGFpa2hvYW5zXHJcbiAgICAgICAgd2hlcmUgZGllbmRhbnMuaWRfa2hvYWhvYyA9IGtob2Fob2NzLmlkIGFuZCBkaWVuZGFucy50cmFuZ3RoYWkgPTEgYW5kIGRpZW5kYW5zLmlkX3RhaWtob2FuID0gdGFpa2hvYW5zLmlkIFxyXG4gICAgICAgIGFuZCBkaWVuZGFucy50cmFuZ3RoYWkgPSAxXHJcbiAgICAgICAgT1JERVIgQlkgaWQgZGVzYyAgbGltaXQgYCArXHJcbiAgICAgICAgICBsaW1pdCArXHJcbiAgICAgICAgICBgXHJcbiAgICAgICAgIGBcclxuICAgICAgKTtcclxuICAgICAgcmV0dXJuIGlkX2tob2Fob2M7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9XHJcbiAgc3RhdGljIGFzeW5jIGdldEFsbEFkKCkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgbGV0IGlkX2tob2Fob2MgPSBhd2FpdCBkYXRhYmFzZS5raG9haG9jLnNlcXVlbGl6ZS5xdWVyeShcclxuICAgICAgICBgc2VsZWN0IGtob2Fob2NzLnRlbmtob2Fob2MgLCBkaWVuZGFucy4qICwgdGFpa2hvYW5zLnRlbnRhaWtob2FuXHJcbiAgICAgICAgZnJvbSBwdWJsaWMua2hvYWhvY3MsIHB1YmxpYy5kaWVuZGFucyAsIHB1YmxpYy50YWlraG9hbnNcclxuICAgICAgICB3aGVyZSBkaWVuZGFucy5pZF9raG9haG9jID0ga2hvYWhvY3MuaWQgYW5kIGRpZW5kYW5zLnRyYW5ndGhhaSA9MSBhbmQgZGllbmRhbnMuaWRfdGFpa2hvYW4gPSB0YWlraG9hbnMuaWRcclxuICAgICAgICBPUkRFUiBCWSBpZCBkZXNjICAgICAgYFxyXG4gICAgICApO1xyXG4gICAgICByZXR1cm4gaWRfa2hvYWhvYztcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG4gIH1cclxuICBzdGF0aWMgYXN5bmMgZ2V0dGhlb2tob2Fob2MoaWRfa2hvYWhvYykge1xyXG4gICAgdHJ5IHsgICAgIFxyXG4gICAgICByZXR1cm4gYXdhaXQgZGF0YWJhc2UuZGllbmRhbi5maW5kQWxsKHtcclxuICAgICAgICB3aGVyZTogeyBpZF9raG9haG9jICwgdHJhbmd0aGFpIDogMSB9LFxyXG4gICAgICAgIGxpbWl0OiAxMFxyXG4gICAgICB9KTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG4gIH1cclxuICBzdGF0aWMgYXN5bmMgZ2V0QnlJRChpZCkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgbGV0IGlkX2tob2Fob2MgPSBhd2FpdCBkYXRhYmFzZS5raG9haG9jLnNlcXVlbGl6ZS5xdWVyeShcclxuICAgICAgICBgU0VMRUNUICBraG9haG9jcy50ZW5raG9haG9jLGRpZW5kYW5zLiogICwgdGFpa2hvYW5zLmhpbmhhbmhcclxuICAgICAgICBGUk9NIHB1YmxpYy5raG9haG9jcywgcHVibGljLmRpZW5kYW5zICAsIHB1YmxpYy50YWlraG9hbnNcclxuICAgICAgICB3aGVyZSBkaWVuZGFucy5pZF9raG9haG9jID0ga2hvYWhvY3MuaWQgIGFuZCB0YWlraG9hbnMuaWQgPSBkaWVuZGFucy5pZF90YWlraG9hbiAgYW5kIGRpZW5kYW5zLmlkID1gICsgIGlkICsgICBgIGBcclxuICAgICAgKTtcclxuICAgICAgcmV0dXJuIGlkX2tob2Fob2M7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHN0YXRpYyBhc3luYyBkZWxldGUoaWQpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgIHJldHVybiBhd2FpdCBkYXRhYmFzZS5kaWVuZGFuLmRlc3Ryb3koe1xyXG4gICAgICAgIHdoZXJlOiB7IGlkIH1cclxuICAgICAgfSk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9XHJcbiAgc3RhdGljIGFzeW5jIFNhdmUoZGF0YSkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgcmV0dXJuIGF3YWl0IGRhdGFiYXNlLmRpZW5kYW4uY3JlYXRlKGRhdGEpO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgYXN5bmMgVXBkYXRlKGlkLCBkYXRhKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICBsZXQgdGsgPSBhd2FpdCBkYXRhYmFzZS5kaWVuZGFuLmZpbmRPbmUoe1xyXG4gICAgICAgIHdoZXJlOiB7IGlkIH1cclxuICAgICAgfSk7XHJcbiAgICAgIGlmICh0aykge1xyXG4gICAgICAgIHJldHVybiBhd2FpdCBkYXRhYmFzZS5kaWVuZGFuLnVwZGF0ZShkYXRhLCB7XHJcbiAgICAgICAgICB3aGVyZTogeyBpZDogTnVtYmVyKGlkKSB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vID09PT09PT09PT09PT09PT09PT09PSBvdXQgc2l0ZSA9PT09PT09PT09PT09PT09PT09PT09XHJcbiAgc3RhdGljIGFzeW5jIGdldHRoZW90ayhpZCkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgbGV0IGlkX2tob2Fob2MgPSBhd2FpdCBkYXRhYmFzZS5raG9haG9jLnNlcXVlbGl6ZS5xdWVyeShcclxuICAgICAgICBgU0VMRUNUICBraG9haG9jcy50ZW5raG9haG9jLGRpZW5kYW5zLiogRlJPTSBwdWJsaWMua2hvYWhvY3MsIHB1YmxpYy5kaWVuZGFucyAgd2hlcmUgZGllbmRhbnMuaWRfa2hvYWhvYyA9IGtob2Fob2NzLmlkIGFuZCBkaWVuZGFucy5pZF90YWlraG9hbiA9IGAgK1xyXG4gICAgICAgICAgaWQgK1xyXG4gICAgICAgICAgYCBgXHJcbiAgICAgICk7XHJcbiAgICAgIHJldHVybiBpZF9raG9haG9jO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBkaWVuZGFuU2VydmljZTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "dienDanService.js"
      ],
      "names": [
        "diendanService",
        "limit",
        "database",
        "khoahoc",
        "sequelize",
        "query",
        "id_khoahoc",
        "diendan",
        "findAll",
        "where",
        "trangthai",
        "id",
        "destroy",
        "data",
        "create",
        "findOne",
        "tk",
        "update",
        "Number"
      ],
      "mappings": ";;;;;;;;;;;;;;;AAAA;;IAEMA,c;;;;;;;;;2BACgBC,K;;;;;;;;mDAEOC,mBAASC,OAAT,CAAiBC,SAAjB,CAA2BC,KAA3B,CACrB,4TAKEJ,KALF,gBADqB,C;;;AAAnBK,cAAAA,U;+CAUGA,U;;;;;;;;;;;;;;;;;;;;;;;;mDAOgBJ,mBAASC,OAAT,CAAiBC,SAAjB,CAA2BC,KAA3B,wR;;;AAAnBC,cAAAA,U;gDAMGA,U;;;;;;;;;;;;;;;;mCAKiBA,U;;;;;;;mDAEXJ,mBAASK,OAAT,CAAiBC,OAAjB,CAAyB;AACpCC,gBAAAA,KAAK,EAAE;AAAEH,kBAAAA,UAAU,EAAVA,UAAF;AAAeI,kBAAAA,SAAS,EAAG;AAA3B,iBAD6B;AAEpCT,gBAAAA,KAAK,EAAE;AAF6B,eAAzB,C;;;;;;;;;;;;;;;;;;;4BAQIU,E;;;;;;;;mDAEMT,mBAASC,OAAT,CAAiBC,SAAjB,CAA2BC,KAA3B,CACrB,gPAEwGM,EAFxG,MADqB,C;;;AAAnBL,cAAAA,U;gDAKGA,U;;;;;;;;;;;;;;;;4BAMSK,E;;;;;;;mDAEHT,mBAASK,OAAT,CAAiBK,OAAjB,CAAyB;AACpCH,gBAAAA,KAAK,EAAE;AAAEE,kBAAAA,EAAE,EAAFA;AAAF;AAD6B,eAAzB,C;;;;;;;;;;;;;;;;;;;yBAOCE,I;;;;;;;mDAEDX,mBAASK,OAAT,CAAiBO,MAAjB,CAAwBD,IAAxB,C;;;;;;;;;;;;;;;;;;;2BAMGF,E,EAAIE,I;;;;;;;;mDAELX,mBAASK,OAAT,CAAiBQ,OAAjB,CAAyB;AACtCN,gBAAAA,KAAK,EAAE;AAAEE,kBAAAA,EAAE,EAAFA;AAAF;AAD+B,eAAzB,C;;;AAAXK,cAAAA,E;;mBAGAA,E;;;;;;mDACWd,mBAASK,OAAT,CAAiBU,MAAjB,CAAwBJ,IAAxB,EAA8B;AACzCJ,gBAAAA,KAAK,EAAE;AAAEE,kBAAAA,EAAE,EAAEO,MAAM,CAACP,EAAD;AAAZ;AADkC,eAA9B,C;;;;;;gDAIR,I;;;;;;;;;;;;;MAMX;;;;8BACuBA,E;;;;;;;;mDAEIT,mBAASC,OAAT,CAAiBC,SAAjB,CAA2BC,KAA3B,CACrB,sJACEM,EADF,MADqB,C;;;AAAnBL,cAAAA,U;gDAKGA,U;;;;;;;;;;;;;;;;;;eAOEN,c",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services",
      "sourcesContent": [
        "import database from \"../../Model/models\";\r\n\r\nclass diendanService {\r\n  static async getAll(limit) {\r\n    try {\r\n      let id_khoahoc = await database.khoahoc.sequelize.query(\r\n        `select khoahocs.tenkhoahoc , diendans.* , taikhoans.hinhanh\r\n        from public.khoahocs, public.diendans , public.taikhoans\r\n        where diendans.id_khoahoc = khoahocs.id and diendans.trangthai =1 and diendans.id_taikhoan = taikhoans.id \r\n        and diendans.trangthai = 1\r\n        ORDER BY id desc  limit ` +\r\n          limit +\r\n          `\r\n         `\r\n      );\r\n      return id_khoahoc;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  static async getAllAd() {\r\n    try {\r\n      let id_khoahoc = await database.khoahoc.sequelize.query(\r\n        `select khoahocs.tenkhoahoc , diendans.* , taikhoans.tentaikhoan\r\n        from public.khoahocs, public.diendans , public.taikhoans\r\n        where diendans.id_khoahoc = khoahocs.id and diendans.trangthai =1 and diendans.id_taikhoan = taikhoans.id\r\n        ORDER BY id desc      `\r\n      );\r\n      return id_khoahoc;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  static async gettheokhoahoc(id_khoahoc) {\r\n    try {     \r\n      return await database.diendan.findAll({\r\n        where: { id_khoahoc , trangthai : 1 },\r\n        limit: 10\r\n      });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  static async getByID(id) {\r\n    try {\r\n      let id_khoahoc = await database.khoahoc.sequelize.query(\r\n        `SELECT  khoahocs.tenkhoahoc,diendans.*  , taikhoans.hinhanh\r\n        FROM public.khoahocs, public.diendans  , public.taikhoans\r\n        where diendans.id_khoahoc = khoahocs.id  and taikhoans.id = diendans.id_taikhoan  and diendans.id =` +  id +   ` `\r\n      );\r\n      return id_khoahoc;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async delete(id) {\r\n    try {\r\n      return await database.diendan.destroy({\r\n        where: { id }\r\n      });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  static async Save(data) {\r\n    try {\r\n      return await database.diendan.create(data);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async Update(id, data) {\r\n    try {\r\n      let tk = await database.diendan.findOne({\r\n        where: { id }\r\n      });\r\n      if (tk) {\r\n        return await database.diendan.update(data, {\r\n          where: { id: Number(id) }\r\n        });\r\n      }\r\n      return null;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // ===================== out site ======================\r\n  static async gettheotk(id) {\r\n    try {\r\n      let id_khoahoc = await database.khoahoc.sequelize.query(\r\n        `SELECT  khoahocs.tenkhoahoc,diendans.* FROM public.khoahocs, public.diendans  where diendans.id_khoahoc = khoahocs.id and diendans.id_taikhoan = ` +\r\n          id +\r\n          ` `\r\n      );\r\n      return id_khoahoc;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default diendanService;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1584625499358
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\services\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\services\\\\khoaHocService.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services\\khoaHocService.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services\\khoaHocService.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services\\khoaHocService.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services",
        "sourceFileName": "khoaHocService.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _models = _interopRequireDefault(require(\"../../Model/models\"));\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar khoahocService =\n/*#__PURE__*/\nfunction () {\n  function khoahocService() {\n    (0, _classCallCheck2[\"default\"])(this, khoahocService);\n  }\n\n  (0, _createClass2[\"default\"])(khoahocService, null, [{\n    key: \"getAll\",\n    value: function getAll() {\n      return _regenerator[\"default\"].async(function getAll$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].khoahoc.findAll({\n                order: [['id', 'DESC']]\n              }));\n\n            case 3:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              throw _context.t0;\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"getByID\",\n    value: function getByID(id) {\n      var id_khoahoc;\n      return _regenerator[\"default\"].async(function getByID$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].khoahoc.sequelize.query(\"SELECT  tenkhoahoc , dieukienhoc FROM public.khoahocs  where id = \" + id + \" \"));\n\n            case 3:\n              id_khoahoc = _context2.sent;\n              return _context2.abrupt(\"return\", id_khoahoc);\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              throw _context2.t0;\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    } // get moi nhta ko co id \n\n  }, {\n    key: \"getByIDMN\",\n    value: function getByIDMN() {\n      var id_khoahoc;\n      return _regenerator[\"default\"].async(function getByIDMN$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].khoahoc.sequelize.query(\"SELECT *\\n      FROM khoahocs\\n      WHERE id = (SELECT MAX(id) FROM khoahocs) \"));\n\n            case 3:\n              id_khoahoc = _context3.sent;\n              return _context3.abrupt(\"return\", id_khoahoc);\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](0);\n              throw _context3.t0;\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(id) {\n      return _regenerator[\"default\"].async(function _delete$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].khoahoc.destroy({\n                where: {\n                  id: id\n                }\n              }));\n\n            case 3:\n              return _context4.abrupt(\"return\", _context4.sent);\n\n            case 6:\n              _context4.prev = 6;\n              _context4.t0 = _context4[\"catch\"](0);\n              throw _context4.t0;\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"Save\",\n    value: function Save(data) {\n      return _regenerator[\"default\"].async(function Save$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].khoahoc.create(data));\n\n            case 3:\n              return _context5.abrupt(\"return\", _context5.sent);\n\n            case 6:\n              _context5.prev = 6;\n              _context5.t0 = _context5[\"catch\"](0);\n              throw _context5.t0;\n\n            case 9:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"Update\",\n    value: function Update(id, data) {\n      var tk;\n      return _regenerator[\"default\"].async(function Update$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].khoahoc.findOne({\n                where: {\n                  id: id\n                }\n              }));\n\n            case 3:\n              tk = _context6.sent;\n\n              if (!tk) {\n                _context6.next = 8;\n                break;\n              }\n\n              _context6.next = 7;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].khoahoc.update(data, {\n                where: {\n                  id: id\n                }\n              }));\n\n            case 7:\n              return _context6.abrupt(\"return\", data);\n\n            case 8:\n              return _context6.abrupt(\"return\", null);\n\n            case 11:\n              _context6.prev = 11;\n              _context6.t0 = _context6[\"catch\"](0);\n              throw _context6.t0;\n\n            case 14:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[0, 11]]);\n    }\n  }, {\n    key: \"add\",\n    value: function add(data) {\n      var tenkhoahoc, tk;\n      return _regenerator[\"default\"].async(function add$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              tenkhoahoc = data.tenkhoahoc;\n              _context7.next = 4;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].khoahoc.findOne({\n                where: {\n                  tenkhoahoc: tenkhoahoc\n                }\n              }));\n\n            case 4:\n              tk = _context7.sent;\n\n              if (!tk) {\n                _context7.next = 7;\n                break;\n              }\n\n              return _context7.abrupt(\"return\", null);\n\n            case 7:\n              _context7.next = 9;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].khoahoc.create(data));\n\n            case 9:\n              return _context7.abrupt(\"return\", _context7.sent);\n\n            case 12:\n              _context7.prev = 12;\n              _context7.t0 = _context7[\"catch\"](0);\n              throw _context7.t0;\n\n            case 15:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, [[0, 12]]);\n    } //  sử dụng cho lớp học\n\n  }, {\n    key: \"getKH\",\n    value: function getKH() {\n      return _regenerator[\"default\"].async(function getKH$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              _context8.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].khoahoc.findAll({\n                where: {\n                  trangthai: 1\n                },\n                order: [['id', 'DESC']]\n              }));\n\n            case 3:\n              return _context8.abrupt(\"return\", _context8.sent);\n\n            case 6:\n              _context8.prev = 6;\n              _context8.t0 = _context8[\"catch\"](0);\n              throw _context8.t0;\n\n            case 9:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }]);\n  return khoahocService;\n}();\n\nvar _default = khoahocService;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImtob2FIb2NTZXJ2aWNlLmpzIl0sIm5hbWVzIjpbImtob2Fob2NTZXJ2aWNlIiwiZGF0YWJhc2UiLCJraG9haG9jIiwiZmluZEFsbCIsIm9yZGVyIiwiaWQiLCJzZXF1ZWxpemUiLCJxdWVyeSIsImlkX2tob2Fob2MiLCJkZXN0cm95Iiwid2hlcmUiLCJkYXRhIiwiY3JlYXRlIiwiZmluZE9uZSIsInRrIiwidXBkYXRlIiwidGVua2hvYWhvYyIsInRyYW5ndGhhaSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0lBQ01BLGM7Ozs7Ozs7Ozs7Ozs7Ozs7bURBR2FDLG1CQUFTQyxPQUFULENBQWlCQyxPQUFqQixDQUF5QjtBQUNwQ0MsZ0JBQUFBLEtBQUssRUFBRSxDQUNMLENBQUMsSUFBRCxFQUFPLE1BQVAsQ0FESztBQUQ2QixlQUF6QixDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OzRCQVVJQyxFOzs7Ozs7OzttREFFTUosbUJBQVNDLE9BQVQsQ0FBaUJJLFNBQWpCLENBQTJCQyxLQUEzQixDQUNyQix1RUFBdUVGLEVBQXZFLE1BRHFCLEM7OztBQUFuQkcsY0FBQUEsVTtnREFHR0EsVTs7Ozs7Ozs7Ozs7OztNQUtiOzs7Ozs7Ozs7Ozs7bURBRzJCUCxtQkFBU0MsT0FBVCxDQUFpQkksU0FBakIsQ0FBMkJDLEtBQTNCLG1GOzs7QUFBbkJDLGNBQUFBLFU7Z0RBS0dBLFU7Ozs7Ozs7Ozs7Ozs7Ozs7NEJBTVdILEU7Ozs7Ozs7bURBRUhKLG1CQUFTQyxPQUFULENBQWlCTyxPQUFqQixDQUF5QjtBQUNwQ0MsZ0JBQUFBLEtBQUssRUFBRTtBQUFFTCxrQkFBQUEsRUFBRSxFQUFGQTtBQUFGO0FBRDZCLGVBQXpCLEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7eUJBT0NNLEk7Ozs7Ozs7bURBRURWLG1CQUFTQyxPQUFULENBQWlCVSxNQUFqQixDQUF3QkQsSUFBeEIsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsyQkFNR04sRSxFQUFJTSxJOzs7Ozs7OzttREFFTFYsbUJBQVNDLE9BQVQsQ0FBaUJXLE9BQWpCLENBQXlCO0FBQ3RDSCxnQkFBQUEsS0FBSyxFQUFFO0FBQUVMLGtCQUFBQSxFQUFFLEVBQUZBO0FBQUY7QUFEK0IsZUFBekIsQzs7O0FBQVhTLGNBQUFBLEU7O21CQUdBQSxFOzs7Ozs7bURBQ0liLG1CQUFTQyxPQUFULENBQWlCYSxNQUFqQixDQUF3QkosSUFBeEIsRUFBOEI7QUFDbENELGdCQUFBQSxLQUFLLEVBQUU7QUFBRUwsa0JBQUFBLEVBQUUsRUFBRUE7QUFBTjtBQUQyQixlQUE5QixDOzs7Z0RBR0NNLEk7OztnREFFRixJOzs7Ozs7Ozs7Ozs7Ozs7O3dCQU1NQSxJOzs7Ozs7O0FBRVRLLGNBQUFBLFUsR0FBYUwsSUFBSSxDQUFDSyxVOzttREFDUGYsbUJBQVNDLE9BQVQsQ0FBaUJXLE9BQWpCLENBQXlCO0FBQ3RDSCxnQkFBQUEsS0FBSyxFQUFFO0FBQUVNLGtCQUFBQSxVQUFVLEVBQVZBO0FBQUY7QUFEK0IsZUFBekIsQzs7O0FBQVhGLGNBQUFBLEU7O21CQUdBQSxFOzs7OztnREFDSyxJOzs7O21EQUVJYixtQkFBU0MsT0FBVCxDQUFpQlUsTUFBakIsQ0FBd0JELElBQXhCLEM7Ozs7Ozs7Ozs7Ozs7Ozs7TUFLakI7Ozs7Ozs7Ozs7O21EQUdpQlYsbUJBQVNDLE9BQVQsQ0FBaUJDLE9BQWpCLENBQXlCO0FBQy9CTyxnQkFBQUEsS0FBSyxFQUFDO0FBQUNPLGtCQUFBQSxTQUFTLEVBQUM7QUFBWCxpQkFEeUI7QUFFcENiLGdCQUFBQSxLQUFLLEVBQUUsQ0FDTCxDQUFDLElBQUQsRUFBTyxNQUFQLENBREs7QUFGNkIsZUFBekIsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2VBY0pKLGMiLCJzb3VyY2VSb290IjoiRDpcXEx1YW5WYW5cXEx1YW5WYW5EMlxcdHJ1bmd0YW1fbGFuNFxcYXBwc1xcc2VydmljZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZGF0YWJhc2UgZnJvbSBcIi4uLy4uL01vZGVsL21vZGVsc1wiO1xyXG5pbXBvcnQgc2VxdWVsaXplIGZyb20gXCJzZXF1ZWxpemVcIjtcclxuY2xhc3Mga2hvYWhvY1NlcnZpY2Uge1xyXG4gIHN0YXRpYyBhc3luYyBnZXRBbGwoKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICByZXR1cm4gYXdhaXQgZGF0YWJhc2Uua2hvYWhvYy5maW5kQWxsKHsgICAgICAgIFxyXG4gICAgICAgIG9yZGVyOiBbICAgICAgICAgXHJcbiAgICAgICAgICBbJ2lkJywgJ0RFU0MnXVxyXG4gICAgICAgIF1cclxuICAgICAgfVxyXG4gICAgICApO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHN0YXRpYyBhc3luYyBnZXRCeUlEKGlkKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICBsZXQgaWRfa2hvYWhvYyA9IGF3YWl0IGRhdGFiYXNlLmtob2Fob2Muc2VxdWVsaXplLnF1ZXJ5KFxyXG4gICAgICAgIGBTRUxFQ1QgIHRlbmtob2Fob2MgLCBkaWV1a2llbmhvYyBGUk9NIHB1YmxpYy5raG9haG9jcyAgd2hlcmUgaWQgPSBgICsgaWQgKyBgIGBcclxuICAgICAgKTtcclxuICAgICAgcmV0dXJuIGlkX2tob2Fob2M7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9XHJcbi8vIGdldCBtb2kgbmh0YSBrbyBjbyBpZCBcclxuc3RhdGljIGFzeW5jIGdldEJ5SURNTigpIHtcclxuICB0cnkge1xyXG4gICAgbGV0IGlkX2tob2Fob2MgPSBhd2FpdCBkYXRhYmFzZS5raG9haG9jLnNlcXVlbGl6ZS5xdWVyeShcclxuICAgICAgYFNFTEVDVCAqXHJcbiAgICAgIEZST00ga2hvYWhvY3NcclxuICAgICAgV0hFUkUgaWQgPSAoU0VMRUNUIE1BWChpZCkgRlJPTSBraG9haG9jcykgYFxyXG4gICAgKTtcclxuICAgIHJldHVybiBpZF9raG9haG9jO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICB0aHJvdyBlcnJvcjtcclxuICB9XHJcbn1cclxuXHJcbiAgc3RhdGljIGFzeW5jIGRlbGV0ZShpZCkge1xyXG4gICAgdHJ5IHsgICAgIFxyXG4gICAgICByZXR1cm4gYXdhaXQgZGF0YWJhc2Uua2hvYWhvYy5kZXN0cm95KHtcclxuICAgICAgICB3aGVyZTogeyBpZCB9XHJcbiAgICAgIH0pO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHN0YXRpYyBhc3luYyBTYXZlKGRhdGEpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgIHJldHVybiBhd2FpdCBkYXRhYmFzZS5raG9haG9jLmNyZWF0ZShkYXRhKTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc3RhdGljIGFzeW5jIFVwZGF0ZShpZCwgZGF0YSkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgbGV0IHRrID0gYXdhaXQgZGF0YWJhc2Uua2hvYWhvYy5maW5kT25lKHtcclxuICAgICAgICB3aGVyZTogeyBpZCB9XHJcbiAgICAgIH0pO1xyXG4gICAgICBpZiAodGspIHtcclxuICAgICAgICBhd2FpdCBkYXRhYmFzZS5raG9haG9jLnVwZGF0ZShkYXRhLCB7XHJcbiAgICAgICAgICB3aGVyZTogeyBpZDogaWQgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiBkYXRhO1xyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgYXN5bmMgYWRkKGRhdGEpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGxldCB0ZW5raG9haG9jID0gZGF0YS50ZW5raG9haG9jO1xyXG4gICAgICBsZXQgdGsgPSBhd2FpdCBkYXRhYmFzZS5raG9haG9jLmZpbmRPbmUoe1xyXG4gICAgICAgIHdoZXJlOiB7IHRlbmtob2Fob2MgfVxyXG4gICAgICB9KTtcclxuICAgICAgaWYgKHRrKSB7XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIGF3YWl0IGRhdGFiYXNlLmtob2Fob2MuY3JlYXRlKGRhdGEpO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG4gIC8vICBz4butIGThu6VuZyBjaG8gbOG7m3AgaOG7jWNcclxuICBzdGF0aWMgYXN5bmMgZ2V0S0goKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICByZXR1cm4gYXdhaXQgZGF0YWJhc2Uua2hvYWhvYy5maW5kQWxsKHsgIFxyXG4gICAgICAgICAgICAgd2hlcmU6e3RyYW5ndGhhaToxfSwgXHJcbiAgICAgICAgb3JkZXI6IFsgICAgICAgICBcclxuICAgICAgICAgIFsnaWQnLCAnREVTQyddXHJcbiAgICAgICAgXVxyXG4gICAgICB9XHJcbiAgICAgICk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9XHJcblxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBraG9haG9jU2VydmljZTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "khoaHocService.js"
      ],
      "names": [
        "khoahocService",
        "database",
        "khoahoc",
        "findAll",
        "order",
        "id",
        "sequelize",
        "query",
        "id_khoahoc",
        "destroy",
        "where",
        "data",
        "create",
        "findOne",
        "tk",
        "update",
        "tenkhoahoc",
        "trangthai"
      ],
      "mappings": ";;;;;;;;;;;;;;;AAAA;;AACA;;IACMA,c;;;;;;;;;;;;;;;;mDAGaC,mBAASC,OAAT,CAAiBC,OAAjB,CAAyB;AACpCC,gBAAAA,KAAK,EAAE,CACL,CAAC,IAAD,EAAO,MAAP,CADK;AAD6B,eAAzB,C;;;;;;;;;;;;;;;;;;;4BAUIC,E;;;;;;;;mDAEMJ,mBAASC,OAAT,CAAiBI,SAAjB,CAA2BC,KAA3B,CACrB,uEAAuEF,EAAvE,MADqB,C;;;AAAnBG,cAAAA,U;gDAGGA,U;;;;;;;;;;;;;MAKb;;;;;;;;;;;;mDAG2BP,mBAASC,OAAT,CAAiBI,SAAjB,CAA2BC,KAA3B,mF;;;AAAnBC,cAAAA,U;gDAKGA,U;;;;;;;;;;;;;;;;4BAMWH,E;;;;;;;mDAEHJ,mBAASC,OAAT,CAAiBO,OAAjB,CAAyB;AACpCC,gBAAAA,KAAK,EAAE;AAAEL,kBAAAA,EAAE,EAAFA;AAAF;AAD6B,eAAzB,C;;;;;;;;;;;;;;;;;;;yBAOCM,I;;;;;;;mDAEDV,mBAASC,OAAT,CAAiBU,MAAjB,CAAwBD,IAAxB,C;;;;;;;;;;;;;;;;;;;2BAMGN,E,EAAIM,I;;;;;;;;mDAELV,mBAASC,OAAT,CAAiBW,OAAjB,CAAyB;AACtCH,gBAAAA,KAAK,EAAE;AAAEL,kBAAAA,EAAE,EAAFA;AAAF;AAD+B,eAAzB,C;;;AAAXS,cAAAA,E;;mBAGAA,E;;;;;;mDACIb,mBAASC,OAAT,CAAiBa,MAAjB,CAAwBJ,IAAxB,EAA8B;AAClCD,gBAAAA,KAAK,EAAE;AAAEL,kBAAAA,EAAE,EAAEA;AAAN;AAD2B,eAA9B,C;;;gDAGCM,I;;;gDAEF,I;;;;;;;;;;;;;;;;wBAMMA,I;;;;;;;AAETK,cAAAA,U,GAAaL,IAAI,CAACK,U;;mDACPf,mBAASC,OAAT,CAAiBW,OAAjB,CAAyB;AACtCH,gBAAAA,KAAK,EAAE;AAAEM,kBAAAA,UAAU,EAAVA;AAAF;AAD+B,eAAzB,C;;;AAAXF,cAAAA,E;;mBAGAA,E;;;;;gDACK,I;;;;mDAEIb,mBAASC,OAAT,CAAiBU,MAAjB,CAAwBD,IAAxB,C;;;;;;;;;;;;;;;;MAKjB;;;;;;;;;;;mDAGiBV,mBAASC,OAAT,CAAiBC,OAAjB,CAAyB;AAC/BO,gBAAAA,KAAK,EAAC;AAACO,kBAAAA,SAAS,EAAC;AAAX,iBADyB;AAEpCb,gBAAAA,KAAK,EAAE,CACL,CAAC,IAAD,EAAO,MAAP,CADK;AAF6B,eAAzB,C;;;;;;;;;;;;;;;;;;;;;eAcJJ,c",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services",
      "sourcesContent": [
        "import database from \"../../Model/models\";\r\nimport sequelize from \"sequelize\";\r\nclass khoahocService {\r\n  static async getAll() {\r\n    try {\r\n      return await database.khoahoc.findAll({        \r\n        order: [         \r\n          ['id', 'DESC']\r\n        ]\r\n      }\r\n      );\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  static async getByID(id) {\r\n    try {\r\n      let id_khoahoc = await database.khoahoc.sequelize.query(\r\n        `SELECT  tenkhoahoc , dieukienhoc FROM public.khoahocs  where id = ` + id + ` `\r\n      );\r\n      return id_khoahoc;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n// get moi nhta ko co id \r\nstatic async getByIDMN() {\r\n  try {\r\n    let id_khoahoc = await database.khoahoc.sequelize.query(\r\n      `SELECT *\r\n      FROM khoahocs\r\n      WHERE id = (SELECT MAX(id) FROM khoahocs) `\r\n    );\r\n    return id_khoahoc;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n\r\n  static async delete(id) {\r\n    try {     \r\n      return await database.khoahoc.destroy({\r\n        where: { id }\r\n      });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  static async Save(data) {\r\n    try {\r\n      return await database.khoahoc.create(data);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async Update(id, data) {\r\n    try {\r\n      let tk = await database.khoahoc.findOne({\r\n        where: { id }\r\n      });\r\n      if (tk) {\r\n        await database.khoahoc.update(data, {\r\n          where: { id: id }\r\n        });\r\n        return data;\r\n      }\r\n      return null;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async add(data) {\r\n    try {\r\n      let tenkhoahoc = data.tenkhoahoc;\r\n      let tk = await database.khoahoc.findOne({\r\n        where: { tenkhoahoc }\r\n      });\r\n      if (tk) {\r\n        return null;\r\n      }\r\n      return await database.khoahoc.create(data);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  //  sử dụng cho lớp học\r\n  static async getKH() {\r\n    try {\r\n      return await database.khoahoc.findAll({  \r\n             where:{trangthai:1}, \r\n        order: [         \r\n          ['id', 'DESC']\r\n        ]\r\n      }\r\n      );\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default khoahocService;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585631282763
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\services\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\services\\\\phanHoiService.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services\\phanHoiService.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services\\phanHoiService.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services\\phanHoiService.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services",
        "sourceFileName": "phanHoiService.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _models = _interopRequireDefault(require(\"../../Model/models\"));\n\nvar phanhoiService =\n/*#__PURE__*/\nfunction () {\n  function phanhoiService() {\n    (0, _classCallCheck2[\"default\"])(this, phanhoiService);\n  }\n\n  (0, _createClass2[\"default\"])(phanhoiService, null, [{\n    key: \"getAll\",\n    value: function getAll() {\n      return _regenerator[\"default\"].async(function getAll$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].phanhoi.findAll());\n\n            case 3:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              throw _context.t0;\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"getByID\",\n    value: function getByID(id) {\n      var id_khoahoc;\n      return _regenerator[\"default\"].async(function getByID$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].khoahoc.sequelize.query(\"SELECT phanhois.*, taikhoans.tentaikhoan, diendans.id , taikhoans.hinhanh\\n         FROM public.phanhois,public.diendans, public.taikhoans  \\n         where phanhois.id_tktraloi = taikhoans.id and phanhois.id_diendan = diendans.id and phanhois.id_diendan = \" + id + \" \"));\n\n            case 3:\n              id_khoahoc = _context2.sent;\n              return _context2.abrupt(\"return\", id_khoahoc);\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              throw _context2.t0;\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(id) {\n      return _regenerator[\"default\"].async(function _delete$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].phanhoi.destroy({\n                where: {\n                  id: id\n                }\n              }));\n\n            case 3:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 6:\n              _context3.prev = 6;\n              _context3.t0 = _context3[\"catch\"](0);\n              throw _context3.t0;\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"add\",\n    value: function add(data) {\n      return _regenerator[\"default\"].async(function add$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].phanhoi.create(data));\n\n            case 3:\n              return _context4.abrupt(\"return\", _context4.sent);\n\n            case 6:\n              _context4.prev = 6;\n              _context4.t0 = _context4[\"catch\"](0);\n              throw _context4.t0;\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"Update\",\n    value: function Update(id, data) {\n      var tk;\n      return _regenerator[\"default\"].async(function Update$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].phanhoi.findOne({\n                where: {\n                  id: id\n                }\n              }));\n\n            case 3:\n              tk = _context5.sent;\n\n              if (!tk) {\n                _context5.next = 8;\n                break;\n              }\n\n              _context5.next = 7;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].phanhoi.update(data, {\n                where: {\n                  id: id\n                }\n              }));\n\n            case 7:\n              return _context5.abrupt(\"return\", data);\n\n            case 8:\n              return _context5.abrupt(\"return\", null);\n\n            case 11:\n              _context5.prev = 11;\n              _context5.t0 = _context5[\"catch\"](0);\n              throw _context5.t0;\n\n            case 14:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 11]]);\n    }\n  }]);\n  return phanhoiService;\n}();\n\nvar _default = phanhoiService;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBoYW5Ib2lTZXJ2aWNlLmpzIl0sIm5hbWVzIjpbInBoYW5ob2lTZXJ2aWNlIiwiZGF0YWJhc2UiLCJwaGFuaG9pIiwiZmluZEFsbCIsImlkIiwia2hvYWhvYyIsInNlcXVlbGl6ZSIsInF1ZXJ5IiwiaWRfa2hvYWhvYyIsImRlc3Ryb3kiLCJ3aGVyZSIsImRhdGEiLCJjcmVhdGUiLCJmaW5kT25lIiwidGsiLCJ1cGRhdGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztJQUVNQSxjOzs7Ozs7Ozs7Ozs7Ozs7O21EQUdhQyxtQkFBU0MsT0FBVCxDQUFpQkMsT0FBakIsRTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs0QkFNSUMsRTs7Ozs7Ozs7bURBRU1ILG1CQUFTSSxPQUFULENBQWlCQyxTQUFqQixDQUEyQkMsS0FBM0IsQ0FDckIsc1FBRStHSCxFQUYvRyxNQURxQixDOzs7QUFBbkJJLGNBQUFBLFU7Z0RBS0dBLFU7Ozs7Ozs7Ozs7Ozs7Ozs7NEJBTVNKLEU7Ozs7Ozs7bURBRUhILG1CQUFTQyxPQUFULENBQWlCTyxPQUFqQixDQUF5QjtBQUNwQ0MsZ0JBQUFBLEtBQUssRUFBRTtBQUFFTixrQkFBQUEsRUFBRSxFQUFGQTtBQUFGO0FBRDZCLGVBQXpCLEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7d0JBT0FPLEk7Ozs7Ozs7bURBRUFWLG1CQUFTQyxPQUFULENBQWlCVSxNQUFqQixDQUF3QkQsSUFBeEIsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsyQkFNR1AsRSxFQUFJTyxJOzs7Ozs7OzttREFFTFYsbUJBQVNDLE9BQVQsQ0FBaUJXLE9BQWpCLENBQXlCO0FBQ3RDSCxnQkFBQUEsS0FBSyxFQUFFO0FBQUVOLGtCQUFBQSxFQUFFLEVBQUZBO0FBQUY7QUFEK0IsZUFBekIsQzs7O0FBQVhVLGNBQUFBLEU7O21CQUdBQSxFOzs7Ozs7bURBQ0liLG1CQUFTQyxPQUFULENBQWlCYSxNQUFqQixDQUF3QkosSUFBeEIsRUFBOEI7QUFDbENELGdCQUFBQSxLQUFLLEVBQUU7QUFBRU4sa0JBQUFBLEVBQUUsRUFBRkE7QUFBRjtBQUQyQixlQUE5QixDOzs7Z0RBR0NPLEk7OztnREFFRixJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7ZUFTRVgsYyIsInNvdXJjZVJvb3QiOiJEOlxcTHVhblZhblxcTHVhblZhbkQyXFx0cnVuZ3RhbV9sYW40XFxhcHBzXFxzZXJ2aWNlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkYXRhYmFzZSBmcm9tIFwiLi4vLi4vTW9kZWwvbW9kZWxzXCI7XHJcblxyXG5jbGFzcyBwaGFuaG9pU2VydmljZSB7XHJcbiAgc3RhdGljIGFzeW5jIGdldEFsbCgpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgIHJldHVybiBhd2FpdCBkYXRhYmFzZS5waGFuaG9pLmZpbmRBbGwoKTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG4gIH1cclxuICBcclxuICBzdGF0aWMgYXN5bmMgZ2V0QnlJRChpZCkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgbGV0IGlkX2tob2Fob2MgPSBhd2FpdCBkYXRhYmFzZS5raG9haG9jLnNlcXVlbGl6ZS5xdWVyeShcclxuICAgICAgICBgU0VMRUNUIHBoYW5ob2lzLiosIHRhaWtob2Fucy50ZW50YWlraG9hbiwgZGllbmRhbnMuaWQgLCB0YWlraG9hbnMuaGluaGFuaFxyXG4gICAgICAgICBGUk9NIHB1YmxpYy5waGFuaG9pcyxwdWJsaWMuZGllbmRhbnMsIHB1YmxpYy50YWlraG9hbnMgIFxyXG4gICAgICAgICB3aGVyZSBwaGFuaG9pcy5pZF90a3RyYWxvaSA9IHRhaWtob2Fucy5pZCBhbmQgcGhhbmhvaXMuaWRfZGllbmRhbiA9IGRpZW5kYW5zLmlkIGFuZCBwaGFuaG9pcy5pZF9kaWVuZGFuID0gYCArIGlkICsgYCBgXHJcbiAgICAgICk7ICAgICAgXHJcbiAgICAgIHJldHVybiBpZF9raG9haG9jO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgYXN5bmMgZGVsZXRlKGlkKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICByZXR1cm4gYXdhaXQgZGF0YWJhc2UucGhhbmhvaS5kZXN0cm95KHtcclxuICAgICAgICB3aGVyZTogeyBpZCB9XHJcbiAgICAgIH0pO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHN0YXRpYyBhc3luYyBhZGQoZGF0YSkge1xyXG4gICAgdHJ5IHsgICAgICAgIFxyXG4gICAgICByZXR1cm4gYXdhaXQgZGF0YWJhc2UucGhhbmhvaS5jcmVhdGUoZGF0YSk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHN0YXRpYyBhc3luYyBVcGRhdGUoaWQsIGRhdGEpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGxldCB0ayA9IGF3YWl0IGRhdGFiYXNlLnBoYW5ob2kuZmluZE9uZSh7XHJcbiAgICAgICAgd2hlcmU6IHsgaWQgfVxyXG4gICAgICB9KTtcclxuICAgICAgaWYgKHRrKSB7XHJcbiAgICAgICAgYXdhaXQgZGF0YWJhc2UucGhhbmhvaS51cGRhdGUoZGF0YSwge1xyXG4gICAgICAgICAgd2hlcmU6IHsgaWQgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiBkYXRhO1xyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuIFxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBwaGFuaG9pU2VydmljZTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "phanHoiService.js"
      ],
      "names": [
        "phanhoiService",
        "database",
        "phanhoi",
        "findAll",
        "id",
        "khoahoc",
        "sequelize",
        "query",
        "id_khoahoc",
        "destroy",
        "where",
        "data",
        "create",
        "findOne",
        "tk",
        "update"
      ],
      "mappings": ";;;;;;;;;;;;;;;AAAA;;IAEMA,c;;;;;;;;;;;;;;;;mDAGaC,mBAASC,OAAT,CAAiBC,OAAjB,E;;;;;;;;;;;;;;;;;;;4BAMIC,E;;;;;;;;mDAEMH,mBAASI,OAAT,CAAiBC,SAAjB,CAA2BC,KAA3B,CACrB,sQAE+GH,EAF/G,MADqB,C;;;AAAnBI,cAAAA,U;gDAKGA,U;;;;;;;;;;;;;;;;4BAMSJ,E;;;;;;;mDAEHH,mBAASC,OAAT,CAAiBO,OAAjB,CAAyB;AACpCC,gBAAAA,KAAK,EAAE;AAAEN,kBAAAA,EAAE,EAAFA;AAAF;AAD6B,eAAzB,C;;;;;;;;;;;;;;;;;;;wBAOAO,I;;;;;;;mDAEAV,mBAASC,OAAT,CAAiBU,MAAjB,CAAwBD,IAAxB,C;;;;;;;;;;;;;;;;;;;2BAMGP,E,EAAIO,I;;;;;;;;mDAELV,mBAASC,OAAT,CAAiBW,OAAjB,CAAyB;AACtCH,gBAAAA,KAAK,EAAE;AAAEN,kBAAAA,EAAE,EAAFA;AAAF;AAD+B,eAAzB,C;;;AAAXU,cAAAA,E;;mBAGAA,E;;;;;;mDACIb,mBAASC,OAAT,CAAiBa,MAAjB,CAAwBJ,IAAxB,EAA8B;AAClCD,gBAAAA,KAAK,EAAE;AAAEN,kBAAAA,EAAE,EAAFA;AAAF;AAD2B,eAA9B,C;;;gDAGCO,I;;;gDAEF,I;;;;;;;;;;;;;;;;;;eASEX,c",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services",
      "sourcesContent": [
        "import database from \"../../Model/models\";\r\n\r\nclass phanhoiService {\r\n  static async getAll() {\r\n    try {\r\n      return await database.phanhoi.findAll();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  static async getByID(id) {\r\n    try {\r\n      let id_khoahoc = await database.khoahoc.sequelize.query(\r\n        `SELECT phanhois.*, taikhoans.tentaikhoan, diendans.id , taikhoans.hinhanh\r\n         FROM public.phanhois,public.diendans, public.taikhoans  \r\n         where phanhois.id_tktraloi = taikhoans.id and phanhois.id_diendan = diendans.id and phanhois.id_diendan = ` + id + ` `\r\n      );      \r\n      return id_khoahoc;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async delete(id) {\r\n    try {\r\n      return await database.phanhoi.destroy({\r\n        where: { id }\r\n      });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  static async add(data) {\r\n    try {        \r\n      return await database.phanhoi.create(data);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async Update(id, data) {\r\n    try {\r\n      let tk = await database.phanhoi.findOne({\r\n        where: { id }\r\n      });\r\n      if (tk) {\r\n        await database.phanhoi.update(data, {\r\n          where: { id }\r\n        });\r\n        return data;\r\n      }\r\n      return null;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n \r\n}\r\n\r\nexport default phanhoiService;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1584623672469
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\\\\outsite\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\\\\outsite\\\\dangKyOusiteR.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\outsite",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\outsite\\dangKyOusiteR.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\outsite\\dangKyOusiteR.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\outsite\\dangKyOusiteR.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\outsite",
        "sourceFileName": "dangKyOusiteR.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _express = require(\"express\");\n\nvar _dangKyOutsiteC = _interopRequireDefault(require(\"../../controllers/outsite/dangKyOutsiteC\"));\n\nvar router = (0, _express.Router)();\nrouter.route(\"/register\").get(_dangKyOutsiteC[\"default\"].getAll).post(_dangKyOutsiteC[\"default\"].add); // =================== dang ky outsite ============== captcha==============\n// router.post('/subscribe', async (req, res) => {\n//   if (!req.body.captcha)\n//    { return res.json({ success: false, msg: 'Please select captcha' }) }\n//   // Secret key\n//   const secretKey = '6LfWmNgUAAAAAByejHVatp1JvpJtRNccgNjzGeSx';\n//   const verifyURL = \"https://www.google.com/recaptcha/api/siteverify?secret=\" + secretKey + \"&response=\" + req.body.captcha + \"&remoteip=\" + req.connection.remoteAddress;\n//   // Make a request to verifyURL\n//   const body = await fetch(verifyURL).then(res => res.json());  \n//   // If not successful\n//   if (body.success !== undefined && !body.success)\n//     return res.json({ success: false, msg: 'Failed captcha verification' });\n//   // If successful\n//   return res.json({ success: true, msg: 'Xác thực thành công !!' });\n// }); \n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhbmdLeU91c2l0ZVIuanMiXSwibmFtZXMiOlsicm91dGVyIiwicm91dGUiLCJnZXQiLCJkYW5nS3lDb250cm9sbGVyIiwiZ2V0QWxsIiwicG9zdCIsImFkZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFDQTs7QUFFQSxJQUFNQSxNQUFNLEdBQUcsc0JBQWY7QUFFQUEsTUFBTSxDQUNIQyxLQURILENBQ1MsV0FEVCxFQUVHQyxHQUZILENBRU9DLDJCQUFpQkMsTUFGeEIsRUFHR0MsSUFISCxDQUdRRiwyQkFBaUJHLEdBSHpCLEUsQ0FPQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7O0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlIsTUFBakIiLCJzb3VyY2VSb290IjoiRDpcXEx1YW5WYW5cXEx1YW5WYW5EMlxcdHJ1bmd0YW1fbGFuNFxcYXBwc1xccm91dGVyc1xcb3V0c2l0ZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gXCJleHByZXNzXCI7XHJcbmltcG9ydCBkYW5nS3lDb250cm9sbGVyIGZyb20gXCIuLi8uLi9jb250cm9sbGVycy9vdXRzaXRlL2RhbmdLeU91dHNpdGVDXCI7XHJcblxyXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKTtcclxuXHJcbnJvdXRlclxyXG4gIC5yb3V0ZShcIi9yZWdpc3RlclwiKVxyXG4gIC5nZXQoZGFuZ0t5Q29udHJvbGxlci5nZXRBbGwpXHJcbiAgLnBvc3QoZGFuZ0t5Q29udHJvbGxlci5hZGQpO1xyXG5cclxuICBcclxuIFxyXG4vLyA9PT09PT09PT09PT09PT09PT09IGRhbmcga3kgb3V0c2l0ZSA9PT09PT09PT09PT09PSBjYXB0Y2hhPT09PT09PT09PT09PT1cclxuXHJcbi8vIHJvdXRlci5wb3N0KCcvc3Vic2NyaWJlJywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbiAgXHJcbi8vICAgaWYgKCFyZXEuYm9keS5jYXB0Y2hhKVxyXG4vLyAgICB7IHJldHVybiByZXMuanNvbih7IHN1Y2Nlc3M6IGZhbHNlLCBtc2c6ICdQbGVhc2Ugc2VsZWN0IGNhcHRjaGEnIH0pIH1cclxuLy8gICAvLyBTZWNyZXQga2V5XHJcbi8vICAgY29uc3Qgc2VjcmV0S2V5ID0gJzZMZldtTmdVQUFBQUFCeWVqSFZhdHAxSnZwSnRSTmNjZ05qekdlU3gnO1xyXG4vLyAgIGNvbnN0IHZlcmlmeVVSTCA9IFwiaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9yZWNhcHRjaGEvYXBpL3NpdGV2ZXJpZnk/c2VjcmV0PVwiICsgc2VjcmV0S2V5ICsgXCImcmVzcG9uc2U9XCIgKyByZXEuYm9keS5jYXB0Y2hhICsgXCImcmVtb3RlaXA9XCIgKyByZXEuY29ubmVjdGlvbi5yZW1vdGVBZGRyZXNzO1xyXG4vLyAgIC8vIE1ha2UgYSByZXF1ZXN0IHRvIHZlcmlmeVVSTFxyXG4vLyAgIGNvbnN0IGJvZHkgPSBhd2FpdCBmZXRjaCh2ZXJpZnlVUkwpLnRoZW4ocmVzID0+IHJlcy5qc29uKCkpOyAgXHJcbi8vICAgLy8gSWYgbm90IHN1Y2Nlc3NmdWxcclxuLy8gICBpZiAoYm9keS5zdWNjZXNzICE9PSB1bmRlZmluZWQgJiYgIWJvZHkuc3VjY2VzcylcclxuLy8gICAgIHJldHVybiByZXMuanNvbih7IHN1Y2Nlc3M6IGZhbHNlLCBtc2c6ICdGYWlsZWQgY2FwdGNoYSB2ZXJpZmljYXRpb24nIH0pO1xyXG4vLyAgIC8vIElmIHN1Y2Nlc3NmdWxcclxuLy8gICByZXR1cm4gcmVzLmpzb24oeyBzdWNjZXNzOiB0cnVlLCBtc2c6ICdYw6FjIHRo4buxYyB0aMOgbmggY8O0bmcgISEnIH0pO1xyXG4gIFxyXG5cclxuXHJcbi8vIH0pOyBcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "dangKyOusiteR.js"
      ],
      "names": [
        "router",
        "route",
        "get",
        "dangKyController",
        "getAll",
        "post",
        "add",
        "module",
        "exports"
      ],
      "mappings": ";;;;AAAA;;AACA;;AAEA,IAAMA,MAAM,GAAG,sBAAf;AAEAA,MAAM,CACHC,KADH,CACS,WADT,EAEGC,GAFH,CAEOC,2BAAiBC,MAFxB,EAGGC,IAHH,CAGQF,2BAAiBG,GAHzB,E,CAOA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;AAEAC,MAAM,CAACC,OAAP,GAAiBR,MAAjB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\outsite",
      "sourcesContent": [
        "import { Router } from \"express\";\r\nimport dangKyController from \"../../controllers/outsite/dangKyOutsiteC\";\r\n\r\nconst router = Router();\r\n\r\nrouter\r\n  .route(\"/register\")\r\n  .get(dangKyController.getAll)\r\n  .post(dangKyController.add);\r\n\r\n  \r\n \r\n// =================== dang ky outsite ============== captcha==============\r\n\r\n// router.post('/subscribe', async (req, res) => {\r\n  \r\n//   if (!req.body.captcha)\r\n//    { return res.json({ success: false, msg: 'Please select captcha' }) }\r\n//   // Secret key\r\n//   const secretKey = '6LfWmNgUAAAAAByejHVatp1JvpJtRNccgNjzGeSx';\r\n//   const verifyURL = \"https://www.google.com/recaptcha/api/siteverify?secret=\" + secretKey + \"&response=\" + req.body.captcha + \"&remoteip=\" + req.connection.remoteAddress;\r\n//   // Make a request to verifyURL\r\n//   const body = await fetch(verifyURL).then(res => res.json());  \r\n//   // If not successful\r\n//   if (body.success !== undefined && !body.success)\r\n//     return res.json({ success: false, msg: 'Failed captcha verification' });\r\n//   // If successful\r\n//   return res.json({ success: true, msg: 'Xác thực thành công !!' });\r\n  \r\n\r\n\r\n// }); \r\n\r\nmodule.exports = router;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1583508044383
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\\\\outsite\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\\\\outsite\\\\dangKyOutsiteC.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite\\dangKyOutsiteC.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite\\dangKyOutsiteC.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite\\dangKyOutsiteC.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite",
        "sourceFileName": "dangKyOutsiteC.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _sDate = _interopRequireDefault(require(\"s-date\"));\n\nvar _nodeFetch = _interopRequireDefault(require(\"node-fetch\"));\n\nvar _dangkyService = _interopRequireDefault(require(\"../../services/dangkyService\"));\n\nvar _lopHocService = _interopRequireDefault(require(\"../../services/lopHocService\"));\n\nvar _baivietService = _interopRequireDefault(require(\"../../services/baivietService\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar dangkyController =\n/*#__PURE__*/\nfunction () {\n  function dangkyController() {\n    (0, _classCallCheck2[\"default\"])(this, dangkyController);\n  }\n\n  (0, _createClass2[\"default\"])(dangkyController, null, [{\n    key: \"getAll\",\n    value: function getAll(req, res) {\n      var user, lophoc, baiviet;\n      return _regenerator[\"default\"].async(function getAll$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              user = [];\n\n              if (req.session.user) {\n                user = req.session.user;\n              }\n\n              _context.next = 5;\n              return _regenerator[\"default\"].awrap(_lopHocService[\"default\"].getsapmo());\n\n            case 5:\n              lophoc = _context.sent;\n              _context.next = 8;\n              return _regenerator[\"default\"].awrap(_baivietService[\"default\"].getNew());\n\n            case 8:\n              baiviet = _context.sent;\n\n              if (lophoc.length > 0) {\n                res.render(\"../views/outsite/dangky.ejs\", {\n                  lophoc: lophoc,\n                  user: user,\n                  baiviet: baiviet,\n                  date: _sDate[\"default\"],\n                  message: 1\n                });\n              } else {\n                res.render(\"../views/outsite/dangky.ejs\", {\n                  lophoc: lophoc,\n                  user: user,\n                  baiviet: baiviet,\n                  date: _sDate[\"default\"],\n                  message: 0\n                });\n              }\n\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              return _context.abrupt(\"return\", _context.t0);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 12]]);\n    }\n  }, {\n    key: \"Delete\",\n    value: function Delete(req, res) {\n      var id, Xoa;\n      return _regenerator[\"default\"].async(function Delete$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!req.session.user) {\n                _context2.next = 18;\n                break;\n              }\n\n              id = req.params.id;\n\n              if (Number(id)) {\n                _context2.next = 5;\n                break;\n              }\n\n              res.redirect(\"/admin/dangky\");\n              return _context2.abrupt(\"return\");\n\n            case 5:\n              _context2.prev = 5;\n              _context2.next = 8;\n              return _regenerator[\"default\"].awrap(_dangkyService[\"default\"][\"delete\"](id));\n\n            case 8:\n              Xoa = _context2.sent;\n\n              if (Xoa) {\n                res.redirect(\"/admin/dangky\");\n              } else {\n                res.redirect(\"/admin/dangky\");\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 13:\n              _context2.prev = 13;\n              _context2.t0 = _context2[\"catch\"](5);\n              return _context2.abrupt(\"return\", _context2.t0);\n\n            case 16:\n              _context2.next = 19;\n              break;\n\n            case 18:\n              return _context2.abrupt(\"return\", res.redirect('/'));\n\n            case 19:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[5, 13]]);\n    }\n  }, {\n    key: \"add\",\n    value: function add(req, res) {\n      var secretKey, verifyURL, body, thanhtoan, trangthai, _req$body, tenkhachhang, sdt, email, diachi, id_lophoc, data, created;\n\n      return _regenerator[\"default\"].async(function add$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n\n              if (req.body.captcha) {\n                _context3.next = 3;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", res.json({\n                success: false,\n                msg: 'Please select captcha'\n              }));\n\n            case 3:\n              // Secret key\n              secretKey = '6LfWmNgUAAAAAByejHVatp1JvpJtRNccgNjzGeSx';\n              verifyURL = \"https://www.google.com/recaptcha/api/siteverify?secret=\" + secretKey + \"&response=\" + req.body.captcha + \"&remoteip=\" + req.connection.remoteAddress; // Make a request to verifyURL\n\n              _context3.next = 7;\n              return _regenerator[\"default\"].awrap((0, _nodeFetch[\"default\"])(verifyURL).then(function (res) {\n                return res.json();\n              }));\n\n            case 7:\n              body = _context3.sent;\n\n              if (!(body.success !== undefined && !body.success)) {\n                _context3.next = 10;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", res.json({\n                success: false,\n                msg: 'Failed captcha verification'\n              }));\n\n            case 10:\n              // If successful   \n              // ============end captcha=================    \n              thanhtoan = 0;\n              trangthai = 1;\n              _req$body = req.body, tenkhachhang = _req$body.tenkhachhang, sdt = _req$body.sdt, email = _req$body.email, diachi = _req$body.diachi, id_lophoc = _req$body.id_lophoc;\n              _context3.next = 15;\n              return _regenerator[\"default\"].awrap({\n                tenkhachhang: tenkhachhang,\n                sdt: sdt,\n                diachi: diachi,\n                email: email,\n                id_lophoc: id_lophoc,\n                thanhtoan: thanhtoan,\n                trangthai: trangthai\n              });\n\n            case 15:\n              data = _context3.sent;\n              _context3.next = 18;\n              return _regenerator[\"default\"].awrap(_dangkyService[\"default\"].add(data));\n\n            case 18:\n              created = _context3.sent;\n\n              if (created == null) {\n                // res.redirect(\"/register?kq=0&mes=Đăng ký thất bại !!!\");\n                res.json({\n                  success: false,\n                  msg: 'Đăng ký không thành công !!'\n                });\n              } else {\n                // res.redirect(\"/register?kq=1&mes=Đăng ký thành công !!!\");\n                res.json({\n                  success: true,\n                  msg: 'Đăng ký thành công !!'\n                });\n              }\n\n              _context3.next = 25;\n              break;\n\n            case 22:\n              _context3.prev = 22;\n              _context3.t0 = _context3[\"catch\"](0);\n              return _context3.abrupt(\"return\", _context3.t0);\n\n            case 25:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 22]]);\n    }\n  }, {\n    key: \"update\",\n    value: function update(req, res) {\n      var thanhtoan, altered, id, update;\n      return _regenerator[\"default\"].async(function update$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              thanhtoan = req.body.thanhtoan;\n\n              if (thanhtoan == \"\") {\n                thanhtoan = 0;\n              }\n\n              _context4.next = 4;\n              return _regenerator[\"default\"].awrap(_objectSpread({}, req.body, {\n                thanhtoan: thanhtoan\n              }));\n\n            case 4:\n              altered = _context4.sent;\n              id = req.params.id;\n              _context4.prev = 6;\n              _context4.next = 9;\n              return _regenerator[\"default\"].awrap(_dangkyService[\"default\"].Update(id, altered));\n\n            case 9:\n              update = _context4.sent;\n\n              if (!update) {\n                res.redirect(\"/admin/dangky\");\n              } else {\n                res.redirect(\"/admin/dangky\");\n              }\n\n              res.redirect(\"/admin/dangky\");\n              _context4.next = 17;\n              break;\n\n            case 14:\n              _context4.prev = 14;\n              _context4.t0 = _context4[\"catch\"](6);\n              return _context4.abrupt(\"return\", _context4.t0);\n\n            case 17:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[6, 14]]);\n    }\n  }]);\n  return dangkyController;\n}();\n\nvar _default = dangkyController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "dangKyOutsiteC.js"
      ],
      "names": [
        "dangkyController",
        "req",
        "res",
        "user",
        "session",
        "lopHocService",
        "getsapmo",
        "lophoc",
        "baivietService",
        "getNew",
        "baiviet",
        "length",
        "render",
        "date",
        "message",
        "id",
        "params",
        "Number",
        "redirect",
        "dangkyService",
        "Xoa",
        "body",
        "captcha",
        "json",
        "success",
        "msg",
        "secretKey",
        "verifyURL",
        "connection",
        "remoteAddress",
        "then",
        "undefined",
        "thanhtoan",
        "trangthai",
        "tenkhachhang",
        "sdt",
        "email",
        "diachi",
        "id_lophoc",
        "data",
        "add",
        "created",
        "altered",
        "Update",
        "update"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;AAAA;;AACA;;AAGA;;AACA;;AACA;;;;;;IAEMA,gB;;;;;;;;;2BACgBC,G,EAAKC,G;;;;;;;AAEjBC,cAAAA,I,GAAO,E;;AACX,kBAAGF,GAAG,CAACG,OAAJ,CAAYD,IAAf,EAAoB;AAClBA,gBAAAA,IAAI,GAAGF,GAAG,CAACG,OAAJ,CAAYD,IAAnB;AACD;;;mDACoBE,0BAAcC,QAAd,E;;;AAAfC,cAAAA,M;;mDACgBC,2BAAeC,MAAf,E;;;AAAhBC,cAAAA,O;;AACN,kBAAIH,MAAM,CAACI,MAAP,GAAgB,CAApB,EAAuB;AACrBT,gBAAAA,GAAG,CAACU,MAAJ,CAAW,6BAAX,EAA0C;AACxCL,kBAAAA,MAAM,EAANA,MADwC;AAChCJ,kBAAAA,IAAI,EAAJA,IADgC;AAC3BO,kBAAAA,OAAO,EAAPA,OAD2B;AAExCG,kBAAAA,IAAI,EAAJA,iBAFwC;AAGxCC,kBAAAA,OAAO,EAAE;AAH+B,iBAA1C;AAKD,eAND,MAMO;AACLZ,gBAAAA,GAAG,CAACU,MAAJ,CAAW,6BAAX,EAA0C;AACxCL,kBAAAA,MAAM,EAANA,MADwC;AAChCJ,kBAAAA,IAAI,EAAJA,IADgC;AAC3BO,kBAAAA,OAAO,EAAPA,OAD2B;AAExCG,kBAAAA,IAAI,EAAJA,iBAFwC;AAGxCC,kBAAAA,OAAO,EAAE;AAH+B,iBAA1C;AAKD;;;;;;;;;;;;;;;;;;;2BAOeb,G,EAAKC,G;;;;;;mBACpBD,GAAG,CAACG,OAAJ,CAAYD,I;;;;;AACTY,cAAAA,E,GAAOd,GAAG,CAACe,M,CAAXD,E;;kBACDE,MAAM,CAACF,EAAD,C;;;;;AACTb,cAAAA,GAAG,CAACgB,QAAJ,CAAa,eAAb;;;;;;mDAIgBC,oCAAqBJ,EAArB,C;;;AAAZK,cAAAA,G;;AACJ,kBAAIA,GAAJ,EAAS;AACPlB,gBAAAA,GAAG,CAACgB,QAAJ,CAAa,eAAb;AACD,eAFD,MAEO;AACLhB,gBAAAA,GAAG,CAACgB,QAAJ,CAAa,eAAb;AACD;;;;;;;;;;;;;;gDAKShB,GAAG,CAACgB,QAAJ,CAAa,GAAb,C;;;;;;;;;;;wBAGGjB,G,EAAKC,G;;;;;;;;;kBAGfD,GAAG,CAACoB,IAAJ,CAASC,O;;;;;gDACLpB,GAAG,CAACqB,IAAJ,CAAS;AAAEC,gBAAAA,OAAO,EAAE,KAAX;AAAkBC,gBAAAA,GAAG,EAAE;AAAvB,eAAT,C;;;AACV;AACMC,cAAAA,S,GAAY,0C;AACZC,cAAAA,S,GAAY,4DAA4DD,SAA5D,GAAwE,YAAxE,GAAuFzB,GAAG,CAACoB,IAAJ,CAASC,OAAhG,GAA0G,YAA1G,GAAyHrB,GAAG,CAAC2B,UAAJ,CAAeC,a,EAC1J;;;mDACmB,2BAAMF,SAAN,EAAiBG,IAAjB,CAAsB,UAAA5B,GAAG;AAAA,uBAAIA,GAAG,CAACqB,IAAJ,EAAJ;AAAA,eAAzB,C;;;AAAbF,cAAAA,I;;oBAEFA,IAAI,CAACG,OAAL,KAAiBO,SAAjB,IAA8B,CAACV,IAAI,CAACG,O;;;;;gDAC/BtB,GAAG,CAACqB,IAAJ,CAAS;AAAEC,gBAAAA,OAAO,EAAE,KAAX;AAAkBC,gBAAAA,GAAG,EAAE;AAAvB,eAAT,C;;;AACT;AACC;AACIO,cAAAA,S,GAAY,C;AACZC,cAAAA,S,GAAY,C;0BACqChC,GAAG,CAACoB,I,EAAnDa,Y,aAAAA,Y,EAAcC,G,aAAAA,G,EAAKC,K,aAAAA,K,EAAOC,M,aAAAA,M,EAAOC,S,aAAAA,S;;mDACtB;AAAEJ,gBAAAA,YAAY,EAAZA,YAAF;AAAgBC,gBAAAA,GAAG,EAAHA,GAAhB;AAAqBE,gBAAAA,MAAM,EAANA,MAArB;AAA6BD,gBAAAA,KAAK,EAALA,KAA7B;AAAmCE,gBAAAA,SAAS,EAATA,SAAnC;AAA8CN,gBAAAA,SAAS,EAATA,SAA9C;AAAwDC,gBAAAA,SAAS,EAATA;AAAxD,e;;;AAAbM,cAAAA,I;;mDACoBpB,0BAAcqB,GAAd,CAAkBD,IAAlB,C;;;AAAhBE,cAAAA,O;;AACN,kBAAIA,OAAO,IAAI,IAAf,EAAsB;AACrB;AACEvC,gBAAAA,GAAG,CAACqB,IAAJ,CAAS;AAAEC,kBAAAA,OAAO,EAAE,KAAX;AAAkBC,kBAAAA,GAAG,EAAE;AAAvB,iBAAT;AACF,eAHD,MAGO;AACN;AACEvB,gBAAAA,GAAG,CAACqB,IAAJ,CAAS;AAAEC,kBAAAA,OAAO,EAAE,IAAX;AAAiBC,kBAAAA,GAAG,EAAE;AAAtB,iBAAT;AACF;;;;;;;;;;;;;;;;;;;2BAMexB,G,EAAKC,G;;;;;;AACnB8B,cAAAA,S,GAAY/B,GAAG,CAACoB,IAAJ,CAASW,S;;AACzB,kBAAIA,SAAS,IAAI,EAAjB,EAAqB;AACnBA,gBAAAA,SAAS,GAAG,CAAZ;AACD;;;qEACwB/B,GAAG,CAACoB,I;AAAMW,gBAAAA,SAAS,EAATA;;;;AAA/BU,cAAAA,O;AACI3B,cAAAA,E,GAAOd,GAAG,CAACe,M,CAAXD,E;;;mDAEeI,0BAAcwB,MAAd,CAAqB5B,EAArB,EAAyB2B,OAAzB,C;;;AAAfE,cAAAA,M;;AACN,kBAAI,CAACA,MAAL,EAAa;AACX1C,gBAAAA,GAAG,CAACgB,QAAJ,CAAa,eAAb;AACD,eAFD,MAEO;AACLhB,gBAAAA,GAAG,CAACgB,QAAJ,CAAa,eAAb;AACD;;AACDhB,cAAAA,GAAG,CAACgB,QAAJ,CAAa,eAAb;;;;;;;;;;;;;;;;;;;;eASSlB,gB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite",
      "sourcesContent": [
        "import date from \"s-date\";\r\nimport fetch from \"node-fetch\"\r\nimport stringify from \"node-fetch\"\r\n\r\nimport dangkyService from \"../../services/dangkyService\";\r\nimport lopHocService from \"../../services/lopHocService\";\r\nimport baivietService from \"../../services/baivietService\";\r\n\r\nclass dangkyController {\r\n  static async getAll(req, res) {   \r\n    try {     \r\n      let user = []\r\n      if(req.session.user){\r\n        user = req.session.user\r\n      }     \r\n      const lophoc = await lopHocService.getsapmo();\r\n      const baiviet = await baivietService.getNew();\r\n      if (lophoc.length > 0) {\r\n        res.render(\"../views/outsite/dangky.ejs\", {        \r\n          lophoc, user,baiviet,\r\n          date,\r\n          message: 1\r\n        });\r\n      } else {\r\n        res.render(\"../views/outsite/dangky.ejs\", {         \r\n          lophoc, user,baiviet,\r\n          date,\r\n          message: 0\r\n        });\r\n      }\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  \r\n  }\r\n\r\n  static async Delete(req, res) {   \r\n    if(req.session.user){\r\n    let { id } = req.params;\r\n    if (!Number(id)) {\r\n      res.redirect(\"/admin/dangky\");\r\n      return; //util.send(res);\r\n    }\r\n    try {\r\n      let Xoa = await dangkyService.delete(id);\r\n      if (Xoa) {\r\n        res.redirect(\"/admin/dangky\");\r\n      } else {\r\n        res.redirect(\"/admin/dangky\");\r\n      }\r\n      return;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }else{ return res.redirect('/') }\r\n  }\r\n\r\n  static async add(req, res) {      \r\n    try {\r\n      // =captcha==============      \r\n    if (!req.body.captcha)\r\n    { return res.json({ success: false, msg: 'Please select captcha' }) }\r\n   // Secret key\r\n   const secretKey = '6LfWmNgUAAAAAByejHVatp1JvpJtRNccgNjzGeSx';\r\n   const verifyURL = \"https://www.google.com/recaptcha/api/siteverify?secret=\" + secretKey + \"&response=\" + req.body.captcha + \"&remoteip=\" + req.connection.remoteAddress;\r\n   // Make a request to verifyURL\r\n   const body = await fetch(verifyURL).then(res => res.json());  \r\n   // If not successful\r\n   if (body.success !== undefined && !body.success)\r\n     return res.json({ success: false, msg: 'Failed captcha verification' });\r\n   // If successful   \r\n    // ============end captcha=================    \r\n    let thanhtoan = 0;     \r\n    let trangthai = 1;     \r\n    let { tenkhachhang, sdt, email, diachi,id_lophoc} =  req.body    \r\n    let data = await { tenkhachhang, sdt, diachi, email,id_lophoc, thanhtoan,trangthai };   \r\n      const created = await dangkyService.add(data);     \r\n      if (created == null ) {\r\n       // res.redirect(\"/register?kq=0&mes=Đăng ký thất bại !!!\");\r\n         res.json({ success: false, msg: 'Đăng ký không thành công !!' });\r\n      } else {        \r\n       // res.redirect(\"/register?kq=1&mes=Đăng ký thành công !!!\");\r\n         res.json({ success: true, msg: 'Đăng ký thành công !!' });\r\n      }\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  static async update(req, res) {\r\n    let thanhtoan = req.body.thanhtoan;\r\n    if (thanhtoan == \"\") {\r\n      thanhtoan = 0;\r\n    }\r\n    let altered = await { ...req.body, thanhtoan };\r\n    const { id } = req.params;\r\n    try {\r\n      const update = await dangkyService.Update(id, altered);\r\n      if (!update) {\r\n        res.redirect(\"/admin/dangky\");\r\n      } else {\r\n        res.redirect(\"/admin/dangky\");\r\n      }\r\n      res.redirect(\"/admin/dangky\");\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default dangkyController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1587478487678
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\services\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\services\\\\dangkyService.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services\\dangkyService.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services\\dangkyService.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services\\dangkyService.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services",
        "sourceFileName": "dangkyService.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _models = _interopRequireDefault(require(\"../../Model/models\"));\n\nvar dangkyService =\n/*#__PURE__*/\nfunction () {\n  function dangkyService() {\n    (0, _classCallCheck2[\"default\"])(this, dangkyService);\n  }\n\n  (0, _createClass2[\"default\"])(dangkyService, null, [{\n    key: \"getAll\",\n    value: function getAll() {\n      return _regenerator[\"default\"].async(function getAll$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].dangky.sequelize.query(\"SELECT  lophocs.tenlophoc,lophocs.thoigianhoc, lophocs.phidichvu , dangkies.* \\n        FROM public.lophocs,public.dangkies \\n        where lophocs.id = dangkies.id_lophoc \\n        ORDER BY id DESC  \"));\n\n            case 3:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              throw _context.t0;\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"getByID\",\n    value: function getByID(id) {\n      return _regenerator[\"default\"].async(function getByID$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].dangky.findAll({\n                where: {\n                  id: id\n                }\n              }));\n\n            case 3:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              throw _context2.t0;\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"getByIDLop\",\n    value: function getByIDLop(id) {\n      return _regenerator[\"default\"].async(function getByIDLop$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].dangky.findAll({\n                where: {\n                  id_lophoc: id\n                }\n              }));\n\n            case 3:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 6:\n              _context3.prev = 6;\n              _context3.t0 = _context3[\"catch\"](0);\n              throw _context3.t0;\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(id) {\n      return _regenerator[\"default\"].async(function _delete$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].dangky.destroy({\n                where: {\n                  id: id\n                }\n              }));\n\n            case 3:\n              return _context4.abrupt(\"return\", _context4.sent);\n\n            case 6:\n              _context4.prev = 6;\n              _context4.t0 = _context4[\"catch\"](0);\n              throw _context4.t0;\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"Save\",\n    value: function Save(data) {\n      return _regenerator[\"default\"].async(function Save$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].dangky.create(data));\n\n            case 3:\n              return _context5.abrupt(\"return\", _context5.sent);\n\n            case 6:\n              _context5.prev = 6;\n              _context5.t0 = _context5[\"catch\"](0);\n              throw _context5.t0;\n\n            case 9:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"Update\",\n    value: function Update(id, data) {\n      var tk;\n      return _regenerator[\"default\"].async(function Update$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].dangky.findOne({\n                where: {\n                  id: id\n                }\n              }));\n\n            case 3:\n              tk = _context6.sent;\n\n              if (!tk) {\n                _context6.next = 10;\n                break;\n              }\n\n              _context6.next = 7;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].dangky.update(data, {\n                where: {\n                  id: id\n                }\n              }));\n\n            case 7:\n              return _context6.abrupt(\"return\", _context6.sent);\n\n            case 10:\n              return _context6.abrupt(\"return\", null);\n\n            case 11:\n              _context6.next = 16;\n              break;\n\n            case 13:\n              _context6.prev = 13;\n              _context6.t0 = _context6[\"catch\"](0);\n              throw _context6.t0;\n\n            case 16:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[0, 13]]);\n    }\n  }, {\n    key: \"add\",\n    value: function add(data) {\n      return _regenerator[\"default\"].async(function add$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _context7.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].dangky.create(data));\n\n            case 3:\n              return _context7.abrupt(\"return\", _context7.sent);\n\n            case 6:\n              _context7.prev = 6;\n              _context7.t0 = _context7[\"catch\"](0);\n              throw _context7.t0;\n\n            case 9:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    } // Sử dụng học viên \n\n  }, {\n    key: \"getAllHV\",\n    value: function getAllHV() {\n      return _regenerator[\"default\"].async(function getAllHV$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              _context8.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].dangky.sequelize.query(\"select lophocs.tenlophoc,lophocs.thoigianbatdau,lophocs.phidichvu , dangkies.* \\n        from public.lophocs, public.dangkies \\n        where dangkies.id_lophoc = lophocs.id and (dangkies.thanhtoan > lophocs.phidichvu/2) \\n        ORDER BY id DESC  \"));\n\n            case 3:\n              return _context8.abrupt(\"return\", _context8.sent);\n\n            case 6:\n              _context8.prev = 6;\n              _context8.t0 = _context8[\"catch\"](0);\n              throw _context8.t0;\n\n            case 9:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    } // Thống kê\n\n  }, {\n    key: \"thongke\",\n    value: function thongke() {\n      return _regenerator[\"default\"].async(function thongke$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.prev = 0;\n              _context9.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].dangky.sequelize.query(\"SELECT dangkies.id_lophoc , lophocs.tenlophoc , count(id_lophoc) AS dem FROM public.dangkies, public.lophocs\\n        Where lophocs.id = dangkies.id_lophoc\\n        GROUP BY dangkies.id_lophoc, lophocs.tenlophoc ORDER BY dem DESC; \"));\n\n            case 3:\n              return _context9.abrupt(\"return\", _context9.sent);\n\n            case 6:\n              _context9.prev = 6;\n              _context9.t0 = _context9[\"catch\"](0);\n              throw _context9.t0;\n\n            case 9:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"Tongthongke\",\n    value: function Tongthongke() {\n      return _regenerator[\"default\"].async(function Tongthongke$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.prev = 0;\n              _context10.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].dangky.sequelize.query(\"SELECT  SUM(dem) as tong \\n        FROM (SELECT COUNT(id_lophoc) AS dem\\n        FROM public.dangkies, public.lophocs \\n             Where lophocs.id = dangkies.id_lophoc\\n        GROUP BY id_lophoc\\n        ) as A \"));\n\n            case 3:\n              return _context10.abrupt(\"return\", _context10.sent);\n\n            case 6:\n              _context10.prev = 6;\n              _context10.t0 = _context10[\"catch\"](0);\n              throw _context10.t0;\n\n            case 9:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"TongthongkeThu\",\n    value: function TongthongkeThu() {\n      return _regenerator[\"default\"].async(function TongthongkeThu$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.prev = 0;\n              _context11.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].dangky.sequelize.query(\"select sum(thanhtoan) as tong from dangkies\"));\n\n            case 3:\n              return _context11.abrupt(\"return\", _context11.sent);\n\n            case 6:\n              _context11.prev = 6;\n              _context11.t0 = _context11[\"catch\"](0);\n              throw _context11.t0;\n\n            case 9:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"ThongkeThu\",\n    value: function ThongkeThu() {\n      return _regenerator[\"default\"].async(function ThongkeThu$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              _context12.prev = 0;\n              _context12.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].dangky.sequelize.query(\" SELECT lophocs.tenlophoc , SUM(thanhtoan) AS dem\\n        FROM public.dangkies, public.lophocs \\n             Where lophocs.id = dangkies.id_lophoc\\n        GROUP BY id_lophoc , lophocs.tenlophoc\\n        \"));\n\n            case 3:\n              return _context12.abrupt(\"return\", _context12.sent);\n\n            case 6:\n              _context12.prev = 6;\n              _context12.t0 = _context12[\"catch\"](0);\n              throw _context12.t0;\n\n            case 9:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }]);\n  return dangkyService;\n}();\n\nvar _default = dangkyService;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhbmdreVNlcnZpY2UuanMiXSwibmFtZXMiOlsiZGFuZ2t5U2VydmljZSIsImRhdGFiYXNlIiwiZGFuZ2t5Iiwic2VxdWVsaXplIiwicXVlcnkiLCJpZCIsImZpbmRBbGwiLCJ3aGVyZSIsImlkX2xvcGhvYyIsImRlc3Ryb3kiLCJkYXRhIiwiY3JlYXRlIiwiZmluZE9uZSIsInRrIiwidXBkYXRlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7SUFFTUEsYTs7Ozs7Ozs7Ozs7Ozs7OzttREFHYUMsbUJBQVNDLE1BQVQsQ0FBZ0JDLFNBQWhCLENBQTBCQyxLQUExQiw0TTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs0QkFVSUMsRTs7Ozs7OzttREFFSkosbUJBQVNDLE1BQVQsQ0FBZ0JJLE9BQWhCLENBQXdCO0FBQ25DQyxnQkFBQUEsS0FBSyxFQUFFO0FBQUVGLGtCQUFBQSxFQUFFLEVBQUZBO0FBQUY7QUFENEIsZUFBeEIsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrQkFPT0EsRTs7Ozs7OzttREFFUEosbUJBQVNDLE1BQVQsQ0FBZ0JJLE9BQWhCLENBQXdCO0FBQ25DQyxnQkFBQUEsS0FBSyxFQUFFO0FBQUVDLGtCQUFBQSxTQUFTLEVBQUVIO0FBQWI7QUFENEIsZUFBeEIsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs0QkFRR0EsRTs7Ozs7OzttREFFSEosbUJBQVNDLE1BQVQsQ0FBZ0JPLE9BQWhCLENBQXdCO0FBQ25DRixnQkFBQUEsS0FBSyxFQUFFO0FBQUVGLGtCQUFBQSxFQUFFLEVBQUZBO0FBQUY7QUFENEIsZUFBeEIsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt5QkFPQ0ssSTs7Ozs7OzttREFFRFQsbUJBQVNDLE1BQVQsQ0FBZ0JTLE1BQWhCLENBQXVCRCxJQUF2QixDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OzJCQU1HTCxFLEVBQUlLLEk7Ozs7Ozs7O21EQUVMVCxtQkFBU0MsTUFBVCxDQUFnQlUsT0FBaEIsQ0FBd0I7QUFDckNMLGdCQUFBQSxLQUFLLEVBQUU7QUFBRUYsa0JBQUFBLEVBQUUsRUFBRkE7QUFBRjtBQUQ4QixlQUF4QixDOzs7QUFBWFEsY0FBQUEsRTs7bUJBSUFBLEU7Ozs7OzttREFDV1osbUJBQVNDLE1BQVQsQ0FBZ0JZLE1BQWhCLENBQXVCSixJQUF2QixFQUE2QjtBQUN4Q0gsZ0JBQUFBLEtBQUssRUFBRTtBQUFFRixrQkFBQUEsRUFBRSxFQUFFQTtBQUFOO0FBRGlDLGVBQTdCLEM7Ozs7OztnREFJTixJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt3QkFPSUssSTs7Ozs7OzttREFFQVQsbUJBQVNDLE1BQVQsQ0FBZ0JTLE1BQWhCLENBQXVCRCxJQUF2QixDOzs7Ozs7Ozs7Ozs7Ozs7O01BS2pCOzs7Ozs7Ozs7OzttREFHaUJULG1CQUFTQyxNQUFULENBQWdCQyxTQUFoQixDQUEwQkMsS0FBMUIsNlA7Ozs7Ozs7Ozs7Ozs7Ozs7TUFXakI7Ozs7Ozs7Ozs7O21EQUdpQkgsbUJBQVNDLE1BQVQsQ0FBZ0JDLFNBQWhCLENBQTBCQyxLQUExQiwyTzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7bURBWUFILG1CQUFTQyxNQUFULENBQWdCQyxTQUFoQixDQUEwQkMsS0FBMUIsMk47Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O21EQWNBSCxtQkFBU0MsTUFBVCxDQUFnQkMsU0FBaEIsQ0FBMEJDLEtBQTFCLCtDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzttREFTQUgsbUJBQVNDLE1BQVQsQ0FBZ0JDLFNBQWhCLENBQTBCQyxLQUExQixrTjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2VBYUpKLGEiLCJzb3VyY2VSb290IjoiRDpcXEx1YW5WYW5cXEx1YW5WYW5EMlxcdHJ1bmd0YW1fbGFuNFxcYXBwc1xcc2VydmljZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZGF0YWJhc2UgZnJvbSBcIi4uLy4uL01vZGVsL21vZGVsc1wiO1xyXG5cclxuY2xhc3MgZGFuZ2t5U2VydmljZSB7XHJcbiAgc3RhdGljIGFzeW5jIGdldEFsbCgpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgIHJldHVybiBhd2FpdCBkYXRhYmFzZS5kYW5na3kuc2VxdWVsaXplLnF1ZXJ5KFxyXG4gICAgICAgIGBTRUxFQ1QgIGxvcGhvY3MudGVubG9waG9jLGxvcGhvY3MudGhvaWdpYW5ob2MsIGxvcGhvY3MucGhpZGljaHZ1ICwgZGFuZ2tpZXMuKiBcclxuICAgICAgICBGUk9NIHB1YmxpYy5sb3Bob2NzLHB1YmxpYy5kYW5na2llcyBcclxuICAgICAgICB3aGVyZSBsb3Bob2NzLmlkID0gZGFuZ2tpZXMuaWRfbG9waG9jIFxyXG4gICAgICAgIE9SREVSIEJZIGlkIERFU0MgIGBcclxuICAgICAgKTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG4gIH1cclxuICBzdGF0aWMgYXN5bmMgZ2V0QnlJRChpZCkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgcmV0dXJuIGF3YWl0IGRhdGFiYXNlLmRhbmdreS5maW5kQWxsKHtcclxuICAgICAgICB3aGVyZTogeyBpZCB9XHJcbiAgICAgIH0pO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHN0YXRpYyBhc3luYyBnZXRCeUlETG9wKGlkKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICByZXR1cm4gYXdhaXQgZGF0YWJhc2UuZGFuZ2t5LmZpbmRBbGwoe1xyXG4gICAgICAgIHdoZXJlOiB7IGlkX2xvcGhvYzogaWQgfVxyXG4gICAgICB9KTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc3RhdGljIGFzeW5jIGRlbGV0ZShpZCkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgcmV0dXJuIGF3YWl0IGRhdGFiYXNlLmRhbmdreS5kZXN0cm95KHtcclxuICAgICAgICB3aGVyZTogeyBpZCB9XHJcbiAgICAgIH0pO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHN0YXRpYyBhc3luYyBTYXZlKGRhdGEpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgIHJldHVybiBhd2FpdCBkYXRhYmFzZS5kYW5na3kuY3JlYXRlKGRhdGEpO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgYXN5bmMgVXBkYXRlKGlkLCBkYXRhKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICBsZXQgdGsgPSBhd2FpdCBkYXRhYmFzZS5kYW5na3kuZmluZE9uZSh7XHJcbiAgICAgICAgd2hlcmU6IHsgaWQgfVxyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIGlmICh0aykge1xyXG4gICAgICAgIHJldHVybiBhd2FpdCBkYXRhYmFzZS5kYW5na3kudXBkYXRlKGRhdGEsIHtcclxuICAgICAgICAgIHdoZXJlOiB7IGlkOiBpZCB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgIH1cclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc3RhdGljIGFzeW5jIGFkZChkYXRhKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICByZXR1cm4gYXdhaXQgZGF0YWJhc2UuZGFuZ2t5LmNyZWF0ZShkYXRhKTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG4gIH1cclxuICAvLyBT4butIGThu6VuZyBo4buNYyB2acOqbiBcclxuICBzdGF0aWMgYXN5bmMgZ2V0QWxsSFYoKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICByZXR1cm4gYXdhaXQgZGF0YWJhc2UuZGFuZ2t5LnNlcXVlbGl6ZS5xdWVyeShcclxuICAgICAgICBgc2VsZWN0IGxvcGhvY3MudGVubG9waG9jLGxvcGhvY3MudGhvaWdpYW5iYXRkYXUsbG9waG9jcy5waGlkaWNodnUgLCBkYW5na2llcy4qIFxyXG4gICAgICAgIGZyb20gcHVibGljLmxvcGhvY3MsIHB1YmxpYy5kYW5na2llcyBcclxuICAgICAgICB3aGVyZSBkYW5na2llcy5pZF9sb3Bob2MgPSBsb3Bob2NzLmlkIGFuZCAoZGFuZ2tpZXMudGhhbmh0b2FuID4gbG9waG9jcy5waGlkaWNodnUvMikgXHJcbiAgICAgICAgT1JERVIgQlkgaWQgREVTQyAgYFxyXG4gICAgICApO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyBUaOG7kW5nIGvDqlxyXG4gIHN0YXRpYyBhc3luYyB0aG9uZ2tlKCkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgcmV0dXJuIGF3YWl0IGRhdGFiYXNlLmRhbmdreS5zZXF1ZWxpemUucXVlcnkoXHJcbiAgICAgICAgYFNFTEVDVCBkYW5na2llcy5pZF9sb3Bob2MgLCBsb3Bob2NzLnRlbmxvcGhvYyAsIGNvdW50KGlkX2xvcGhvYykgQVMgZGVtIEZST00gcHVibGljLmRhbmdraWVzLCBwdWJsaWMubG9waG9jc1xyXG4gICAgICAgIFdoZXJlIGxvcGhvY3MuaWQgPSBkYW5na2llcy5pZF9sb3Bob2NcclxuICAgICAgICBHUk9VUCBCWSBkYW5na2llcy5pZF9sb3Bob2MsIGxvcGhvY3MudGVubG9waG9jIE9SREVSIEJZIGRlbSBERVNDOyBgXHJcbiAgICAgICk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHN0YXRpYyBhc3luYyBUb25ndGhvbmdrZSgpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgIHJldHVybiBhd2FpdCBkYXRhYmFzZS5kYW5na3kuc2VxdWVsaXplLnF1ZXJ5KFxyXG4gICAgICAgIGBTRUxFQ1QgIFNVTShkZW0pIGFzIHRvbmcgXHJcbiAgICAgICAgRlJPTSAoU0VMRUNUIENPVU5UKGlkX2xvcGhvYykgQVMgZGVtXHJcbiAgICAgICAgRlJPTSBwdWJsaWMuZGFuZ2tpZXMsIHB1YmxpYy5sb3Bob2NzIFxyXG4gICAgICAgICAgICAgV2hlcmUgbG9waG9jcy5pZCA9IGRhbmdraWVzLmlkX2xvcGhvY1xyXG4gICAgICAgIEdST1VQIEJZIGlkX2xvcGhvY1xyXG4gICAgICAgICkgYXMgQSBgXHJcbiAgICAgICk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9XHJcbiAgc3RhdGljIGFzeW5jIFRvbmd0aG9uZ2tlVGh1KCkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgcmV0dXJuIGF3YWl0IGRhdGFiYXNlLmRhbmdreS5zZXF1ZWxpemUucXVlcnkoXHJcbiAgICAgICAgYHNlbGVjdCBzdW0odGhhbmh0b2FuKSBhcyB0b25nIGZyb20gZGFuZ2tpZXNgXHJcbiAgICAgICk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9XHJcbiAgc3RhdGljIGFzeW5jIFRob25na2VUaHUoKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICByZXR1cm4gYXdhaXQgZGF0YWJhc2UuZGFuZ2t5LnNlcXVlbGl6ZS5xdWVyeShcclxuICAgICAgICBgIFNFTEVDVCBsb3Bob2NzLnRlbmxvcGhvYyAsIFNVTSh0aGFuaHRvYW4pIEFTIGRlbVxyXG4gICAgICAgIEZST00gcHVibGljLmRhbmdraWVzLCBwdWJsaWMubG9waG9jcyBcclxuICAgICAgICAgICAgIFdoZXJlIGxvcGhvY3MuaWQgPSBkYW5na2llcy5pZF9sb3Bob2NcclxuICAgICAgICBHUk9VUCBCWSBpZF9sb3Bob2MgLCBsb3Bob2NzLnRlbmxvcGhvY1xyXG4gICAgICAgIGBcclxuICAgICAgKTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgZGFuZ2t5U2VydmljZTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "dangkyService.js"
      ],
      "names": [
        "dangkyService",
        "database",
        "dangky",
        "sequelize",
        "query",
        "id",
        "findAll",
        "where",
        "id_lophoc",
        "destroy",
        "data",
        "create",
        "findOne",
        "tk",
        "update"
      ],
      "mappings": ";;;;;;;;;;;;;;;AAAA;;IAEMA,a;;;;;;;;;;;;;;;;mDAGaC,mBAASC,MAAT,CAAgBC,SAAhB,CAA0BC,KAA1B,4M;;;;;;;;;;;;;;;;;;;4BAUIC,E;;;;;;;mDAEJJ,mBAASC,MAAT,CAAgBI,OAAhB,CAAwB;AACnCC,gBAAAA,KAAK,EAAE;AAAEF,kBAAAA,EAAE,EAAFA;AAAF;AAD4B,eAAxB,C;;;;;;;;;;;;;;;;;;;+BAOOA,E;;;;;;;mDAEPJ,mBAASC,MAAT,CAAgBI,OAAhB,CAAwB;AACnCC,gBAAAA,KAAK,EAAE;AAAEC,kBAAAA,SAAS,EAAEH;AAAb;AAD4B,eAAxB,C;;;;;;;;;;;;;;;;;;;4BAQGA,E;;;;;;;mDAEHJ,mBAASC,MAAT,CAAgBO,OAAhB,CAAwB;AACnCF,gBAAAA,KAAK,EAAE;AAAEF,kBAAAA,EAAE,EAAFA;AAAF;AAD4B,eAAxB,C;;;;;;;;;;;;;;;;;;;yBAOCK,I;;;;;;;mDAEDT,mBAASC,MAAT,CAAgBS,MAAhB,CAAuBD,IAAvB,C;;;;;;;;;;;;;;;;;;;2BAMGL,E,EAAIK,I;;;;;;;;mDAELT,mBAASC,MAAT,CAAgBU,OAAhB,CAAwB;AACrCL,gBAAAA,KAAK,EAAE;AAAEF,kBAAAA,EAAE,EAAFA;AAAF;AAD8B,eAAxB,C;;;AAAXQ,cAAAA,E;;mBAIAA,E;;;;;;mDACWZ,mBAASC,MAAT,CAAgBY,MAAhB,CAAuBJ,IAAvB,EAA6B;AACxCH,gBAAAA,KAAK,EAAE;AAAEF,kBAAAA,EAAE,EAAEA;AAAN;AADiC,eAA7B,C;;;;;;gDAIN,I;;;;;;;;;;;;;;;;;;;;wBAOIK,I;;;;;;;mDAEAT,mBAASC,MAAT,CAAgBS,MAAhB,CAAuBD,IAAvB,C;;;;;;;;;;;;;;;;MAKjB;;;;;;;;;;;mDAGiBT,mBAASC,MAAT,CAAgBC,SAAhB,CAA0BC,KAA1B,6P;;;;;;;;;;;;;;;;MAWjB;;;;;;;;;;;mDAGiBH,mBAASC,MAAT,CAAgBC,SAAhB,CAA0BC,KAA1B,2O;;;;;;;;;;;;;;;;;;;;;;;;;;mDAYAH,mBAASC,MAAT,CAAgBC,SAAhB,CAA0BC,KAA1B,2N;;;;;;;;;;;;;;;;;;;;;;;;;;mDAcAH,mBAASC,MAAT,CAAgBC,SAAhB,CAA0BC,KAA1B,+C;;;;;;;;;;;;;;;;;;;;;;;;;;mDASAH,mBAASC,MAAT,CAAgBC,SAAhB,CAA0BC,KAA1B,kN;;;;;;;;;;;;;;;;;;;;;eAaJJ,a",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services",
      "sourcesContent": [
        "import database from \"../../Model/models\";\r\n\r\nclass dangkyService {\r\n  static async getAll() {\r\n    try {\r\n      return await database.dangky.sequelize.query(\r\n        `SELECT  lophocs.tenlophoc,lophocs.thoigianhoc, lophocs.phidichvu , dangkies.* \r\n        FROM public.lophocs,public.dangkies \r\n        where lophocs.id = dangkies.id_lophoc \r\n        ORDER BY id DESC  `\r\n      );\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  static async getByID(id) {\r\n    try {\r\n      return await database.dangky.findAll({\r\n        where: { id }\r\n      });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  static async getByIDLop(id) {\r\n    try {\r\n      return await database.dangky.findAll({\r\n        where: { id_lophoc: id }\r\n      });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async delete(id) {\r\n    try {\r\n      return await database.dangky.destroy({\r\n        where: { id }\r\n      });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  static async Save(data) {\r\n    try {\r\n      return await database.dangky.create(data);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async Update(id, data) {\r\n    try {\r\n      let tk = await database.dangky.findOne({\r\n        where: { id }\r\n      });\r\n\r\n      if (tk) {\r\n        return await database.dangky.update(data, {\r\n          where: { id: id }\r\n        });\r\n      } else {\r\n        return null;\r\n      }\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async add(data) {\r\n    try {\r\n      return await database.dangky.create(data);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  // Sử dụng học viên \r\n  static async getAllHV() {\r\n    try {\r\n      return await database.dangky.sequelize.query(\r\n        `select lophocs.tenlophoc,lophocs.thoigianbatdau,lophocs.phidichvu , dangkies.* \r\n        from public.lophocs, public.dangkies \r\n        where dangkies.id_lophoc = lophocs.id and (dangkies.thanhtoan > lophocs.phidichvu/2) \r\n        ORDER BY id DESC  `\r\n      );\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Thống kê\r\n  static async thongke() {\r\n    try {\r\n      return await database.dangky.sequelize.query(\r\n        `SELECT dangkies.id_lophoc , lophocs.tenlophoc , count(id_lophoc) AS dem FROM public.dangkies, public.lophocs\r\n        Where lophocs.id = dangkies.id_lophoc\r\n        GROUP BY dangkies.id_lophoc, lophocs.tenlophoc ORDER BY dem DESC; `\r\n      );\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async Tongthongke() {\r\n    try {\r\n      return await database.dangky.sequelize.query(\r\n        `SELECT  SUM(dem) as tong \r\n        FROM (SELECT COUNT(id_lophoc) AS dem\r\n        FROM public.dangkies, public.lophocs \r\n             Where lophocs.id = dangkies.id_lophoc\r\n        GROUP BY id_lophoc\r\n        ) as A `\r\n      );\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  static async TongthongkeThu() {\r\n    try {\r\n      return await database.dangky.sequelize.query(\r\n        `select sum(thanhtoan) as tong from dangkies`\r\n      );\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  static async ThongkeThu() {\r\n    try {\r\n      return await database.dangky.sequelize.query(\r\n        ` SELECT lophocs.tenlophoc , SUM(thanhtoan) AS dem\r\n        FROM public.dangkies, public.lophocs \r\n             Where lophocs.id = dangkies.id_lophoc\r\n        GROUP BY id_lophoc , lophocs.tenlophoc\r\n        `\r\n      );\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default dangkyService;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1584803065875
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\\\\outsite\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\\\\outsite\\\\khoaHocOusite.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\outsite",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\outsite\\khoaHocOusite.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\outsite\\khoaHocOusite.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\outsite\\khoaHocOusite.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\outsite",
        "sourceFileName": "khoaHocOusite.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _express = require(\"express\");\n\nvar _khoaHocOutsiteC = _interopRequireDefault(require(\"../../controllers/outsite/khoaHocOutsiteC\"));\n\nvar router = (0, _express.Router)();\nrouter.route('/').get(_khoaHocOutsiteC[\"default\"].getAll);\nrouter.route('/noidung/:id').get(_khoaHocOutsiteC[\"default\"].getnd);\nrouter.route('/noidung').get(_khoaHocOutsiteC[\"default\"].getndMD); //export default router;\n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImtob2FIb2NPdXNpdGUuanMiXSwibmFtZXMiOlsicm91dGVyIiwicm91dGUiLCJnZXQiLCJraG9hSG9jQ29udHJvbGxlciIsImdldEFsbCIsImdldG5kIiwiZ2V0bmRNRCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFDQTs7QUFHQSxJQUFNQSxNQUFNLEdBQUcsc0JBQWY7QUFDQUEsTUFBTSxDQUFDQyxLQUFQLENBQWEsR0FBYixFQUNDQyxHQURELENBQ0tDLDRCQUFrQkMsTUFEdkI7QUFJQUosTUFBTSxDQUFDQyxLQUFQLENBQWEsY0FBYixFQUNDQyxHQURELENBQ0tDLDRCQUFrQkUsS0FEdkI7QUFJQUwsTUFBTSxDQUFDQyxLQUFQLENBQWEsVUFBYixFQUNDQyxHQURELENBQ0tDLDRCQUFrQkcsT0FEdkIsRSxDQU1BOztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJSLE1BQWpCIiwic291cmNlUm9vdCI6IkQ6XFxMdWFuVmFuXFxMdWFuVmFuRDJcXHRydW5ndGFtX2xhbjRcXGFwcHNcXHJvdXRlcnNcXG91dHNpdGUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdleHByZXNzJztcclxuaW1wb3J0IGtob2FIb2NDb250cm9sbGVyIGZyb20gJy4uLy4uL2NvbnRyb2xsZXJzL291dHNpdGUva2hvYUhvY091dHNpdGVDJztcclxuXHJcblxyXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKTtcclxucm91dGVyLnJvdXRlKCcvJylcclxuLmdldChraG9hSG9jQ29udHJvbGxlci5nZXRBbGwpXHJcblxyXG5cclxucm91dGVyLnJvdXRlKCcvbm9pZHVuZy86aWQnKVxyXG4uZ2V0KGtob2FIb2NDb250cm9sbGVyLmdldG5kKVxyXG5cclxuXHJcbnJvdXRlci5yb3V0ZSgnL25vaWR1bmcnKVxyXG4uZ2V0KGtob2FIb2NDb250cm9sbGVyLmdldG5kTUQpXHJcblxyXG5cclxuXHJcblxyXG4vL2V4cG9ydCBkZWZhdWx0IHJvdXRlcjtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gcm91dGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "khoaHocOusite.js"
      ],
      "names": [
        "router",
        "route",
        "get",
        "khoaHocController",
        "getAll",
        "getnd",
        "getndMD",
        "module",
        "exports"
      ],
      "mappings": ";;;;AAAA;;AACA;;AAGA,IAAMA,MAAM,GAAG,sBAAf;AACAA,MAAM,CAACC,KAAP,CAAa,GAAb,EACCC,GADD,CACKC,4BAAkBC,MADvB;AAIAJ,MAAM,CAACC,KAAP,CAAa,cAAb,EACCC,GADD,CACKC,4BAAkBE,KADvB;AAIAL,MAAM,CAACC,KAAP,CAAa,UAAb,EACCC,GADD,CACKC,4BAAkBG,OADvB,E,CAMA;;AAEAC,MAAM,CAACC,OAAP,GAAiBR,MAAjB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\outsite",
      "sourcesContent": [
        "import { Router } from 'express';\r\nimport khoaHocController from '../../controllers/outsite/khoaHocOutsiteC';\r\n\r\n\r\nconst router = Router();\r\nrouter.route('/')\r\n.get(khoaHocController.getAll)\r\n\r\n\r\nrouter.route('/noidung/:id')\r\n.get(khoaHocController.getnd)\r\n\r\n\r\nrouter.route('/noidung')\r\n.get(khoaHocController.getndMD)\r\n\r\n\r\n\r\n\r\n//export default router;\r\n\r\nmodule.exports = router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1585631069224
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\\\\outsite\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\\\\outsite\\\\khoaHocOutsiteC.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite\\khoaHocOutsiteC.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite\\khoaHocOutsiteC.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite\\khoaHocOutsiteC.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite",
        "sourceFileName": "khoaHocOutsiteC.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _sDate = _interopRequireDefault(require(\"s-date\"));\n\nvar _lopHocService = _interopRequireDefault(require(\"../../services/lopHocService\"));\n\nvar _khoaHocService = _interopRequireDefault(require(\"../../services/khoaHocService\"));\n\nvar _baivietService = _interopRequireDefault(require(\"../../services/baivietService\"));\n\nvar d = new Date();\nd.getDate();\nd.getMonth();\nd.getFullYear();\nvar n = d.getDate() + d.getMonth() + d.getFullYear();\n\nvar khoaHocController =\n/*#__PURE__*/\nfunction () {\n  function khoaHocController() {\n    (0, _classCallCheck2[\"default\"])(this, khoaHocController);\n  }\n\n  (0, _createClass2[\"default\"])(khoaHocController, null, [{\n    key: \"getAll\",\n    value: function getAll(req, res) {\n      var user, data1, baiviet, data;\n      return _regenerator[\"default\"].async(function getAll$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              user = [];\n\n              if (req.session.user) {\n                user = req.session.user;\n              }\n\n              _context.next = 5;\n              return _regenerator[\"default\"].awrap(_lopHocService[\"default\"].getAllOusite());\n\n            case 5:\n              data1 = _context.sent;\n              _context.next = 8;\n              return _regenerator[\"default\"].awrap(_baivietService[\"default\"].getNew());\n\n            case 8:\n              baiviet = _context.sent;\n              data = data1[0];\n\n              if (data.length > 0) {\n                res.render(\"../views/outsite/khoahoc.ejs\", {\n                  data: data,\n                  date: _sDate[\"default\"],\n                  user: user,\n                  baiviet: baiviet\n                });\n              } else {\n                res.render(\"../views/outsite/khoahoc.ejs\", {\n                  data: data,\n                  date: _sDate[\"default\"],\n                  user: user,\n                  baiviet: baiviet\n                });\n              }\n\n              return _context.abrupt(\"return\", 0);\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](0);\n              return _context.abrupt(\"return\", 0);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 14]]);\n    }\n  }, {\n    key: \"getnd\",\n    value: function getnd(req, res) {\n      var user, limit, id, data1, moiNhat, baiviet, data;\n      return _regenerator[\"default\"].async(function getnd$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              user = [];\n              limit = 5;\n\n              if (req.session.user) {\n                user = req.session.user;\n              }\n\n              id = req.params.id;\n              _context2.next = 7;\n              return _regenerator[\"default\"].awrap(_lopHocService[\"default\"].getAllOusiteND());\n\n            case 7:\n              data1 = _context2.sent;\n              _context2.next = 10;\n              return _regenerator[\"default\"].awrap(_khoaHocService[\"default\"].getByID(id));\n\n            case 10:\n              moiNhat = _context2.sent;\n              _context2.next = 13;\n              return _regenerator[\"default\"].awrap(_baivietService[\"default\"].getNew());\n\n            case 13:\n              baiviet = _context2.sent;\n              data = data1[0];\n\n              if (data.length > 0) {\n                res.render(\"../views/outsite/ndkhoahoc.ejs\", {\n                  data: data,\n                  date: _sDate[\"default\"],\n                  user: user,\n                  moiNhat: moiNhat,\n                  limit: limit,\n                  baiviet: baiviet\n                });\n              } else {\n                res.render(\"../views/outsite/ndkhoahoc.ejs\", {\n                  data: data,\n                  date: _sDate[\"default\"],\n                  user: user,\n                  moiNhat: moiNhat,\n                  limit: limit,\n                  baiviet: baiviet\n                });\n              }\n\n              return _context2.abrupt(\"return\", 0);\n\n            case 19:\n              _context2.prev = 19;\n              _context2.t0 = _context2[\"catch\"](0);\n              return _context2.abrupt(\"return\", 0);\n\n            case 22:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 19]]);\n    }\n  }, {\n    key: \"getndMD\",\n    value: function getndMD(req, res) {\n      var user, limit, data1, moiNhat, baiviet, data;\n      return _regenerator[\"default\"].async(function getndMD$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              user = [];\n              limit = 5;\n\n              if (req.session.user) {\n                user = req.session.user;\n              }\n\n              _context3.next = 6;\n              return _regenerator[\"default\"].awrap(_lopHocService[\"default\"].getAllOusiteND());\n\n            case 6:\n              data1 = _context3.sent;\n              _context3.next = 9;\n              return _regenerator[\"default\"].awrap(_khoaHocService[\"default\"].getByIDMN());\n\n            case 9:\n              moiNhat = _context3.sent;\n              _context3.next = 12;\n              return _regenerator[\"default\"].awrap(_baivietService[\"default\"].getNew());\n\n            case 12:\n              baiviet = _context3.sent;\n              data = data1[0];\n\n              if (data.length > 0) {\n                res.render(\"../views/outsite/ndkhoahoc.ejs\", {\n                  data: data,\n                  date: _sDate[\"default\"],\n                  user: user,\n                  moiNhat: moiNhat,\n                  limit: limit,\n                  baiviet: baiviet\n                });\n              } else {\n                res.render(\"../views/outsite/ndkhoahoc.ejs\", {\n                  data: data,\n                  date: _sDate[\"default\"],\n                  user: user,\n                  moiNhat: moiNhat,\n                  limit: limit,\n                  baiviet: baiviet\n                });\n              }\n\n              return _context3.abrupt(\"return\", 0);\n\n            case 18:\n              _context3.prev = 18;\n              _context3.t0 = _context3[\"catch\"](0);\n              return _context3.abrupt(\"return\", 0);\n\n            case 21:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 18]]);\n    }\n  }]);\n  return khoaHocController;\n}();\n\nvar _default = khoaHocController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImtob2FIb2NPdXRzaXRlQy5qcyJdLCJuYW1lcyI6WyJkIiwiRGF0ZSIsImdldERhdGUiLCJnZXRNb250aCIsImdldEZ1bGxZZWFyIiwibiIsImtob2FIb2NDb250cm9sbGVyIiwicmVxIiwicmVzIiwidXNlciIsInNlc3Npb24iLCJsb3BIb2NTZXJ2aWNlIiwiZ2V0QWxsT3VzaXRlIiwiZGF0YTEiLCJiYWl2aWV0U2VydmljZSIsImdldE5ldyIsImJhaXZpZXQiLCJkYXRhIiwibGVuZ3RoIiwicmVuZGVyIiwiZGF0ZSIsImxpbWl0IiwiaWQiLCJwYXJhbXMiLCJnZXRBbGxPdXNpdGVORCIsImtob2FIb2NTZXJ2aWNlIiwiZ2V0QnlJRCIsIm1vaU5oYXQiLCJnZXRCeUlETU4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBLElBQUlBLENBQUMsR0FBRyxJQUFJQyxJQUFKLEVBQVI7QUFDQUQsQ0FBQyxDQUFDRSxPQUFGO0FBQ0FGLENBQUMsQ0FBQ0csUUFBRjtBQUNBSCxDQUFDLENBQUNJLFdBQUY7QUFDQSxJQUFJQyxDQUFDLEdBQUdMLENBQUMsQ0FBQ0UsT0FBRixLQUFjRixDQUFDLENBQUNHLFFBQUYsRUFBZCxHQUE2QkgsQ0FBQyxDQUFDSSxXQUFGLEVBQXJDOztJQUVNRSxpQjs7Ozs7Ozs7OzJCQUNnQkMsRyxFQUFLQyxHOzs7Ozs7O0FBRWpCQyxjQUFBQSxJLEdBQU8sRTs7QUFDWCxrQkFBSUYsR0FBRyxDQUFDRyxPQUFKLENBQVlELElBQWhCLEVBQXNCO0FBQ3BCQSxnQkFBQUEsSUFBSSxHQUFHRixHQUFHLENBQUNHLE9BQUosQ0FBWUQsSUFBbkI7QUFDRDs7O21EQUNtQkUsMEJBQWNDLFlBQWQsRTs7O0FBQWRDLGNBQUFBLEs7O21EQUNnQkMsMkJBQWVDLE1BQWYsRTs7O0FBQWhCQyxjQUFBQSxPO0FBQ0FDLGNBQUFBLEksR0FBT0osS0FBSyxDQUFDLENBQUQsQzs7QUFDbEIsa0JBQUlJLElBQUksQ0FBQ0MsTUFBTCxHQUFjLENBQWxCLEVBQXFCO0FBQ25CVixnQkFBQUEsR0FBRyxDQUFDVyxNQUFKLENBQVcsOEJBQVgsRUFBMkM7QUFBRUYsa0JBQUFBLElBQUksRUFBSkEsSUFBRjtBQUFRRyxrQkFBQUEsSUFBSSxFQUFKQSxpQkFBUjtBQUFjWCxrQkFBQUEsSUFBSSxFQUFKQSxJQUFkO0FBQW1CTyxrQkFBQUEsT0FBTyxFQUFQQTtBQUFuQixpQkFBM0M7QUFDRCxlQUZELE1BRU87QUFDTFIsZ0JBQUFBLEdBQUcsQ0FBQ1csTUFBSixDQUFXLDhCQUFYLEVBQTJDO0FBQUVGLGtCQUFBQSxJQUFJLEVBQUpBLElBQUY7QUFBUUcsa0JBQUFBLElBQUksRUFBSkEsaUJBQVI7QUFBY1gsa0JBQUFBLElBQUksRUFBSkEsSUFBZDtBQUFvQk8sa0JBQUFBLE9BQU8sRUFBUEE7QUFBcEIsaUJBQTNDO0FBQ0Q7OytDQUNNLEM7Ozs7OytDQUVBLEM7Ozs7Ozs7Ozs7OzBCQUlRVCxHLEVBQUtDLEc7Ozs7Ozs7QUFFaEJDLGNBQUFBLEksR0FBTyxFO0FBQ1BZLGNBQUFBLEssR0FBUSxDOztBQUNaLGtCQUFJZCxHQUFHLENBQUNHLE9BQUosQ0FBWUQsSUFBaEIsRUFBc0I7QUFDcEJBLGdCQUFBQSxJQUFJLEdBQUdGLEdBQUcsQ0FBQ0csT0FBSixDQUFZRCxJQUFuQjtBQUErQjs7QUFDM0JhLGNBQUFBLEUsR0FBS2YsR0FBRyxDQUFDZ0IsTUFBSixDQUFXRCxFOzttREFDRlgsMEJBQWNhLGNBQWQsRTs7O0FBQWRYLGNBQUFBLEs7O21EQUNnQlksMkJBQWVDLE9BQWYsQ0FBdUJKLEVBQXZCLEM7OztBQUFoQkssY0FBQUEsTzs7bURBQ2dCYiwyQkFBZUMsTUFBZixFOzs7QUFBaEJDLGNBQUFBLE87QUFDQUMsY0FBQUEsSSxHQUFPSixLQUFLLENBQUMsQ0FBRCxDOztBQUNsQixrQkFBSUksSUFBSSxDQUFDQyxNQUFMLEdBQWMsQ0FBbEIsRUFBcUI7QUFDbkJWLGdCQUFBQSxHQUFHLENBQUNXLE1BQUosQ0FBVyxnQ0FBWCxFQUE2QztBQUFFRixrQkFBQUEsSUFBSSxFQUFKQSxJQUFGO0FBQVFHLGtCQUFBQSxJQUFJLEVBQUpBLGlCQUFSO0FBQWNYLGtCQUFBQSxJQUFJLEVBQUpBLElBQWQ7QUFBbUJrQixrQkFBQUEsT0FBTyxFQUFQQSxPQUFuQjtBQUEyQk4sa0JBQUFBLEtBQUssRUFBTEEsS0FBM0I7QUFBaUNMLGtCQUFBQSxPQUFPLEVBQVBBO0FBQWpDLGlCQUE3QztBQUNELGVBRkQsTUFFTztBQUNMUixnQkFBQUEsR0FBRyxDQUFDVyxNQUFKLENBQVcsZ0NBQVgsRUFBNkM7QUFBRUYsa0JBQUFBLElBQUksRUFBSkEsSUFBRjtBQUFRRyxrQkFBQUEsSUFBSSxFQUFKQSxpQkFBUjtBQUFjWCxrQkFBQUEsSUFBSSxFQUFKQSxJQUFkO0FBQW1Ca0Isa0JBQUFBLE9BQU8sRUFBUEEsT0FBbkI7QUFBNkJOLGtCQUFBQSxLQUFLLEVBQUxBLEtBQTdCO0FBQW1DTCxrQkFBQUEsT0FBTyxFQUFQQTtBQUFuQyxpQkFBN0M7QUFDRDs7Z0RBQ00sQzs7Ozs7Z0RBRUEsQzs7Ozs7Ozs7Ozs7NEJBSVVULEcsRUFBS0MsRzs7Ozs7OztBQUVsQkMsY0FBQUEsSSxHQUFPLEU7QUFDUFksY0FBQUEsSyxHQUFRLEM7O0FBQ1osa0JBQUlkLEdBQUcsQ0FBQ0csT0FBSixDQUFZRCxJQUFoQixFQUFzQjtBQUNwQkEsZ0JBQUFBLElBQUksR0FBR0YsR0FBRyxDQUFDRyxPQUFKLENBQVlELElBQW5CO0FBQStCOzs7bURBQ2JFLDBCQUFjYSxjQUFkLEU7OztBQUFkWCxjQUFBQSxLOzttREFDZ0JZLDJCQUFlRyxTQUFmLEU7OztBQUFoQkQsY0FBQUEsTzs7bURBQ2dCYiwyQkFBZUMsTUFBZixFOzs7QUFBaEJDLGNBQUFBLE87QUFDQUMsY0FBQUEsSSxHQUFPSixLQUFLLENBQUMsQ0FBRCxDOztBQUNsQixrQkFBSUksSUFBSSxDQUFDQyxNQUFMLEdBQWMsQ0FBbEIsRUFBcUI7QUFDbkJWLGdCQUFBQSxHQUFHLENBQUNXLE1BQUosQ0FBVyxnQ0FBWCxFQUE2QztBQUFFRixrQkFBQUEsSUFBSSxFQUFKQSxJQUFGO0FBQVFHLGtCQUFBQSxJQUFJLEVBQUpBLGlCQUFSO0FBQWNYLGtCQUFBQSxJQUFJLEVBQUpBLElBQWQ7QUFBbUJrQixrQkFBQUEsT0FBTyxFQUFQQSxPQUFuQjtBQUEyQk4sa0JBQUFBLEtBQUssRUFBTEEsS0FBM0I7QUFBaUNMLGtCQUFBQSxPQUFPLEVBQVBBO0FBQWpDLGlCQUE3QztBQUNELGVBRkQsTUFFTztBQUNMUixnQkFBQUEsR0FBRyxDQUFDVyxNQUFKLENBQVcsZ0NBQVgsRUFBNkM7QUFBRUYsa0JBQUFBLElBQUksRUFBSkEsSUFBRjtBQUFRRyxrQkFBQUEsSUFBSSxFQUFKQSxpQkFBUjtBQUFjWCxrQkFBQUEsSUFBSSxFQUFKQSxJQUFkO0FBQW1Ca0Isa0JBQUFBLE9BQU8sRUFBUEEsT0FBbkI7QUFBNkJOLGtCQUFBQSxLQUFLLEVBQUxBLEtBQTdCO0FBQW1DTCxrQkFBQUEsT0FBTyxFQUFQQTtBQUFuQyxpQkFBN0M7QUFDRDs7Z0RBQ00sQzs7Ozs7Z0RBRUEsQzs7Ozs7Ozs7Ozs7OztlQU1FVixpQiIsInNvdXJjZVJvb3QiOiJEOlxcTHVhblZhblxcTHVhblZhbkQyXFx0cnVuZ3RhbV9sYW40XFxhcHBzXFxjb250cm9sbGVyc1xcb3V0c2l0ZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBmcyBmcm9tIFwiZnNcIjtcclxuaW1wb3J0IGRhdGUgZnJvbSBcInMtZGF0ZVwiO1xyXG5pbXBvcnQgbG9wSG9jU2VydmljZSBmcm9tIFwiLi4vLi4vc2VydmljZXMvbG9wSG9jU2VydmljZVwiO1xyXG5pbXBvcnQga2hvYUhvY1NlcnZpY2UgZnJvbSBcIi4uLy4uL3NlcnZpY2VzL2tob2FIb2NTZXJ2aWNlXCI7XHJcbmltcG9ydCBiYWl2aWV0U2VydmljZSBmcm9tIFwiLi4vLi4vc2VydmljZXMvYmFpdmlldFNlcnZpY2VcIjtcclxubGV0IGQgPSBuZXcgRGF0ZSgpO1xyXG5kLmdldERhdGUoKTtcclxuZC5nZXRNb250aCgpO1xyXG5kLmdldEZ1bGxZZWFyKCk7XHJcbmxldCBuID0gZC5nZXREYXRlKCkgKyBkLmdldE1vbnRoKCkgKyBkLmdldEZ1bGxZZWFyKCk7XHJcblxyXG5jbGFzcyBraG9hSG9jQ29udHJvbGxlciB7XHJcbiAgc3RhdGljIGFzeW5jIGdldEFsbChyZXEsIHJlcykge1xyXG4gICAgdHJ5IHtcclxuICAgICAgbGV0IHVzZXIgPSBbXTtcclxuICAgICAgaWYgKHJlcS5zZXNzaW9uLnVzZXIpIHtcclxuICAgICAgICB1c2VyID0gcmVxLnNlc3Npb24udXNlcjtcclxuICAgICAgfVxyXG4gICAgICBjb25zdCBkYXRhMSA9IGF3YWl0IGxvcEhvY1NlcnZpY2UuZ2V0QWxsT3VzaXRlKCk7XHJcbiAgICAgIGNvbnN0IGJhaXZpZXQgPSBhd2FpdCBiYWl2aWV0U2VydmljZS5nZXROZXcoKTtcclxuICAgICAgY29uc3QgZGF0YSA9IGRhdGExWzBdO1xyXG4gICAgICBpZiAoZGF0YS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgcmVzLnJlbmRlcihcIi4uL3ZpZXdzL291dHNpdGUva2hvYWhvYy5lanNcIiwgeyBkYXRhLCBkYXRlLCB1c2VyLGJhaXZpZXQgfSk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmVzLnJlbmRlcihcIi4uL3ZpZXdzL291dHNpdGUva2hvYWhvYy5lanNcIiwgeyBkYXRhLCBkYXRlLCB1c2VyICxiYWl2aWV0fSk7XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIDA7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICByZXR1cm4gMDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHN0YXRpYyBhc3luYyBnZXRuZChyZXEsIHJlcykge1xyXG4gICAgdHJ5IHtcclxuICAgICAgbGV0IHVzZXIgPSBbXTtcclxuICAgICAgbGV0IGxpbWl0ID0gNTtcclxuICAgICAgaWYgKHJlcS5zZXNzaW9uLnVzZXIpIHtcclxuICAgICAgICB1c2VyID0gcmVxLnNlc3Npb24udXNlcjsgICAgICB9XHJcbiAgICAgICAgbGV0IGlkID0gcmVxLnBhcmFtcy5pZFxyXG4gICAgICBjb25zdCBkYXRhMSA9IGF3YWl0IGxvcEhvY1NlcnZpY2UuZ2V0QWxsT3VzaXRlTkQoKTtcclxuICAgICAgY29uc3QgbW9pTmhhdCA9IGF3YWl0IGtob2FIb2NTZXJ2aWNlLmdldEJ5SUQoaWQpOyBcclxuICAgICAgY29uc3QgYmFpdmlldCA9IGF3YWl0IGJhaXZpZXRTZXJ2aWNlLmdldE5ldygpO1xyXG4gICAgICBjb25zdCBkYXRhID0gZGF0YTFbMF07XHJcbiAgICAgIGlmIChkYXRhLmxlbmd0aCA+IDApIHtcclxuICAgICAgICByZXMucmVuZGVyKFwiLi4vdmlld3Mvb3V0c2l0ZS9uZGtob2Fob2MuZWpzXCIsIHsgZGF0YSwgZGF0ZSwgdXNlcixtb2lOaGF0LGxpbWl0LGJhaXZpZXQgfSk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmVzLnJlbmRlcihcIi4uL3ZpZXdzL291dHNpdGUvbmRraG9haG9jLmVqc1wiLCB7IGRhdGEsIGRhdGUsIHVzZXIsbW9pTmhhdCAsIGxpbWl0LGJhaXZpZXR9KTtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gMDtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHJldHVybiAwO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc3RhdGljIGFzeW5jIGdldG5kTUQocmVxLCByZXMpIHtcclxuICAgIHRyeSB7ICAgICBcclxuICAgICAgbGV0IHVzZXIgPSBbXTtcclxuICAgICAgbGV0IGxpbWl0ID0gNTtcclxuICAgICAgaWYgKHJlcS5zZXNzaW9uLnVzZXIpIHtcclxuICAgICAgICB1c2VyID0gcmVxLnNlc3Npb24udXNlcjsgICAgICB9ICAgICAgXHJcbiAgICAgIGNvbnN0IGRhdGExID0gYXdhaXQgbG9wSG9jU2VydmljZS5nZXRBbGxPdXNpdGVORCgpOyAgICAgIFxyXG4gICAgICBjb25zdCBtb2lOaGF0ID0gYXdhaXQga2hvYUhvY1NlcnZpY2UuZ2V0QnlJRE1OKCk7ICAgIFxyXG4gICAgICBjb25zdCBiYWl2aWV0ID0gYXdhaXQgYmFpdmlldFNlcnZpY2UuZ2V0TmV3KCk7ICBcclxuICAgICAgY29uc3QgZGF0YSA9IGRhdGExWzBdO1xyXG4gICAgICBpZiAoZGF0YS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgcmVzLnJlbmRlcihcIi4uL3ZpZXdzL291dHNpdGUvbmRraG9haG9jLmVqc1wiLCB7IGRhdGEsIGRhdGUsIHVzZXIsbW9pTmhhdCxsaW1pdCxiYWl2aWV0IH0pO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJlcy5yZW5kZXIoXCIuLi92aWV3cy9vdXRzaXRlL25ka2hvYWhvYy5lanNcIiwgeyBkYXRhLCBkYXRlLCB1c2VyLG1vaU5oYXQgLCBsaW1pdCxiYWl2aWV0fSk7XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIDA7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICByZXR1cm4gMDtcclxuICAgIH1cclxuICB9XHJcblxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBraG9hSG9jQ29udHJvbGxlcjtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "khoaHocOutsiteC.js"
      ],
      "names": [
        "d",
        "Date",
        "getDate",
        "getMonth",
        "getFullYear",
        "n",
        "khoaHocController",
        "req",
        "res",
        "user",
        "session",
        "lopHocService",
        "getAllOusite",
        "data1",
        "baivietService",
        "getNew",
        "baiviet",
        "data",
        "length",
        "render",
        "date",
        "limit",
        "id",
        "params",
        "getAllOusiteND",
        "khoaHocService",
        "getByID",
        "moiNhat",
        "getByIDMN"
      ],
      "mappings": ";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA,IAAIA,CAAC,GAAG,IAAIC,IAAJ,EAAR;AACAD,CAAC,CAACE,OAAF;AACAF,CAAC,CAACG,QAAF;AACAH,CAAC,CAACI,WAAF;AACA,IAAIC,CAAC,GAAGL,CAAC,CAACE,OAAF,KAAcF,CAAC,CAACG,QAAF,EAAd,GAA6BH,CAAC,CAACI,WAAF,EAArC;;IAEME,iB;;;;;;;;;2BACgBC,G,EAAKC,G;;;;;;;AAEjBC,cAAAA,I,GAAO,E;;AACX,kBAAIF,GAAG,CAACG,OAAJ,CAAYD,IAAhB,EAAsB;AACpBA,gBAAAA,IAAI,GAAGF,GAAG,CAACG,OAAJ,CAAYD,IAAnB;AACD;;;mDACmBE,0BAAcC,YAAd,E;;;AAAdC,cAAAA,K;;mDACgBC,2BAAeC,MAAf,E;;;AAAhBC,cAAAA,O;AACAC,cAAAA,I,GAAOJ,KAAK,CAAC,CAAD,C;;AAClB,kBAAII,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AACnBV,gBAAAA,GAAG,CAACW,MAAJ,CAAW,8BAAX,EAA2C;AAAEF,kBAAAA,IAAI,EAAJA,IAAF;AAAQG,kBAAAA,IAAI,EAAJA,iBAAR;AAAcX,kBAAAA,IAAI,EAAJA,IAAd;AAAmBO,kBAAAA,OAAO,EAAPA;AAAnB,iBAA3C;AACD,eAFD,MAEO;AACLR,gBAAAA,GAAG,CAACW,MAAJ,CAAW,8BAAX,EAA2C;AAAEF,kBAAAA,IAAI,EAAJA,IAAF;AAAQG,kBAAAA,IAAI,EAAJA,iBAAR;AAAcX,kBAAAA,IAAI,EAAJA,IAAd;AAAoBO,kBAAAA,OAAO,EAAPA;AAApB,iBAA3C;AACD;;+CACM,C;;;;;+CAEA,C;;;;;;;;;;;0BAIQT,G,EAAKC,G;;;;;;;AAEhBC,cAAAA,I,GAAO,E;AACPY,cAAAA,K,GAAQ,C;;AACZ,kBAAId,GAAG,CAACG,OAAJ,CAAYD,IAAhB,EAAsB;AACpBA,gBAAAA,IAAI,GAAGF,GAAG,CAACG,OAAJ,CAAYD,IAAnB;AAA+B;;AAC3Ba,cAAAA,E,GAAKf,GAAG,CAACgB,MAAJ,CAAWD,E;;mDACFX,0BAAca,cAAd,E;;;AAAdX,cAAAA,K;;mDACgBY,2BAAeC,OAAf,CAAuBJ,EAAvB,C;;;AAAhBK,cAAAA,O;;mDACgBb,2BAAeC,MAAf,E;;;AAAhBC,cAAAA,O;AACAC,cAAAA,I,GAAOJ,KAAK,CAAC,CAAD,C;;AAClB,kBAAII,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AACnBV,gBAAAA,GAAG,CAACW,MAAJ,CAAW,gCAAX,EAA6C;AAAEF,kBAAAA,IAAI,EAAJA,IAAF;AAAQG,kBAAAA,IAAI,EAAJA,iBAAR;AAAcX,kBAAAA,IAAI,EAAJA,IAAd;AAAmBkB,kBAAAA,OAAO,EAAPA,OAAnB;AAA2BN,kBAAAA,KAAK,EAALA,KAA3B;AAAiCL,kBAAAA,OAAO,EAAPA;AAAjC,iBAA7C;AACD,eAFD,MAEO;AACLR,gBAAAA,GAAG,CAACW,MAAJ,CAAW,gCAAX,EAA6C;AAAEF,kBAAAA,IAAI,EAAJA,IAAF;AAAQG,kBAAAA,IAAI,EAAJA,iBAAR;AAAcX,kBAAAA,IAAI,EAAJA,IAAd;AAAmBkB,kBAAAA,OAAO,EAAPA,OAAnB;AAA6BN,kBAAAA,KAAK,EAALA,KAA7B;AAAmCL,kBAAAA,OAAO,EAAPA;AAAnC,iBAA7C;AACD;;gDACM,C;;;;;gDAEA,C;;;;;;;;;;;4BAIUT,G,EAAKC,G;;;;;;;AAElBC,cAAAA,I,GAAO,E;AACPY,cAAAA,K,GAAQ,C;;AACZ,kBAAId,GAAG,CAACG,OAAJ,CAAYD,IAAhB,EAAsB;AACpBA,gBAAAA,IAAI,GAAGF,GAAG,CAACG,OAAJ,CAAYD,IAAnB;AAA+B;;;mDACbE,0BAAca,cAAd,E;;;AAAdX,cAAAA,K;;mDACgBY,2BAAeG,SAAf,E;;;AAAhBD,cAAAA,O;;mDACgBb,2BAAeC,MAAf,E;;;AAAhBC,cAAAA,O;AACAC,cAAAA,I,GAAOJ,KAAK,CAAC,CAAD,C;;AAClB,kBAAII,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AACnBV,gBAAAA,GAAG,CAACW,MAAJ,CAAW,gCAAX,EAA6C;AAAEF,kBAAAA,IAAI,EAAJA,IAAF;AAAQG,kBAAAA,IAAI,EAAJA,iBAAR;AAAcX,kBAAAA,IAAI,EAAJA,IAAd;AAAmBkB,kBAAAA,OAAO,EAAPA,OAAnB;AAA2BN,kBAAAA,KAAK,EAALA,KAA3B;AAAiCL,kBAAAA,OAAO,EAAPA;AAAjC,iBAA7C;AACD,eAFD,MAEO;AACLR,gBAAAA,GAAG,CAACW,MAAJ,CAAW,gCAAX,EAA6C;AAAEF,kBAAAA,IAAI,EAAJA,IAAF;AAAQG,kBAAAA,IAAI,EAAJA,iBAAR;AAAcX,kBAAAA,IAAI,EAAJA,IAAd;AAAmBkB,kBAAAA,OAAO,EAAPA,OAAnB;AAA6BN,kBAAAA,KAAK,EAALA,KAA7B;AAAmCL,kBAAAA,OAAO,EAAPA;AAAnC,iBAA7C;AACD;;gDACM,C;;;;;gDAEA,C;;;;;;;;;;;;;eAMEV,iB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite",
      "sourcesContent": [
        "import fs from \"fs\";\r\nimport date from \"s-date\";\r\nimport lopHocService from \"../../services/lopHocService\";\r\nimport khoaHocService from \"../../services/khoaHocService\";\r\nimport baivietService from \"../../services/baivietService\";\r\nlet d = new Date();\r\nd.getDate();\r\nd.getMonth();\r\nd.getFullYear();\r\nlet n = d.getDate() + d.getMonth() + d.getFullYear();\r\n\r\nclass khoaHocController {\r\n  static async getAll(req, res) {\r\n    try {\r\n      let user = [];\r\n      if (req.session.user) {\r\n        user = req.session.user;\r\n      }\r\n      const data1 = await lopHocService.getAllOusite();\r\n      const baiviet = await baivietService.getNew();\r\n      const data = data1[0];\r\n      if (data.length > 0) {\r\n        res.render(\"../views/outsite/khoahoc.ejs\", { data, date, user,baiviet });\r\n      } else {\r\n        res.render(\"../views/outsite/khoahoc.ejs\", { data, date, user ,baiviet});\r\n      }\r\n      return 0;\r\n    } catch (error) {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  static async getnd(req, res) {\r\n    try {\r\n      let user = [];\r\n      let limit = 5;\r\n      if (req.session.user) {\r\n        user = req.session.user;      }\r\n        let id = req.params.id\r\n      const data1 = await lopHocService.getAllOusiteND();\r\n      const moiNhat = await khoaHocService.getByID(id); \r\n      const baiviet = await baivietService.getNew();\r\n      const data = data1[0];\r\n      if (data.length > 0) {\r\n        res.render(\"../views/outsite/ndkhoahoc.ejs\", { data, date, user,moiNhat,limit,baiviet });\r\n      } else {\r\n        res.render(\"../views/outsite/ndkhoahoc.ejs\", { data, date, user,moiNhat , limit,baiviet});\r\n      }\r\n      return 0;\r\n    } catch (error) {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  static async getndMD(req, res) {\r\n    try {     \r\n      let user = [];\r\n      let limit = 5;\r\n      if (req.session.user) {\r\n        user = req.session.user;      }      \r\n      const data1 = await lopHocService.getAllOusiteND();      \r\n      const moiNhat = await khoaHocService.getByIDMN();    \r\n      const baiviet = await baivietService.getNew();  \r\n      const data = data1[0];\r\n      if (data.length > 0) {\r\n        res.render(\"../views/outsite/ndkhoahoc.ejs\", { data, date, user,moiNhat,limit,baiviet });\r\n      } else {\r\n        res.render(\"../views/outsite/ndkhoahoc.ejs\", { data, date, user,moiNhat , limit,baiviet});\r\n      }\r\n      return 0;\r\n    } catch (error) {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default khoaHocController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1587478551735
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\\\\outsite\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\\\\outsite\\\\taikhoancanhanOutR.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\outsite",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\outsite\\taikhoancanhanOutR.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\outsite\\taikhoancanhanOutR.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\outsite\\taikhoancanhanOutR.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\outsite",
        "sourceFileName": "taikhoancanhanOutR.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _express = require(\"express\");\n\nvar _taiKhoancanhanOutC = _interopRequireDefault(require(\"../../controllers/outsite/taiKhoancanhanOutC\"));\n\nvar _dienDanOutsiteC = _interopRequireDefault(require(\"../../controllers/outsite/dienDanOutsiteC\"));\n\nvar _thoiKhoaBieuOutsiteC = _interopRequireDefault(require(\"../../controllers/outsite/thoiKhoaBieuOutsiteC\"));\n\nvar _lopHocOutC = _interopRequireDefault(require(\"../../controllers/outsite/lopHocOutC\"));\n\nvar _uploadfile = _interopRequireDefault(require(\"../../../helpers/uploadfile\"));\n\nvar router = (0, _express.Router)();\n\nvar single = _uploadfile[\"default\"].single(\"hinhanh\");\n\nrouter.route(\"/canhan\").get(_taiKhoancanhanOutC[\"default\"].getATk);\nrouter.route(\"/thongtin/:id\").post(single, _taiKhoancanhanOutC[\"default\"].updatedtk);\nrouter.route(\"/doimatkhau/:id\").post(_taiKhoancanhanOutC[\"default\"].updatematkhau);\nrouter.route(\"/diendan/:id\").get(_dienDanOutsiteC[\"default\"].getAll).post(_taiKhoancanhanOutC[\"default\"].updatematkhau);\nrouter.route(\"/diendan/delete/:id\").get(_dienDanOutsiteC[\"default\"].Delete);\nrouter.route(\"/diendan/update/:id\").get(_dienDanOutsiteC[\"default\"].getA).post(_dienDanOutsiteC[\"default\"].update);\nrouter.route(\"/thoikhoabieu/:trangthai\").get(_thoiKhoaBieuOutsiteC[\"default\"].getAll);\nrouter.route(\"/lophoc/:trangthai\").get(_lopHocOutC[\"default\"].getAll);\nrouter.route(\"/hocvien/:id\").get(_lopHocOutC[\"default\"].getAllhocvien);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhaWtob2FuY2FuaGFuT3V0Ui5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJzaW5nbGUiLCJ1cGxvYWQiLCJyb3V0ZSIsImdldCIsInRhaUtob2FuQ29udHJvbGxlciIsImdldEFUayIsInBvc3QiLCJ1cGRhdGVkdGsiLCJ1cGRhdGVtYXRraGF1IiwiZGllbmRhbkMiLCJnZXRBbGwiLCJEZWxldGUiLCJnZXRBIiwidXBkYXRlIiwidGhvaWtob2FiaWV1IiwibG9wSG9jT3V0QyIsImdldEFsbGhvY3ZpZW4iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUE7O0FBRUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUEsSUFBTUEsTUFBTSxHQUFHLHNCQUFmOztBQUNBLElBQUlDLE1BQU0sR0FBR0MsdUJBQU9ELE1BQVAsQ0FBYyxTQUFkLENBQWI7O0FBRUFELE1BQU0sQ0FBQ0csS0FBUCxDQUFhLFNBQWIsRUFBd0JDLEdBQXhCLENBQTRCQywrQkFBbUJDLE1BQS9DO0FBQ0FOLE1BQU0sQ0FBQ0csS0FBUCxDQUFhLGVBQWIsRUFBOEJJLElBQTlCLENBQW1DTixNQUFuQyxFQUEyQ0ksK0JBQW1CRyxTQUE5RDtBQUNBUixNQUFNLENBQUNHLEtBQVAsQ0FBYSxpQkFBYixFQUFnQ0ksSUFBaEMsQ0FBc0NGLCtCQUFtQkksYUFBekQ7QUFFQVQsTUFBTSxDQUFDRyxLQUFQLENBQWEsY0FBYixFQUNDQyxHQURELENBQ0tNLDRCQUFTQyxNQURkLEVBRUNKLElBRkQsQ0FFT0YsK0JBQW1CSSxhQUYxQjtBQUlBVCxNQUFNLENBQUNHLEtBQVAsQ0FBYSxxQkFBYixFQUNDQyxHQURELENBQ0tNLDRCQUFTRSxNQURkO0FBR0FaLE1BQU0sQ0FBQ0csS0FBUCxDQUFhLHFCQUFiLEVBQ0NDLEdBREQsQ0FDS00sNEJBQVNHLElBRGQsRUFFQ04sSUFGRCxDQUVNRyw0QkFBU0ksTUFGZjtBQUlBZCxNQUFNLENBQUNHLEtBQVAsQ0FBYSwwQkFBYixFQUNDQyxHQURELENBQ0tXLGlDQUFhSixNQURsQjtBQUVBWCxNQUFNLENBQUNHLEtBQVAsQ0FBYSxvQkFBYixFQUNDQyxHQURELENBQ0tZLHVCQUFXTCxNQURoQjtBQUlBWCxNQUFNLENBQ0hHLEtBREgsQ0FDUyxjQURULEVBRUdDLEdBRkgsQ0FFT1ksdUJBQVdDLGFBRmxCO0FBSUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQm5CLE1BQWpCIiwic291cmNlUm9vdCI6IkQ6XFxMdWFuVmFuXFxMdWFuVmFuRDJcXHRydW5ndGFtX2xhbjRcXGFwcHNcXHJvdXRlcnNcXG91dHNpdGUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb3V0ZXIgfSBmcm9tIFwiZXhwcmVzc1wiO1xyXG5cclxuaW1wb3J0IHRhaUtob2FuQ29udHJvbGxlciBmcm9tIFwiLi4vLi4vY29udHJvbGxlcnMvb3V0c2l0ZS90YWlLaG9hbmNhbmhhbk91dENcIjtcclxuaW1wb3J0IGRpZW5kYW5DIGZyb20gXCIuLi8uLi9jb250cm9sbGVycy9vdXRzaXRlL2RpZW5EYW5PdXRzaXRlQ1wiXHJcbmltcG9ydCB0aG9pa2hvYWJpZXUgZnJvbSBcIi4uLy4uL2NvbnRyb2xsZXJzL291dHNpdGUvdGhvaUtob2FCaWV1T3V0c2l0ZUNcIlxyXG5pbXBvcnQgbG9wSG9jT3V0QyBmcm9tIFwiLi4vLi4vY29udHJvbGxlcnMvb3V0c2l0ZS9sb3BIb2NPdXRDXCJcclxuaW1wb3J0IHVwbG9hZCBmcm9tIFwiLi4vLi4vLi4vaGVscGVycy91cGxvYWRmaWxlXCI7XHJcblxyXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKTtcclxudmFyIHNpbmdsZSA9IHVwbG9hZC5zaW5nbGUoXCJoaW5oYW5oXCIpO1xyXG5cclxucm91dGVyLnJvdXRlKFwiL2NhbmhhblwiKS5nZXQodGFpS2hvYW5Db250cm9sbGVyLmdldEFUayk7XHJcbnJvdXRlci5yb3V0ZShcIi90aG9uZ3Rpbi86aWRcIikucG9zdChzaW5nbGUsIHRhaUtob2FuQ29udHJvbGxlci51cGRhdGVkdGspO1xyXG5yb3V0ZXIucm91dGUoXCIvZG9pbWF0a2hhdS86aWRcIikucG9zdCggdGFpS2hvYW5Db250cm9sbGVyLnVwZGF0ZW1hdGtoYXUpO1xyXG5cclxucm91dGVyLnJvdXRlKFwiL2RpZW5kYW4vOmlkXCIpXHJcbi5nZXQoZGllbmRhbkMuZ2V0QWxsKVxyXG4ucG9zdCggdGFpS2hvYW5Db250cm9sbGVyLnVwZGF0ZW1hdGtoYXUpO1xyXG5cclxucm91dGVyLnJvdXRlKFwiL2RpZW5kYW4vZGVsZXRlLzppZFwiKVxyXG4uZ2V0KGRpZW5kYW5DLkRlbGV0ZSlcclxuXHJcbnJvdXRlci5yb3V0ZShcIi9kaWVuZGFuL3VwZGF0ZS86aWRcIilcclxuLmdldChkaWVuZGFuQy5nZXRBKVxyXG4ucG9zdChkaWVuZGFuQy51cGRhdGUpXHJcblxyXG5yb3V0ZXIucm91dGUoXCIvdGhvaWtob2FiaWV1Lzp0cmFuZ3RoYWlcIilcclxuLmdldCh0aG9pa2hvYWJpZXUuZ2V0QWxsKVxyXG5yb3V0ZXIucm91dGUoXCIvbG9waG9jLzp0cmFuZ3RoYWlcIilcclxuLmdldChsb3BIb2NPdXRDLmdldEFsbClcclxuXHJcblxyXG5yb3V0ZXJcclxuICAucm91dGUoXCIvaG9jdmllbi86aWRcIilcclxuICAuZ2V0KGxvcEhvY091dEMuZ2V0QWxsaG9jdmllbilcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "taikhoancanhanOutR.js"
      ],
      "names": [
        "router",
        "single",
        "upload",
        "route",
        "get",
        "taiKhoanController",
        "getATk",
        "post",
        "updatedtk",
        "updatematkhau",
        "diendanC",
        "getAll",
        "Delete",
        "getA",
        "update",
        "thoikhoabieu",
        "lopHocOutC",
        "getAllhocvien",
        "module",
        "exports"
      ],
      "mappings": ";;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,MAAM,GAAG,sBAAf;;AACA,IAAIC,MAAM,GAAGC,uBAAOD,MAAP,CAAc,SAAd,CAAb;;AAEAD,MAAM,CAACG,KAAP,CAAa,SAAb,EAAwBC,GAAxB,CAA4BC,+BAAmBC,MAA/C;AACAN,MAAM,CAACG,KAAP,CAAa,eAAb,EAA8BI,IAA9B,CAAmCN,MAAnC,EAA2CI,+BAAmBG,SAA9D;AACAR,MAAM,CAACG,KAAP,CAAa,iBAAb,EAAgCI,IAAhC,CAAsCF,+BAAmBI,aAAzD;AAEAT,MAAM,CAACG,KAAP,CAAa,cAAb,EACCC,GADD,CACKM,4BAASC,MADd,EAECJ,IAFD,CAEOF,+BAAmBI,aAF1B;AAIAT,MAAM,CAACG,KAAP,CAAa,qBAAb,EACCC,GADD,CACKM,4BAASE,MADd;AAGAZ,MAAM,CAACG,KAAP,CAAa,qBAAb,EACCC,GADD,CACKM,4BAASG,IADd,EAECN,IAFD,CAEMG,4BAASI,MAFf;AAIAd,MAAM,CAACG,KAAP,CAAa,0BAAb,EACCC,GADD,CACKW,iCAAaJ,MADlB;AAEAX,MAAM,CAACG,KAAP,CAAa,oBAAb,EACCC,GADD,CACKY,uBAAWL,MADhB;AAIAX,MAAM,CACHG,KADH,CACS,cADT,EAEGC,GAFH,CAEOY,uBAAWC,aAFlB;AAIAC,MAAM,CAACC,OAAP,GAAiBnB,MAAjB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\outsite",
      "sourcesContent": [
        "import { Router } from \"express\";\r\n\r\nimport taiKhoanController from \"../../controllers/outsite/taiKhoancanhanOutC\";\r\nimport diendanC from \"../../controllers/outsite/dienDanOutsiteC\"\r\nimport thoikhoabieu from \"../../controllers/outsite/thoiKhoaBieuOutsiteC\"\r\nimport lopHocOutC from \"../../controllers/outsite/lopHocOutC\"\r\nimport upload from \"../../../helpers/uploadfile\";\r\n\r\nconst router = Router();\r\nvar single = upload.single(\"hinhanh\");\r\n\r\nrouter.route(\"/canhan\").get(taiKhoanController.getATk);\r\nrouter.route(\"/thongtin/:id\").post(single, taiKhoanController.updatedtk);\r\nrouter.route(\"/doimatkhau/:id\").post( taiKhoanController.updatematkhau);\r\n\r\nrouter.route(\"/diendan/:id\")\r\n.get(diendanC.getAll)\r\n.post( taiKhoanController.updatematkhau);\r\n\r\nrouter.route(\"/diendan/delete/:id\")\r\n.get(diendanC.Delete)\r\n\r\nrouter.route(\"/diendan/update/:id\")\r\n.get(diendanC.getA)\r\n.post(diendanC.update)\r\n\r\nrouter.route(\"/thoikhoabieu/:trangthai\")\r\n.get(thoikhoabieu.getAll)\r\nrouter.route(\"/lophoc/:trangthai\")\r\n.get(lopHocOutC.getAll)\r\n\r\n\r\nrouter\r\n  .route(\"/hocvien/:id\")\r\n  .get(lopHocOutC.getAllhocvien)\r\n\r\nmodule.exports = router;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1582527051425
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\\\\outsite\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\\\\outsite\\\\taiKhoancanhanOutC.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite\\taiKhoancanhanOutC.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite\\taiKhoancanhanOutC.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite\\taiKhoancanhanOutC.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite",
        "sourceFileName": "taiKhoancanhanOutC.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _bcryptjs = _interopRequireDefault(require(\"bcryptjs\"));\n\nvar _taiKhoanService = _interopRequireDefault(require(\"../../services/taiKhoanService\"));\n\nvar _baivietService = _interopRequireDefault(require(\"../../services/baivietService\"));\n\nvar d = new Date();\nd.getDate();\nd.getMonth();\nd.getFullYear();\nvar n = d.getDate() + d.getMonth() + d.getFullYear();\n\nvar taiKhoanController =\n/*#__PURE__*/\nfunction () {\n  function taiKhoanController() {\n    (0, _classCallCheck2[\"default\"])(this, taiKhoanController);\n  }\n\n  (0, _createClass2[\"default\"])(taiKhoanController, null, [{\n    key: \"updatematkhau\",\n    value: function updatematkhau(req, res) {\n      var _req$body, matkhaucu, matkhau, id, thetk, salt, hash, data, updatetk;\n\n      return _regenerator[\"default\"].async(function updatematkhau$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _req$body = req.body, matkhaucu = _req$body.matkhaucu, matkhau = _req$body.matkhau;\n              id = req.params.id;\n              _context.prev = 2;\n              _context.next = 5;\n              return _regenerator[\"default\"].awrap(_taiKhoanService[\"default\"].getByID(id));\n\n            case 5:\n              thetk = _context.sent;\n\n              if (thetk) {\n                _context.next = 10;\n                break;\n              }\n\n              res.redirect(\"/?kq=0&mes=Không tìm thấy Id !!\");\n              _context.next = 27;\n              break;\n\n            case 10:\n              if (!_bcryptjs[\"default\"].compareSync(matkhaucu, thetk[0].matkhau)) {\n                _context.next = 26;\n                break;\n              }\n\n              salt = _bcryptjs[\"default\"].genSaltSync(10);\n              hash = _bcryptjs[\"default\"].hashSync(matkhau, salt);\n              data = {\n                matkhau: hash\n              };\n              _context.prev = 14;\n              _context.next = 17;\n              return _regenerator[\"default\"].awrap(_taiKhoanService[\"default\"].UpdateTK(id, data));\n\n            case 17:\n              updatetk = _context.sent;\n\n              if (!updatetk) {\n                res.redirect(\"/taikhoan/canhan?kq=0&mes=C\\u1EADp nh\\u1EADt th\\u1EA5t b\\u1EA1i !!\");\n              } else {\n                res.redirect(\"/taikhoan/canhan?kq=1&mes=C\\u1EADp nh\\u1EADt th\\xE0nh c\\xF4ng !!\");\n              }\n\n              _context.next = 24;\n              break;\n\n            case 21:\n              _context.prev = 21;\n              _context.t0 = _context[\"catch\"](14);\n              return _context.abrupt(\"return\", _context.t0);\n\n            case 24:\n              _context.next = 27;\n              break;\n\n            case 26:\n              res.redirect(\"/taikhoan/canhan?kq=0&mes=Sai mật khẩu !!\");\n\n            case 27:\n              return _context.abrupt(\"return\", error);\n\n            case 30:\n              _context.prev = 30;\n              _context.t1 = _context[\"catch\"](2);\n              return _context.abrupt(\"return\", _context.t1);\n\n            case 33:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[2, 30], [14, 21]]);\n    }\n  }, {\n    key: \"updatedtk\",\n    value: function updatedtk(req, res) {\n      var _req$body2, email, hinhanh, tentaikhoan, alteredtk, id, updatetk;\n\n      return _regenerator[\"default\"].async(function updatedtk$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _req$body2 = req.body, email = _req$body2.email, hinhanh = _req$body2.hinhanh, tentaikhoan = _req$body2.tentaikhoan;\n              email = email.replace(/\\s/g, \"\");\n              tentaikhoan = tentaikhoan.replace(/\\s/g, \"\");\n\n              if (req.file) {\n                hinhanh = n + \"-\" + req.file.originalname;\n              }\n\n              alteredtk = {\n                email: email,\n                tentaikhoan: tentaikhoan,\n                hinhanh: hinhanh\n              };\n              id = req.params.id;\n\n              if (!Number(id)) {\n                console.log(\"ID Not a Number!!!\");\n              }\n\n              _context2.prev = 7;\n              console.log(alteredtk);\n              _context2.next = 11;\n              return _regenerator[\"default\"].awrap(_taiKhoanService[\"default\"].UpdateTK(id, alteredtk));\n\n            case 11:\n              updatetk = _context2.sent;\n\n              if (!updatetk) {\n                res.redirect(\"/taikhoan/canhan?kq=0&mes=C\\u1EADp nh\\u1EADt th\\u1EA5t b\\u1EA1i !!\");\n              } else {\n                res.redirect(\"/taikhoan/canhan/?kq=1&mes=C\\u1EADp nh\\u1EADt th\\xE0nh c\\xF4ng !!\");\n              }\n\n              _context2.next = 18;\n              break;\n\n            case 15:\n              _context2.prev = 15;\n              _context2.t0 = _context2[\"catch\"](7);\n              return _context2.abrupt(\"return\", _context2.t0);\n\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[7, 15]]);\n    }\n  }, {\n    key: \"getATk\",\n    value: function getATk(req, res) {\n      var user, id, data1, baiviet, data;\n      return _regenerator[\"default\"].async(function getATk$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n\n              if (!req.session.user) {\n                _context3.next = 15;\n                break;\n              }\n\n              user = [];\n\n              if (req.session.user) {\n                user = req.session.user;\n              }\n\n              id = req.session.user.id; // const data = req.session.user;\n\n              _context3.next = 7;\n              return _regenerator[\"default\"].awrap(_taiKhoanService[\"default\"].getByID(id));\n\n            case 7:\n              data1 = _context3.sent;\n              _context3.next = 10;\n              return _regenerator[\"default\"].awrap(_baivietService[\"default\"].getNew());\n\n            case 10:\n              baiviet = _context3.sent;\n              data = data1[0];\n\n              if (!data) {\n                res.render(\"../views/outsite/trangcanhan/trangcanhanOut.ejs\", {\n                  data: data,\n                  user: user,\n                  baiviet: baiviet,\n                  phanquyen: phanquyen,\n                  message: 0\n                });\n              } else {\n                res.render(\"../views/outsite/trangcanhan/trangcanhanOut.ejs\", {\n                  data: data,\n                  user: user,\n                  baiviet: baiviet,\n                  message: 1\n                });\n              }\n\n              _context3.next = 16;\n              break;\n\n            case 15:\n              res.redirect(\"/?kq=0&mes=B\\u1EA1n ch\\u01B0a \\u0111\\u0103ng nh\\u1EADp !!\");\n\n            case 16:\n              _context3.next = 21;\n              break;\n\n            case 18:\n              _context3.prev = 18;\n              _context3.t0 = _context3[\"catch\"](0);\n              return _context3.abrupt(\"return\", _context3.t0);\n\n            case 21:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 18]]);\n    }\n  }]);\n  return taiKhoanController;\n}();\n\nvar _default = taiKhoanController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "taiKhoancanhanOutC.js"
      ],
      "names": [
        "d",
        "Date",
        "getDate",
        "getMonth",
        "getFullYear",
        "n",
        "taiKhoanController",
        "req",
        "res",
        "body",
        "matkhaucu",
        "matkhau",
        "id",
        "params",
        "taiKhoanService",
        "getByID",
        "thetk",
        "redirect",
        "bcrypt",
        "compareSync",
        "salt",
        "genSaltSync",
        "hash",
        "hashSync",
        "data",
        "UpdateTK",
        "updatetk",
        "error",
        "email",
        "hinhanh",
        "tentaikhoan",
        "replace",
        "file",
        "originalname",
        "alteredtk",
        "Number",
        "console",
        "log",
        "session",
        "user",
        "data1",
        "baivietService",
        "getNew",
        "baiviet",
        "render",
        "phanquyen",
        "message"
      ],
      "mappings": ";;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA,IAAIA,CAAC,GAAG,IAAIC,IAAJ,EAAR;AACAD,CAAC,CAACE,OAAF;AACAF,CAAC,CAACG,QAAF;AACAH,CAAC,CAACI,WAAF;AACA,IAAIC,CAAC,GAAGL,CAAC,CAACE,OAAF,KAAcF,CAAC,CAACG,QAAF,EAAd,GAA6BH,CAAC,CAACI,WAAF,EAArC;;IAEME,kB;;;;;;;;;kCACuBC,G,EAAKC,G;;;;;;;0BACCD,GAAG,CAACE,I,EAA3BC,S,aAAAA,S,EAAWC,O,aAAAA,O;AACXC,cAAAA,E,GAAOL,GAAG,CAACM,M,CAAXD,E;;;mDAEcE,4BAAgBC,OAAhB,CAAwBH,EAAxB,C;;;AAAdI,cAAAA,K;;kBACDA,K;;;;;AACHR,cAAAA,GAAG,CAACS,QAAJ,CAAa,iCAAb;;;;;mBAEIC,qBAAOC,WAAP,CAAmBT,SAAnB,EAA8BM,KAAK,CAAC,CAAD,CAAL,CAASL,OAAvC,C;;;;;AACES,cAAAA,I,GAAOF,qBAAOG,WAAP,CAAmB,EAAnB,C;AACPC,cAAAA,I,GAAOJ,qBAAOK,QAAP,CAAgBZ,OAAhB,EAAyBS,IAAzB,C;AACPI,cAAAA,I,GAAO;AAAEb,gBAAAA,OAAO,EAAEW;AAAX,e;;;mDAEcR,4BAAgBW,QAAhB,CAAyBb,EAAzB,EAA6BY,IAA7B,C;;;AAAjBE,cAAAA,Q;;AACN,kBAAI,CAACA,QAAL,EAAe;AACblB,gBAAAA,GAAG,CAACS,QAAJ;AACD,eAFD,MAEO;AACLT,gBAAAA,GAAG,CAACS,QAAJ;AACD;;;;;;;;;;;;;;;AAIET,cAAAA,GAAG,CAACS,QAAJ,CAAa,2CAAb;;;+CAEFU,K;;;;;;;;;;;;;;;;8BAMYpB,G,EAAKC,G;;;;;;;2BACYD,GAAG,CAACE,I,EAApCmB,K,cAAAA,K,EAAOC,O,cAAAA,O,EAASC,W,cAAAA,W;AACtBF,cAAAA,KAAK,GAAGA,KAAK,CAACG,OAAN,CAAc,KAAd,EAAqB,EAArB,CAAR;AACAD,cAAAA,WAAW,GAAGA,WAAW,CAACC,OAAZ,CAAoB,KAApB,EAA2B,EAA3B,CAAd;;AACA,kBAAIxB,GAAG,CAACyB,IAAR,EAAc;AACZH,gBAAAA,OAAO,GAAGxB,CAAC,GAAG,GAAJ,GAAUE,GAAG,CAACyB,IAAJ,CAASC,YAA7B;AACD;;AACKC,cAAAA,S,GAAY;AAAEN,gBAAAA,KAAK,EAALA,KAAF;AAASE,gBAAAA,WAAW,EAAXA,WAAT;AAAsBD,gBAAAA,OAAO,EAAPA;AAAtB,e;AACVjB,cAAAA,E,GAAOL,GAAG,CAACM,M,CAAXD,E;;AACR,kBAAI,CAACuB,MAAM,CAACvB,EAAD,CAAX,EAAiB;AACfwB,gBAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD;;;AAECD,cAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;;mDACuBpB,4BAAgBW,QAAhB,CAAyBb,EAAzB,EAA6BsB,SAA7B,C;;;AAAjBR,cAAAA,Q;;AACN,kBAAI,CAACA,QAAL,EAAe;AACblB,gBAAAA,GAAG,CAACS,QAAJ;AACD,eAFD,MAEO;AACLT,gBAAAA,GAAG,CAACS,QAAJ;AACD;;;;;;;;;;;;;;;;;;;2BAMeV,G,EAAKC,G;;;;;;;;mBAEjBD,GAAG,CAAC+B,OAAJ,CAAYC,I;;;;;AACVA,cAAAA,I,GAAO,E;;AACX,kBAAGhC,GAAG,CAAC+B,OAAJ,CAAYC,IAAf,EAAoB;AAClBA,gBAAAA,IAAI,GAAGhC,GAAG,CAAC+B,OAAJ,CAAYC,IAAnB;AACD;;AACK3B,cAAAA,E,GAAKL,GAAG,CAAC+B,OAAJ,CAAYC,IAAZ,CAAiB3B,E,EAC7B;;;mDACqBE,4BAAgBC,OAAhB,CAAwBH,EAAxB,C;;;AAAd4B,cAAAA,K;;mDACgBC,2BAAeC,MAAf,E;;;AAAhBC,cAAAA,O;AACAnB,cAAAA,I,GAAOgB,KAAK,CAAC,CAAD,C;;AAClB,kBAAI,CAAChB,IAAL,EAAW;AACThB,gBAAAA,GAAG,CAACoC,MAAJ,CAAW,iDAAX,EAA8D;AAC5DpB,kBAAAA,IAAI,EAAJA,IAD4D;AACtDe,kBAAAA,IAAI,EAAJA,IADsD;AACjDI,kBAAAA,OAAO,EAAPA,OADiD;AAE5DE,kBAAAA,SAAS,EAATA,SAF4D;AAG5DC,kBAAAA,OAAO,EAAE;AAHmD,iBAA9D;AAKD,eAND,MAMO;AACLtC,gBAAAA,GAAG,CAACoC,MAAJ,CAAW,iDAAX,EAA8D;AAC5DpB,kBAAAA,IAAI,EAAJA,IAD4D;AACvDe,kBAAAA,IAAI,EAAJA,IADuD;AAClDI,kBAAAA,OAAO,EAAPA,OADkD;AAE5DG,kBAAAA,OAAO,EAAE;AAFmD,iBAA9D;AAID;;;;;;AAEDtC,cAAAA,GAAG,CAACS,QAAJ;;;;;;;;;;;;;;;;;;;;;;eAWOX,kB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite",
      "sourcesContent": [
        "import bcrypt from \"bcryptjs\";\r\n\r\nimport taiKhoanService from \"../../services/taiKhoanService\";\r\nimport baivietService from \"../../services/baivietService\";\r\nlet d = new Date();\r\nd.getDate();\r\nd.getMonth();\r\nd.getFullYear();\r\nlet n = d.getDate() + d.getMonth() + d.getFullYear();\r\n\r\nclass taiKhoanController {\r\n  static async updatematkhau(req, res) {\r\n    const { matkhaucu, matkhau } = req.body;\r\n    const { id } = req.params;   \r\n    try {\r\n      const thetk = await taiKhoanService.getByID(id);     \r\n      if (!thetk) {\r\n        res.redirect(\"/?kq=0&mes=Không tìm thấy Id !!\");\r\n      } else {\r\n        if (bcrypt.compareSync(matkhaucu, thetk[0].matkhau)) {\r\n          let salt = bcrypt.genSaltSync(10);\r\n          let hash = bcrypt.hashSync(matkhau, salt);\r\n          let data = { matkhau: hash };\r\n          try {\r\n            const updatetk = await taiKhoanService.UpdateTK(id, data);\r\n            if (!updatetk) {\r\n              res.redirect(`/taikhoan/canhan?kq=0&mes=Cập nhật thất bại !!`);\r\n            } else {\r\n              res.redirect(`/taikhoan/canhan?kq=1&mes=Cập nhật thành công !!`);\r\n            }\r\n          } catch (error) {\r\n            return error;\r\n          }\r\n        } else res.redirect(\"/taikhoan/canhan?kq=0&mes=Sai mật khẩu !!\");\r\n      }\r\n      return error;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  static async updatedtk(req, res) {\r\n    let { email, hinhanh, tentaikhoan } = req.body;\r\n    email = email.replace(/\\s/g, \"\");\r\n    tentaikhoan = tentaikhoan.replace(/\\s/g, \"\");\r\n    if (req.file) {\r\n      hinhanh = n + \"-\" + req.file.originalname;\r\n    }\r\n    const alteredtk = { email, tentaikhoan, hinhanh };\r\n    const { id } = req.params;\r\n    if (!Number(id)) {\r\n      console.log(\"ID Not a Number!!!\");\r\n    }\r\n    try {\r\n      console.log(alteredtk);\r\n      const updatetk = await taiKhoanService.UpdateTK(id, alteredtk);\r\n      if (!updatetk) {\r\n        res.redirect(`/taikhoan/canhan?kq=0&mes=Cập nhật thất bại !!`);\r\n      } else {\r\n        res.redirect(`/taikhoan/canhan/?kq=1&mes=Cập nhật thành công !!`);\r\n      }\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  static async getATk(req, res) {\r\n    try {\r\n      if (req.session.user) {\r\n        let user = []\r\n        if(req.session.user){\r\n          user = req.session.user\r\n        }\r\n        const id = req.session.user.id;\r\n       // const data = req.session.user;\r\n        const data1 = await taiKhoanService.getByID(id);        \r\n        const baiviet = await baivietService.getNew();\r\n        const data = data1[0]\r\n        if (!data) {\r\n          res.render(\"../views/outsite/trangcanhan/trangcanhanOut.ejs\", {\r\n            data, user,baiviet,\r\n            phanquyen,\r\n            message: 0\r\n          });\r\n        } else {\r\n          res.render(\"../views/outsite/trangcanhan/trangcanhanOut.ejs\", {\r\n            data,user,baiviet,\r\n            message: 1\r\n          });\r\n        }\r\n      } else {\r\n        res.redirect(`/?kq=0&mes=Bạn chưa đăng nhập !!`);\r\n      }\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n\r\n  \r\n}\r\n\r\nexport default taiKhoanController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1587478584407
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\services\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\services\\\\taiKhoanService.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services\\taiKhoanService.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services\\taiKhoanService.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services\\taiKhoanService.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services",
        "sourceFileName": "taiKhoanService.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _models = _interopRequireDefault(require(\"../../Model/models\"));\n\nvar TaiKhoanService =\n/*#__PURE__*/\nfunction () {\n  function TaiKhoanService() {\n    (0, _classCallCheck2[\"default\"])(this, TaiKhoanService);\n  }\n\n  (0, _createClass2[\"default\"])(TaiKhoanService, null, [{\n    key: \"getAllTaiKhoan\",\n    value: function getAllTaiKhoan(quyenhang) {\n      return _regenerator[\"default\"].async(function getAllTaiKhoan$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].taikhoan.findAll({\n                where: {\n                  quyenhang: quyenhang\n                }\n              }));\n\n            case 3:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              throw _context.t0;\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"getAllquyen\",\n    value: function getAllquyen(quyenhang) {\n      return _regenerator[\"default\"].async(function getAllquyen$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].phanquyen.findAll({\n                where: {\n                  quyenhang: quyenhang\n                }\n              }));\n\n            case 3:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              throw _context2.t0;\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"getByID\",\n    value: function getByID(id) {\n      return _regenerator[\"default\"].async(function getByID$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].taikhoan.findAll({\n                where: {\n                  id: id\n                }\n              }));\n\n            case 3:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 6:\n              _context3.prev = 6;\n              _context3.t0 = _context3[\"catch\"](0);\n              throw _context3.t0;\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"deleteTK\",\n    value: function deleteTK(id) {\n      return _regenerator[\"default\"].async(function deleteTK$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].taikhoan.destroy({\n                where: {\n                  id: id\n                }\n              }));\n\n            case 3:\n              return _context4.abrupt(\"return\", _context4.sent);\n\n            case 6:\n              _context4.prev = 6;\n              _context4.t0 = _context4[\"catch\"](0);\n              throw _context4.t0;\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"SaveTK\",\n    value: function SaveTK(data) {\n      return _regenerator[\"default\"].async(function SaveTK$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].taikhoan.create(data));\n\n            case 3:\n              return _context5.abrupt(\"return\", _context5.sent);\n\n            case 6:\n              _context5.prev = 6;\n              _context5.t0 = _context5[\"catch\"](0);\n              throw _context5.t0;\n\n            case 9:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"UpdateTK\",\n    value: function UpdateTK(id, data) {\n      var tk;\n      return _regenerator[\"default\"].async(function UpdateTK$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].taikhoan.findOne({\n                where: {\n                  id: id\n                }\n              }));\n\n            case 3:\n              tk = _context6.sent;\n\n              if (!tk) {\n                _context6.next = 8;\n                break;\n              }\n\n              _context6.next = 7;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].taikhoan.update(data, {\n                where: {\n                  id: Number(id)\n                }\n              }));\n\n            case 7:\n              return _context6.abrupt(\"return\", _context6.sent);\n\n            case 8:\n              return _context6.abrupt(\"return\", null);\n\n            case 11:\n              _context6.prev = 11;\n              _context6.t0 = _context6[\"catch\"](0);\n              throw _context6.t0;\n\n            case 14:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[0, 11]]);\n    }\n  }, {\n    key: \"add\",\n    value: function add(data) {\n      var email, tk;\n      return _regenerator[\"default\"].async(function add$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              email = data.email;\n              _context7.next = 4;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].taikhoan.findOne({\n                where: {\n                  email: email\n                }\n              }));\n\n            case 4:\n              tk = _context7.sent;\n\n              if (!tk) {\n                _context7.next = 9;\n                break;\n              }\n\n              return _context7.abrupt(\"return\", null);\n\n            case 9:\n              _context7.next = 11;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].taikhoan.create(data));\n\n            case 11:\n              return _context7.abrupt(\"return\", _context7.sent);\n\n            case 12:\n              _context7.next = 17;\n              break;\n\n            case 14:\n              _context7.prev = 14;\n              _context7.t0 = _context7[\"catch\"](0);\n              throw _context7.t0;\n\n            case 17:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, [[0, 14]]);\n    }\n  }, {\n    key: \"getBylogin\",\n    value: function getBylogin(email) {\n      return _regenerator[\"default\"].async(function getBylogin$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              _context8.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].taikhoan.findAll({\n                where: {\n                  email: email\n                }\n              }));\n\n            case 3:\n              return _context8.abrupt(\"return\", _context8.sent);\n\n            case 6:\n              _context8.prev = 6;\n              _context8.t0 = _context8[\"catch\"](0);\n              throw _context8.t0;\n\n            case 9:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }]);\n  return TaiKhoanService;\n}();\n\nvar _default = TaiKhoanService;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhaUtob2FuU2VydmljZS5qcyJdLCJuYW1lcyI6WyJUYWlLaG9hblNlcnZpY2UiLCJxdXllbmhhbmciLCJkYXRhYmFzZSIsInRhaWtob2FuIiwiZmluZEFsbCIsIndoZXJlIiwicGhhbnF1eWVuIiwiaWQiLCJkZXN0cm95IiwiZGF0YSIsImNyZWF0ZSIsImZpbmRPbmUiLCJ0ayIsInVwZGF0ZSIsIk51bWJlciIsImVtYWlsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7SUFFTUEsZTs7Ozs7Ozs7O21DQUN3QkMsUzs7Ozs7OzttREFFWEMsbUJBQVNDLFFBQVQsQ0FBa0JDLE9BQWxCLENBQTBCO0FBQ3JDQyxnQkFBQUEsS0FBSyxFQUFFO0FBQUVKLGtCQUFBQSxTQUFTLEVBQVRBO0FBQUY7QUFEOEIsZUFBMUIsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztnQ0FPUUEsUzs7Ozs7OzttREFFUkMsbUJBQVNJLFNBQVQsQ0FBbUJGLE9BQW5CLENBQTJCO0FBQ3RDQyxnQkFBQUEsS0FBSyxFQUFFO0FBQUVKLGtCQUFBQSxTQUFTLEVBQVRBO0FBQUY7QUFEK0IsZUFBM0IsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs0QkFPSU0sRTs7Ozs7OzttREFFSkwsbUJBQVNDLFFBQVQsQ0FBa0JDLE9BQWxCLENBQTBCO0FBQ3JDQyxnQkFBQUEsS0FBSyxFQUFFO0FBQUVFLGtCQUFBQSxFQUFFLEVBQUZBO0FBQUY7QUFEOEIsZUFBMUIsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs2QkFRS0EsRTs7Ozs7OzttREFFTEwsbUJBQVNDLFFBQVQsQ0FBa0JLLE9BQWxCLENBQTBCO0FBQ3JDSCxnQkFBQUEsS0FBSyxFQUFFO0FBQUVFLGtCQUFBQSxFQUFFLEVBQUZBO0FBQUY7QUFEOEIsZUFBMUIsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsyQkFPR0UsSTs7Ozs7OzttREFFSFAsbUJBQVNDLFFBQVQsQ0FBa0JPLE1BQWxCLENBQXlCRCxJQUF6QixDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OzZCQU1LRixFLEVBQUlFLEk7Ozs7Ozs7O21EQUVQUCxtQkFBU0MsUUFBVCxDQUFrQlEsT0FBbEIsQ0FBMEI7QUFDdkNOLGdCQUFBQSxLQUFLLEVBQUU7QUFBRUUsa0JBQUFBLEVBQUUsRUFBRkE7QUFBRjtBQURnQyxlQUExQixDOzs7QUFBWEssY0FBQUEsRTs7bUJBR0FBLEU7Ozs7OzttREFDV1YsbUJBQVNDLFFBQVQsQ0FBa0JVLE1BQWxCLENBQXlCSixJQUF6QixFQUErQjtBQUMxQ0osZ0JBQUFBLEtBQUssRUFBRTtBQUFFRSxrQkFBQUEsRUFBRSxFQUFFTyxNQUFNLENBQUNQLEVBQUQ7QUFBWjtBQURtQyxlQUEvQixDOzs7Ozs7Z0RBSVIsSTs7Ozs7Ozs7Ozs7Ozs7Ozt3QkFNTUUsSTs7Ozs7OztBQUVUTSxjQUFBQSxLLEdBQVFOLElBQUksQ0FBQ00sSzs7bURBQ0ZiLG1CQUFTQyxRQUFULENBQWtCUSxPQUFsQixDQUEwQjtBQUN2Q04sZ0JBQUFBLEtBQUssRUFBRTtBQUFFVSxrQkFBQUEsS0FBSyxFQUFMQTtBQUFGO0FBRGdDLGVBQTFCLEM7OztBQUFYSCxjQUFBQSxFOzttQkFHQUEsRTs7Ozs7Z0RBQ0ssSTs7OzttREFDV1YsbUJBQVNDLFFBQVQsQ0FBa0JPLE1BQWxCLENBQXlCRCxJQUF6QixDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrQkFLQU0sSzs7Ozs7OzttREFFUGIsbUJBQVNDLFFBQVQsQ0FBa0JDLE9BQWxCLENBQTBCO0FBQ3JDQyxnQkFBQUEsS0FBSyxFQUFFO0FBQUVVLGtCQUFBQSxLQUFLLEVBQUxBO0FBQUY7QUFEOEIsZUFBMUIsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2VBU0pmLGUiLCJzb3VyY2VSb290IjoiRDpcXEx1YW5WYW5cXEx1YW5WYW5EMlxcdHJ1bmd0YW1fbGFuNFxcYXBwc1xcc2VydmljZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZGF0YWJhc2UgZnJvbSBcIi4uLy4uL01vZGVsL21vZGVsc1wiO1xyXG5cclxuY2xhc3MgVGFpS2hvYW5TZXJ2aWNlIHtcclxuICBzdGF0aWMgYXN5bmMgZ2V0QWxsVGFpS2hvYW4ocXV5ZW5oYW5nKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICByZXR1cm4gYXdhaXQgZGF0YWJhc2UudGFpa2hvYW4uZmluZEFsbCh7XHJcbiAgICAgICAgd2hlcmU6IHsgcXV5ZW5oYW5nIH1cclxuICAgICAgfSk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9XHJcbiAgc3RhdGljIGFzeW5jIGdldEFsbHF1eWVuKHF1eWVuaGFuZykge1xyXG4gICAgdHJ5IHtcclxuICAgICAgcmV0dXJuIGF3YWl0IGRhdGFiYXNlLnBoYW5xdXllbi5maW5kQWxsKHtcclxuICAgICAgICB3aGVyZTogeyBxdXllbmhhbmcgfVxyXG4gICAgICB9KTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG4gIH1cclxuICBzdGF0aWMgYXN5bmMgZ2V0QnlJRChpZCkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgcmV0dXJuIGF3YWl0IGRhdGFiYXNlLnRhaWtob2FuLmZpbmRBbGwoe1xyXG4gICAgICAgIHdoZXJlOiB7IGlkIH1cclxuICAgICAgfSk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHN0YXRpYyBhc3luYyBkZWxldGVUSyhpZCkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgcmV0dXJuIGF3YWl0IGRhdGFiYXNlLnRhaWtob2FuLmRlc3Ryb3koe1xyXG4gICAgICAgIHdoZXJlOiB7IGlkIH1cclxuICAgICAgfSk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9XHJcbiAgc3RhdGljIGFzeW5jIFNhdmVUSyhkYXRhKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICByZXR1cm4gYXdhaXQgZGF0YWJhc2UudGFpa2hvYW4uY3JlYXRlKGRhdGEpO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgYXN5bmMgVXBkYXRlVEsoaWQsIGRhdGEpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGxldCB0ayA9IGF3YWl0IGRhdGFiYXNlLnRhaWtob2FuLmZpbmRPbmUoe1xyXG4gICAgICAgIHdoZXJlOiB7IGlkIH1cclxuICAgICAgfSk7XHJcbiAgICAgIGlmICh0aykge1xyXG4gICAgICAgIHJldHVybiBhd2FpdCBkYXRhYmFzZS50YWlraG9hbi51cGRhdGUoZGF0YSwge1xyXG4gICAgICAgICAgd2hlcmU6IHsgaWQ6IE51bWJlcihpZCkgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgYXN5bmMgYWRkKGRhdGEpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGxldCBlbWFpbCA9IGRhdGEuZW1haWw7XHJcbiAgICAgIGxldCB0ayA9IGF3YWl0IGRhdGFiYXNlLnRhaWtob2FuLmZpbmRPbmUoe1xyXG4gICAgICAgIHdoZXJlOiB7IGVtYWlsIH1cclxuICAgICAgfSk7XHJcbiAgICAgIGlmICh0aykge1xyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICB9IGVsc2UgcmV0dXJuIGF3YWl0IGRhdGFiYXNlLnRhaWtob2FuLmNyZWF0ZShkYXRhKTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG4gIH1cclxuICBzdGF0aWMgYXN5bmMgZ2V0Qnlsb2dpbihlbWFpbCkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgcmV0dXJuIGF3YWl0IGRhdGFiYXNlLnRhaWtob2FuLmZpbmRBbGwoe1xyXG4gICAgICAgIHdoZXJlOiB7IGVtYWlsIH1cclxuICAgICAgfSk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFRhaUtob2FuU2VydmljZTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "taiKhoanService.js"
      ],
      "names": [
        "TaiKhoanService",
        "quyenhang",
        "database",
        "taikhoan",
        "findAll",
        "where",
        "phanquyen",
        "id",
        "destroy",
        "data",
        "create",
        "findOne",
        "tk",
        "update",
        "Number",
        "email"
      ],
      "mappings": ";;;;;;;;;;;;;;;AAAA;;IAEMA,e;;;;;;;;;mCACwBC,S;;;;;;;mDAEXC,mBAASC,QAAT,CAAkBC,OAAlB,CAA0B;AACrCC,gBAAAA,KAAK,EAAE;AAAEJ,kBAAAA,SAAS,EAATA;AAAF;AAD8B,eAA1B,C;;;;;;;;;;;;;;;;;;;gCAOQA,S;;;;;;;mDAERC,mBAASI,SAAT,CAAmBF,OAAnB,CAA2B;AACtCC,gBAAAA,KAAK,EAAE;AAAEJ,kBAAAA,SAAS,EAATA;AAAF;AAD+B,eAA3B,C;;;;;;;;;;;;;;;;;;;4BAOIM,E;;;;;;;mDAEJL,mBAASC,QAAT,CAAkBC,OAAlB,CAA0B;AACrCC,gBAAAA,KAAK,EAAE;AAAEE,kBAAAA,EAAE,EAAFA;AAAF;AAD8B,eAA1B,C;;;;;;;;;;;;;;;;;;;6BAQKA,E;;;;;;;mDAELL,mBAASC,QAAT,CAAkBK,OAAlB,CAA0B;AACrCH,gBAAAA,KAAK,EAAE;AAAEE,kBAAAA,EAAE,EAAFA;AAAF;AAD8B,eAA1B,C;;;;;;;;;;;;;;;;;;;2BAOGE,I;;;;;;;mDAEHP,mBAASC,QAAT,CAAkBO,MAAlB,CAAyBD,IAAzB,C;;;;;;;;;;;;;;;;;;;6BAMKF,E,EAAIE,I;;;;;;;;mDAEPP,mBAASC,QAAT,CAAkBQ,OAAlB,CAA0B;AACvCN,gBAAAA,KAAK,EAAE;AAAEE,kBAAAA,EAAE,EAAFA;AAAF;AADgC,eAA1B,C;;;AAAXK,cAAAA,E;;mBAGAA,E;;;;;;mDACWV,mBAASC,QAAT,CAAkBU,MAAlB,CAAyBJ,IAAzB,EAA+B;AAC1CJ,gBAAAA,KAAK,EAAE;AAAEE,kBAAAA,EAAE,EAAEO,MAAM,CAACP,EAAD;AAAZ;AADmC,eAA/B,C;;;;;;gDAIR,I;;;;;;;;;;;;;;;;wBAMME,I;;;;;;;AAETM,cAAAA,K,GAAQN,IAAI,CAACM,K;;mDACFb,mBAASC,QAAT,CAAkBQ,OAAlB,CAA0B;AACvCN,gBAAAA,KAAK,EAAE;AAAEU,kBAAAA,KAAK,EAALA;AAAF;AADgC,eAA1B,C;;;AAAXH,cAAAA,E;;mBAGAA,E;;;;;gDACK,I;;;;mDACWV,mBAASC,QAAT,CAAkBO,MAAlB,CAAyBD,IAAzB,C;;;;;;;;;;;;;;;;;;;;;;;+BAKAM,K;;;;;;;mDAEPb,mBAASC,QAAT,CAAkBC,OAAlB,CAA0B;AACrCC,gBAAAA,KAAK,EAAE;AAAEU,kBAAAA,KAAK,EAALA;AAAF;AAD8B,eAA1B,C;;;;;;;;;;;;;;;;;;;;;eASJf,e",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services",
      "sourcesContent": [
        "import database from \"../../Model/models\";\r\n\r\nclass TaiKhoanService {\r\n  static async getAllTaiKhoan(quyenhang) {\r\n    try {\r\n      return await database.taikhoan.findAll({\r\n        where: { quyenhang }\r\n      });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  static async getAllquyen(quyenhang) {\r\n    try {\r\n      return await database.phanquyen.findAll({\r\n        where: { quyenhang }\r\n      });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  static async getByID(id) {\r\n    try {\r\n      return await database.taikhoan.findAll({\r\n        where: { id }\r\n      });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async deleteTK(id) {\r\n    try {\r\n      return await database.taikhoan.destroy({\r\n        where: { id }\r\n      });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  static async SaveTK(data) {\r\n    try {\r\n      return await database.taikhoan.create(data);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async UpdateTK(id, data) {\r\n    try {\r\n      let tk = await database.taikhoan.findOne({\r\n        where: { id }\r\n      });\r\n      if (tk) {\r\n        return await database.taikhoan.update(data, {\r\n          where: { id: Number(id) }\r\n        });\r\n      }\r\n      return null;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async add(data) {\r\n    try {\r\n      let email = data.email;\r\n      let tk = await database.taikhoan.findOne({\r\n        where: { email }\r\n      });\r\n      if (tk) {\r\n        return null;\r\n      } else return await database.taikhoan.create(data);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  static async getBylogin(email) {\r\n    try {\r\n      return await database.taikhoan.findAll({\r\n        where: { email }\r\n      });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default TaiKhoanService;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581007425478
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\\\\outsite\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\\\\outsite\\\\dienDanOutsiteC.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite\\dienDanOutsiteC.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite\\dienDanOutsiteC.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite\\dienDanOutsiteC.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite",
        "sourceFileName": "dienDanOutsiteC.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _dienDanService = _interopRequireDefault(require(\"../../services/dienDanService\"));\n\nvar _baivietService = _interopRequireDefault(require(\"../../services/baivietService\"));\n\nvar diendanController =\n/*#__PURE__*/\nfunction () {\n  function diendanController() {\n    (0, _classCallCheck2[\"default\"])(this, diendanController);\n  }\n\n  (0, _createClass2[\"default\"])(diendanController, null, [{\n    key: \"getAll\",\n    value: function getAll(req, res) {\n      var user, id, data1, baiviet, data;\n      return _regenerator[\"default\"].async(function getAll$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!req.session.user) {\n                _context.next = 21;\n                break;\n              }\n\n              _context.prev = 1;\n              user = [];\n\n              if (req.session.user) {\n                user = req.session.user;\n              }\n\n              id = req.params.id;\n              _context.next = 7;\n              return _regenerator[\"default\"].awrap(_dienDanService[\"default\"].gettheotk(id));\n\n            case 7:\n              data1 = _context.sent;\n              _context.next = 10;\n              return _regenerator[\"default\"].awrap(_baivietService[\"default\"].getNew());\n\n            case 10:\n              baiviet = _context.sent;\n              data = data1[0];\n\n              if (data.length > 0) {\n                res.render(\"../views/outsite/trangcanhan/listforum.ejs\", {\n                  data: data,\n                  baiviet: baiviet,\n                  user: user\n                });\n              } else {\n                res.render(\"../views/outsite/trangcanhan/listforum.ejs\", {\n                  data: data,\n                  baiviet: baiviet,\n                  user: user,\n                  message: \"Khong co hoc vien nao\"\n                });\n              }\n\n              return _context.abrupt(\"return\", 0);\n\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](1);\n              return _context.abrupt(\"return\", _context.t0);\n\n            case 19:\n              _context.next = 22;\n              break;\n\n            case 21:\n              return _context.abrupt(\"return\", res.redirect(\"/\"));\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 16]]);\n    }\n  }, {\n    key: \"Delete\",\n    value: function Delete(req, res) {\n      var id, Xoa;\n      return _regenerator[\"default\"].async(function Delete$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!req.session.user) {\n                _context2.next = 16;\n                break;\n              }\n\n              id = req.params.id;\n\n              if (!Number(id)) {\n                console.log(\"ID not Number !!!\");\n                res.redirect(\"/taikhoan/canhan?kq=0&mes=Có lỗi!!!\");\n              }\n\n              _context2.prev = 3;\n              _context2.next = 6;\n              return _regenerator[\"default\"].awrap(_dienDanService[\"default\"][\"delete\"](id));\n\n            case 6:\n              Xoa = _context2.sent;\n\n              if (Xoa) {\n                res.redirect(\"/taikhoan/canhan?kq=1&mes=Thành Công!!\");\n              } else {\n                res.redirect(\"/taikhoan/canhan?kq=0&mes=Có lỗi!!!\");\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](3);\n              return _context2.abrupt(\"return\", _context2.t0);\n\n            case 14:\n              _context2.next = 17;\n              break;\n\n            case 16:\n              return _context2.abrupt(\"return\", res.redirect(\"/\"));\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[3, 11]]);\n    }\n  }, {\n    key: \"update\",\n    value: function update(req, res) {\n      var altered, id, update;\n      return _regenerator[\"default\"].async(function update$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!req.session.user) {\n                _context3.next = 16;\n                break;\n              }\n\n              altered = req.body;\n              id = req.params.id;\n              _context3.prev = 3;\n              _context3.next = 6;\n              return _regenerator[\"default\"].awrap(_dienDanService[\"default\"].Update(id, altered));\n\n            case 6:\n              update = _context3.sent;\n\n              if (!update) {\n                res.redirect(\"/taikhoan/diendan/\" + id + \"?kq=0&mes=Kh\\xF4ng th\\xE0nh c\\xF4ng !!!\");\n              } else {\n                res.redirect(\"/taikhoan/diendan/\" + id + \"?kq=1&mes=C\\u1EADp nh\\u1EADt th\\xE0nh c\\xF4ng.\");\n              }\n\n              return _context3.abrupt(\"return\");\n\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](3);\n              return _context3.abrupt(\"return\", _context3.t0);\n\n            case 14:\n              _context3.next = 17;\n              break;\n\n            case 16:\n              req.redirect(\"/\");\n\n            case 17:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[3, 11]]);\n    }\n  }, {\n    key: \"getA\",\n    value: function getA(req, res) {\n      var user, id, data1, baiviet, data;\n      return _regenerator[\"default\"].async(function getA$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!req.session.user) {\n                _context4.next = 21;\n                break;\n              }\n\n              _context4.prev = 1;\n              user = [];\n\n              if (req.session.user) {\n                user = req.session.user;\n              }\n\n              id = req.params.id;\n              _context4.next = 7;\n              return _regenerator[\"default\"].awrap(_dienDanService[\"default\"].getByID(id));\n\n            case 7:\n              data1 = _context4.sent;\n              _context4.next = 10;\n              return _regenerator[\"default\"].awrap(_baivietService[\"default\"].getNew());\n\n            case 10:\n              baiviet = _context4.sent;\n              data = data1[0][0];\n\n              if (data.length > 0) {\n                res.render(\"../views/outsite/trangcanhan/updatebaiviet.ejs\", {\n                  data: data,\n                  baiviet: baiviet,\n                  user: user\n                });\n              } else {\n                res.render(\"../views/outsite/trangcanhan/updatebaiviet.ejs\", {\n                  data: data,\n                  baiviet: baiviet,\n                  user: user\n                });\n              }\n\n              return _context4.abrupt(\"return\", 0);\n\n            case 16:\n              _context4.prev = 16;\n              _context4.t0 = _context4[\"catch\"](1);\n              return _context4.abrupt(\"return\", _context4.t0);\n\n            case 19:\n              _context4.next = 22;\n              break;\n\n            case 21:\n              return _context4.abrupt(\"return\", res.redirect(\"/\"));\n\n            case 22:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[1, 16]]);\n    }\n  }]);\n  return diendanController;\n}();\n\nvar _default = diendanController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "dienDanOutsiteC.js"
      ],
      "names": [
        "diendanController",
        "req",
        "res",
        "session",
        "user",
        "id",
        "params",
        "diendanService",
        "gettheotk",
        "data1",
        "baivietService",
        "getNew",
        "baiviet",
        "data",
        "length",
        "render",
        "message",
        "redirect",
        "Number",
        "console",
        "log",
        "Xoa",
        "altered",
        "body",
        "Update",
        "update",
        "getByID"
      ],
      "mappings": ";;;;;;;;;;;;;;;AAAA;;AACA;;IACMA,iB;;;;;;;;;2BACgBC,G,EAAKC,G;;;;;;mBACnBD,GAAG,CAACE,OAAJ,CAAYC,I;;;;;;AAERA,cAAAA,I,GAAO,E;;AACX,kBAAIH,GAAG,CAACE,OAAJ,CAAYC,IAAhB,EAAsB;AACpBA,gBAAAA,IAAI,GAAGH,GAAG,CAACE,OAAJ,CAAYC,IAAnB;AACD;;AACKC,cAAAA,E,GAAOJ,GAAG,CAACK,M,CAAXD,E;;mDACcE,2BAAeC,SAAf,CAAyBH,EAAzB,C;;;AAAdI,cAAAA,K;;mDACgBC,2BAAeC,MAAf,E;;;AAAhBC,cAAAA,O;AACFC,cAAAA,I,GAAOJ,KAAK,CAAC,CAAD,C;;AAChB,kBAAII,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AACnBZ,gBAAAA,GAAG,CAACa,MAAJ,CAAW,4CAAX,EAAyD;AACvDF,kBAAAA,IAAI,EAAJA,IADuD;AAClDD,kBAAAA,OAAO,EAAPA,OADkD;AAEvDR,kBAAAA,IAAI,EAAJA;AAFuD,iBAAzD;AAID,eALD,MAKO;AACLF,gBAAAA,GAAG,CAACa,MAAJ,CAAW,4CAAX,EAAyD;AACvDF,kBAAAA,IAAI,EAAJA,IADuD;AAClDD,kBAAAA,OAAO,EAAPA,OADkD;AAEvDR,kBAAAA,IAAI,EAAJA,IAFuD;AAGvDY,kBAAAA,OAAO,EAAE;AAH8C,iBAAzD;AAKD;;+CACM,C;;;;;;;;;;;;+CAKFd,GAAG,CAACe,QAAJ,CAAa,GAAb,C;;;;;;;;;;;2BAIShB,G,EAAKC,G;;;;;;mBACnBD,GAAG,CAACE,OAAJ,CAAYC,I;;;;;AACRC,cAAAA,E,GAAOJ,GAAG,CAACK,M,CAAXD,E;;AACN,kBAAI,CAACa,MAAM,CAACb,EAAD,CAAX,EAAiB;AACfc,gBAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAlB,gBAAAA,GAAG,CAACe,QAAJ,CAAa,qCAAb;AACD;;;;mDAEiBV,qCAAsBF,EAAtB,C;;;AAAZgB,cAAAA,G;;AACJ,kBAAIA,GAAJ,EAAS;AACPnB,gBAAAA,GAAG,CAACe,QAAJ,CAAa,wCAAb;AACD,eAFD,MAEO;AACLf,gBAAAA,GAAG,CAACe,QAAJ,CAAa,qCAAb;AACD;;;;;;;;;;;;;;gDAMIf,GAAG,CAACe,QAAJ,CAAa,GAAb,C;;;;;;;;;;;2BAIShB,G,EAAKC,G;;;;;;mBACnBD,GAAG,CAACE,OAAJ,CAAYC,I;;;;;AACVkB,cAAAA,O,GAAUrB,GAAG,CAACsB,I;AACZlB,cAAAA,E,GAAOJ,GAAG,CAACK,M,CAAXD,E;;;mDAGeE,2BAAeiB,MAAf,CAAsBnB,EAAtB,EAA0BiB,OAA1B,C;;;AAAfG,cAAAA,M;;AAEN,kBAAI,CAACA,MAAL,EAAa;AACXvB,gBAAAA,GAAG,CAACe,QAAJ,CAAa,uBAAsBZ,EAAtB,4CAAb;AACD,eAFD,MAEO;AACLH,gBAAAA,GAAG,CAACe,QAAJ,CAAa,uBAAsBZ,EAAtB,mDAAb;AACD;;;;;;;;;;;;;;AAMHJ,cAAAA,GAAG,CAACgB,QAAJ,CAAa,GAAb;;;;;;;;;;;yBAIgBhB,G,EAAKC,G;;;;;;mBACjBD,GAAG,CAACE,OAAJ,CAAYC,I;;;;;;AAERA,cAAAA,I,GAAO,E;;AACX,kBAAIH,GAAG,CAACE,OAAJ,CAAYC,IAAhB,EAAsB;AACpBA,gBAAAA,IAAI,GAAGH,GAAG,CAACE,OAAJ,CAAYC,IAAnB;AACD;;AACKC,cAAAA,E,GAAOJ,GAAG,CAACK,M,CAAXD,E;;mDACcE,2BAAemB,OAAf,CAAuBrB,EAAvB,C;;;AAAdI,cAAAA,K;;mDACgBC,2BAAeC,MAAf,E;;;AAAhBC,cAAAA,O;AACFC,cAAAA,I,GAAOJ,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,C;;AACX,kBAAII,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AACnBZ,gBAAAA,GAAG,CAACa,MAAJ,CAAW,gDAAX,EAA6D;AAC3DF,kBAAAA,IAAI,EAAJA,IAD2D;AACtDD,kBAAAA,OAAO,EAAPA,OADsD;AAE3DR,kBAAAA,IAAI,EAAJA;AAF2D,iBAA7D;AAID,eALD,MAKO;AACLF,gBAAAA,GAAG,CAACa,MAAJ,CAAW,gDAAX,EAA6D;AAC3DF,kBAAAA,IAAI,EAAJA,IAD2D;AACtDD,kBAAAA,OAAO,EAAPA,OADsD;AAE3DR,kBAAAA,IAAI,EAAJA;AAF2D,iBAA7D;AAID;;gDACM,C;;;;;;;;;;;;gDAKFF,GAAG,CAACe,QAAJ,CAAa,GAAb,C;;;;;;;;;;;;;eAKEjB,iB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite",
      "sourcesContent": [
        "import diendanService from \"../../services/dienDanService\";\r\nimport baivietService from \"../../services/baivietService\";\r\nclass diendanController {\r\n  static async getAll(req, res) {\r\n    if (req.session.user) {\r\n      try {\r\n        let user = [];\r\n        if (req.session.user) {\r\n          user = req.session.user;\r\n        }\r\n        let { id } = req.params;\r\n        const data1 = await diendanService.gettheotk(id);     \r\n        const baiviet = await baivietService.getNew(); \r\n        let data = data1[0];\r\n        if (data.length > 0) {\r\n          res.render(\"../views/outsite/trangcanhan/listforum.ejs\", {\r\n            data,baiviet,\r\n            user\r\n          });\r\n        } else {\r\n          res.render(\"../views/outsite/trangcanhan/listforum.ejs\", {\r\n            data,baiviet,\r\n            user,\r\n            message: \"Khong co hoc vien nao\"\r\n          });\r\n        }\r\n        return 0;\r\n      } catch (error) {\r\n        return error;\r\n      }\r\n    } else {\r\n      return res.redirect(\"/\");\r\n    }\r\n  }\r\n\r\n  static async Delete(req, res) {\r\n    if (req.session.user) {\r\n      let { id } = req.params;\r\n      if (!Number(id)) {\r\n        console.log(\"ID not Number !!!\");\r\n        res.redirect(\"/taikhoan/canhan?kq=0&mes=Có lỗi!!!\");\r\n      }\r\n      try {\r\n        let Xoa = await diendanService.delete(id);\r\n        if (Xoa) {\r\n          res.redirect(\"/taikhoan/canhan?kq=1&mes=Thành Công!!\");\r\n        } else {\r\n          res.redirect(\"/taikhoan/canhan?kq=0&mes=Có lỗi!!!\");\r\n        }\r\n        return;\r\n      } catch (error) {\r\n        return error;\r\n      }\r\n    } else {\r\n      return res.redirect(\"/\");\r\n    }\r\n  }\r\n\r\n  static async update(req, res) {\r\n    if (req.session.user) {\r\n    const altered = req.body;\r\n    const { id } = req.params;\r\n    try {\r\n         \r\n      const update = await diendanService.Update(id, altered);\r\n      \r\n      if (!update) {\r\n        res.redirect(`/taikhoan/diendan/`+ id +`?kq=0&mes=Không thành công !!!`);\r\n      } else {\r\n        res.redirect(`/taikhoan/diendan/`+ id +`?kq=1&mes=Cập nhật thành công.`);\r\n      }\r\n      return;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  } else {\r\n    req.redirect(\"/\")\r\n  }\r\n  }\r\n\r\n  static async getA(req, res) {\r\n    if (req.session.user) {\r\n      try {\r\n        let user = [];\r\n        if (req.session.user) {\r\n          user = req.session.user;\r\n        }\r\n        let { id } = req.params;\r\n        const data1 = await diendanService.getByID(id);     \r\n        const baiviet = await baivietService.getNew();\r\n        let data = data1[0][0];              \r\n        if (data.length > 0) {\r\n          res.render(\"../views/outsite/trangcanhan/updatebaiviet.ejs\", {\r\n            data,baiviet,\r\n            user\r\n          });\r\n        } else {\r\n          res.render(\"../views/outsite/trangcanhan/updatebaiviet.ejs\", {\r\n            data,baiviet,\r\n            user\r\n          });\r\n        }\r\n        return 0;\r\n      } catch (error) {\r\n        return error;\r\n      }\r\n    } else {\r\n      return res.redirect(\"/\");\r\n    }\r\n  }\r\n}\r\n\r\nexport default diendanController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1587478512611
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\\\\outsite\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\\\\outsite\\\\thoiKhoaBieuOutsiteC.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite\\thoiKhoaBieuOutsiteC.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite\\thoiKhoaBieuOutsiteC.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite\\thoiKhoaBieuOutsiteC.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite",
        "sourceFileName": "thoiKhoaBieuOutsiteC.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _sDate = _interopRequireDefault(require(\"s-date\"));\n\nvar _lopHocService = _interopRequireDefault(require(\"../../services/lopHocService\"));\n\nvar _baivietService = _interopRequireDefault(require(\"../../services/baivietService\"));\n\nvar thoikhoabieuC =\n/*#__PURE__*/\nfunction () {\n  function thoikhoabieuC() {\n    (0, _classCallCheck2[\"default\"])(this, thoikhoabieuC);\n  }\n\n  (0, _createClass2[\"default\"])(thoikhoabieuC, null, [{\n    key: \"getAll\",\n    value: function getAll(req, res) {\n      var user, trangthai, data1, baiviet, data;\n      return _regenerator[\"default\"].async(function getAll$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(req.session.user.quyenhang = \"Giảng Viên\")) {\n                _context.next = 21;\n                break;\n              }\n\n              _context.prev = 1;\n              user = [];\n\n              if (req.session.user) {\n                user = req.session.user;\n              }\n\n              trangthai = req.params.trangthai;\n              _context.next = 7;\n              return _regenerator[\"default\"].awrap(_lopHocService[\"default\"].getAll(trangthai));\n\n            case 7:\n              data1 = _context.sent;\n              _context.next = 10;\n              return _regenerator[\"default\"].awrap(_baivietService[\"default\"].getNew());\n\n            case 10:\n              baiviet = _context.sent;\n              data = data1[0];\n\n              if (data.length > 0) {\n                res.render(\"../views/outsite/trangcanhan/listthoikhoabieuOut.ejs\", {\n                  data: data,\n                  baiviet: baiviet,\n                  user: user,\n                  date: _sDate[\"default\"]\n                });\n              } else {\n                res.render(\"../views/outsite/trangcanhan/listthoikhoabieuOut.ejs\", {\n                  data: data,\n                  baiviet: baiviet,\n                  user: user,\n                  date: _sDate[\"default\"]\n                });\n              }\n\n              return _context.abrupt(\"return\", 0);\n\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](1);\n              return _context.abrupt(\"return\", _context.t0);\n\n            case 19:\n              _context.next = 22;\n              break;\n\n            case 21:\n              return _context.abrupt(\"return\", res.redirect(\"/\"));\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 16]]);\n    }\n  }]);\n  return thoikhoabieuC;\n}();\n\nvar _default = thoikhoabieuC;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRob2lLaG9hQmlldU91dHNpdGVDLmpzIl0sIm5hbWVzIjpbInRob2lraG9hYmlldUMiLCJyZXEiLCJyZXMiLCJzZXNzaW9uIiwidXNlciIsInF1eWVuaGFuZyIsInRyYW5ndGhhaSIsInBhcmFtcyIsImxvcEhvY1NlcnZpY2UiLCJnZXRBbGwiLCJkYXRhMSIsImJhaXZpZXRTZXJ2aWNlIiwiZ2V0TmV3IiwiYmFpdmlldCIsImRhdGEiLCJsZW5ndGgiLCJyZW5kZXIiLCJkYXRlIiwicmVkaXJlY3QiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztJQUNNQSxhOzs7Ozs7Ozs7MkJBQ2dCQyxHLEVBQUtDLEc7Ozs7OztvQkFDbEJELEdBQUcsQ0FBQ0UsT0FBSixDQUFZQyxJQUFaLENBQWlCQyxTQUFqQixHQUE2QixZOzs7Ozs7QUFFMUJELGNBQUFBLEksR0FBTyxFOztBQUNYLGtCQUFJSCxHQUFHLENBQUNFLE9BQUosQ0FBWUMsSUFBaEIsRUFBc0I7QUFDcEJBLGdCQUFBQSxJQUFJLEdBQUdILEdBQUcsQ0FBQ0UsT0FBSixDQUFZQyxJQUFuQjtBQUNEOztBQUNHRSxjQUFBQSxTLEdBQVlMLEdBQUcsQ0FBQ00sTUFBSixDQUFXRCxTOzttREFDUEUsMEJBQWNDLE1BQWQsQ0FBcUJILFNBQXJCLEM7OztBQUFkSSxjQUFBQSxLOzttREFDZ0JDLDJCQUFlQyxNQUFmLEU7OztBQUFoQkMsY0FBQUEsTztBQUNGQyxjQUFBQSxJLEdBQU9KLEtBQUssQ0FBQyxDQUFELEM7O0FBQ2pCLGtCQUFJSSxJQUFJLENBQUNDLE1BQUwsR0FBYyxDQUFsQixFQUFxQjtBQUNsQmIsZ0JBQUFBLEdBQUcsQ0FBQ2MsTUFBSixDQUFXLHNEQUFYLEVBQW1FO0FBQ2pFRixrQkFBQUEsSUFBSSxFQUFKQSxJQURpRTtBQUM1REQsa0JBQUFBLE9BQU8sRUFBUEEsT0FENEQ7QUFFakVULGtCQUFBQSxJQUFJLEVBQUpBLElBRmlFO0FBR2pFYSxrQkFBQUEsSUFBSSxFQUFKQTtBQUhpRSxpQkFBbkU7QUFLRCxlQU5GLE1BTVE7QUFDTGYsZ0JBQUFBLEdBQUcsQ0FBQ2MsTUFBSixDQUFXLHNEQUFYLEVBQW1FO0FBQ2pFRixrQkFBQUEsSUFBSSxFQUFKQSxJQURpRTtBQUM1REQsa0JBQUFBLE9BQU8sRUFBUEEsT0FENEQ7QUFFakVULGtCQUFBQSxJQUFJLEVBQUpBLElBRmlFO0FBR2pFYSxrQkFBQUEsSUFBSSxFQUFKQTtBQUhpRSxpQkFBbkU7QUFLRDs7K0NBQ00sQzs7Ozs7Ozs7Ozs7OytDQUtGZixHQUFHLENBQUNnQixRQUFKLENBQWEsR0FBYixDOzs7Ozs7Ozs7Ozs7O2VBS0VsQixhIiwic291cmNlUm9vdCI6IkQ6XFxMdWFuVmFuXFxMdWFuVmFuRDJcXHRydW5ndGFtX2xhbjRcXGFwcHNcXGNvbnRyb2xsZXJzXFxvdXRzaXRlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGRhdGUgZnJvbSBcInMtZGF0ZVwiO1xyXG5pbXBvcnQgbG9wSG9jU2VydmljZSBmcm9tIFwiLi4vLi4vc2VydmljZXMvbG9wSG9jU2VydmljZVwiO1xyXG5pbXBvcnQgYmFpdmlldFNlcnZpY2UgZnJvbSBcIi4uLy4uL3NlcnZpY2VzL2JhaXZpZXRTZXJ2aWNlXCI7XHJcbmNsYXNzIHRob2lraG9hYmlldUMge1xyXG4gIHN0YXRpYyBhc3luYyBnZXRBbGwocmVxLCByZXMpIHtcclxuICAgIGlmICgocmVxLnNlc3Npb24udXNlci5xdXllbmhhbmcgPSBcIkdp4bqjbmcgVmnDqm5cIikpIHtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBsZXQgdXNlciA9IFtdO1xyXG4gICAgICAgIGlmIChyZXEuc2Vzc2lvbi51c2VyKSB7XHJcbiAgICAgICAgICB1c2VyID0gcmVxLnNlc3Npb24udXNlcjtcclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IHRyYW5ndGhhaSA9IHJlcS5wYXJhbXMudHJhbmd0aGFpO1xyXG4gICAgICAgIGNvbnN0IGRhdGExID0gYXdhaXQgbG9wSG9jU2VydmljZS5nZXRBbGwodHJhbmd0aGFpKTtcclxuICAgICAgICBjb25zdCBiYWl2aWV0ID0gYXdhaXQgYmFpdmlldFNlcnZpY2UuZ2V0TmV3KCk7XHJcbiAgICAgICAgbGV0IGRhdGEgPSBkYXRhMVswXTtcclxuICAgICAgIGlmIChkYXRhLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgIHJlcy5yZW5kZXIoXCIuLi92aWV3cy9vdXRzaXRlL3RyYW5nY2FuaGFuL2xpc3R0aG9pa2hvYWJpZXVPdXQuZWpzXCIsIHtcclxuICAgICAgICAgICAgZGF0YSxiYWl2aWV0LFxyXG4gICAgICAgICAgICB1c2VyLFxyXG4gICAgICAgICAgICBkYXRlXHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgcmVzLnJlbmRlcihcIi4uL3ZpZXdzL291dHNpdGUvdHJhbmdjYW5oYW4vbGlzdHRob2lraG9hYmlldU91dC5lanNcIiwge1xyXG4gICAgICAgICAgICBkYXRhLGJhaXZpZXQsXHJcbiAgICAgICAgICAgIHVzZXIsXHJcbiAgICAgICAgICAgIGRhdGVcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gMDtcclxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICByZXR1cm4gZXJyb3I7XHJcbiAgICAgIH1cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiByZXMucmVkaXJlY3QoXCIvXCIpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgdGhvaWtob2FiaWV1QztcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "thoiKhoaBieuOutsiteC.js"
      ],
      "names": [
        "thoikhoabieuC",
        "req",
        "res",
        "session",
        "user",
        "quyenhang",
        "trangthai",
        "params",
        "lopHocService",
        "getAll",
        "data1",
        "baivietService",
        "getNew",
        "baiviet",
        "data",
        "length",
        "render",
        "date",
        "redirect"
      ],
      "mappings": ";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;IACMA,a;;;;;;;;;2BACgBC,G,EAAKC,G;;;;;;oBAClBD,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,GAA6B,Y;;;;;;AAE1BD,cAAAA,I,GAAO,E;;AACX,kBAAIH,GAAG,CAACE,OAAJ,CAAYC,IAAhB,EAAsB;AACpBA,gBAAAA,IAAI,GAAGH,GAAG,CAACE,OAAJ,CAAYC,IAAnB;AACD;;AACGE,cAAAA,S,GAAYL,GAAG,CAACM,MAAJ,CAAWD,S;;mDACPE,0BAAcC,MAAd,CAAqBH,SAArB,C;;;AAAdI,cAAAA,K;;mDACgBC,2BAAeC,MAAf,E;;;AAAhBC,cAAAA,O;AACFC,cAAAA,I,GAAOJ,KAAK,CAAC,CAAD,C;;AACjB,kBAAII,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AAClBb,gBAAAA,GAAG,CAACc,MAAJ,CAAW,sDAAX,EAAmE;AACjEF,kBAAAA,IAAI,EAAJA,IADiE;AAC5DD,kBAAAA,OAAO,EAAPA,OAD4D;AAEjET,kBAAAA,IAAI,EAAJA,IAFiE;AAGjEa,kBAAAA,IAAI,EAAJA;AAHiE,iBAAnE;AAKD,eANF,MAMQ;AACLf,gBAAAA,GAAG,CAACc,MAAJ,CAAW,sDAAX,EAAmE;AACjEF,kBAAAA,IAAI,EAAJA,IADiE;AAC5DD,kBAAAA,OAAO,EAAPA,OAD4D;AAEjET,kBAAAA,IAAI,EAAJA,IAFiE;AAGjEa,kBAAAA,IAAI,EAAJA;AAHiE,iBAAnE;AAKD;;+CACM,C;;;;;;;;;;;;+CAKFf,GAAG,CAACgB,QAAJ,CAAa,GAAb,C;;;;;;;;;;;;;eAKElB,a",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite",
      "sourcesContent": [
        "import date from \"s-date\";\r\nimport lopHocService from \"../../services/lopHocService\";\r\nimport baivietService from \"../../services/baivietService\";\r\nclass thoikhoabieuC {\r\n  static async getAll(req, res) {\r\n    if ((req.session.user.quyenhang = \"Giảng Viên\")) {\r\n      try {\r\n        let user = [];\r\n        if (req.session.user) {\r\n          user = req.session.user;\r\n        }\r\n        let trangthai = req.params.trangthai;\r\n        const data1 = await lopHocService.getAll(trangthai);\r\n        const baiviet = await baivietService.getNew();\r\n        let data = data1[0];\r\n       if (data.length > 0) {\r\n          res.render(\"../views/outsite/trangcanhan/listthoikhoabieuOut.ejs\", {\r\n            data,baiviet,\r\n            user,\r\n            date\r\n          });\r\n        } else {\r\n          res.render(\"../views/outsite/trangcanhan/listthoikhoabieuOut.ejs\", {\r\n            data,baiviet,\r\n            user,\r\n            date\r\n          });\r\n        }\r\n        return 0;\r\n      } catch (error) {\r\n        return error;\r\n      }\r\n    } else {\r\n      return res.redirect(\"/\");\r\n    }\r\n  }\r\n}\r\n\r\nexport default thoikhoabieuC;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1587478601272
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\\\\outsite\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\\\\outsite\\\\lopHocOutC.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite\\lopHocOutC.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite\\lopHocOutC.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite\\lopHocOutC.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite",
        "sourceFileName": "lopHocOutC.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _sDate = _interopRequireDefault(require(\"s-date\"));\n\nvar _lopHocService = _interopRequireDefault(require(\"../../services/lopHocService\"));\n\nvar _khoaHocService = _interopRequireDefault(require(\"../../services/khoaHocService\"));\n\nvar _giangVienService = _interopRequireDefault(require(\"../../services/giangVienService\"));\n\nvar _dangkyService = _interopRequireDefault(require(\"../../services/dangkyService\"));\n\nvar _baivietService = _interopRequireDefault(require(\"../../services/baivietService\"));\n\nvar lophocController =\n/*#__PURE__*/\nfunction () {\n  function lophocController() {\n    (0, _classCallCheck2[\"default\"])(this, lophocController);\n  }\n\n  (0, _createClass2[\"default\"])(lophocController, null, [{\n    key: \"getAll\",\n    value: function getAll(req, res) {\n      var user, trangthai, data1, baiviet, data;\n      return _regenerator[\"default\"].async(function getAll$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(req.session.user.quyenhang = \"Giảng Viên\")) {\n                _context.next = 21;\n                break;\n              }\n\n              _context.prev = 1;\n              user = [];\n\n              if (req.session.user) {\n                user = req.session.user;\n              }\n\n              trangthai = req.params.trangthai;\n              _context.next = 7;\n              return _regenerator[\"default\"].awrap(_lopHocService[\"default\"].getAll(trangthai));\n\n            case 7:\n              data1 = _context.sent;\n              _context.next = 10;\n              return _regenerator[\"default\"].awrap(_baivietService[\"default\"].getNew());\n\n            case 10:\n              baiviet = _context.sent;\n              data = data1[0];\n\n              if (data.length > 0) {\n                res.render(\"../views/outsite/trangcanhan/listlophocOut.ejs\", {\n                  data: data,\n                  baiviet: baiviet,\n                  user: user,\n                  date: _sDate[\"default\"]\n                });\n              } else {\n                res.render(\"../views/outsite/trangcanhan/listlophocOut.ejs\", {\n                  data: data,\n                  baiviet: baiviet,\n                  date: _sDate[\"default\"],\n                  user: user\n                });\n              }\n\n              return _context.abrupt(\"return\", 0);\n\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](1);\n              return _context.abrupt(\"return\", _context.t0);\n\n            case 19:\n              _context.next = 22;\n              break;\n\n            case 21:\n              return _context.abrupt(\"return\", res.redirect(\"/\"));\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 16]]);\n    }\n  }, {\n    key: \"get1lop\",\n    value: function get1lop(req, res) {\n      var trangthai, data1, khoahoc, giangvien, baiviet, data;\n      return _regenerator[\"default\"].async(function get1lop$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(req.session.user.quyenhang = \"Giảng Viên\")) {\n                _context2.next = 25;\n                break;\n              }\n\n              _context2.prev = 1;\n              trangthai = req.params.trangthai;\n              _context2.next = 5;\n              return _regenerator[\"default\"].awrap(_lopHocService[\"default\"].get1lop(trangthai));\n\n            case 5:\n              data1 = _context2.sent;\n              _context2.next = 8;\n              return _regenerator[\"default\"].awrap(_khoaHocService[\"default\"].getAll());\n\n            case 8:\n              khoahoc = _context2.sent;\n              _context2.next = 11;\n              return _regenerator[\"default\"].awrap(_giangVienService[\"default\"].getAll());\n\n            case 11:\n              giangvien = _context2.sent;\n              _context2.next = 14;\n              return _regenerator[\"default\"].awrap(_baivietService[\"default\"].getNew());\n\n            case 14:\n              baiviet = _context2.sent;\n              data = data1[0];\n\n              if (data.length > 0) {\n                res.render(\"../views/outsite/trangcanhan/listlophocOut.ejs\", {\n                  data: data,\n                  baiviet: baiviet,\n                  date: _sDate[\"default\"],\n                  khoahoc: khoahoc,\n                  giangvien: giangvien\n                });\n              } else {\n                res.render(\"../views/outsite/trangcanhan/listlophocOut.ejs\", {\n                  data: data,\n                  baiviet: baiviet,\n                  date: _sDate[\"default\"],\n                  khoahoc: khoahoc,\n                  giangvien: giangvien,\n                  message: \"Khong co hoc vien nao\"\n                });\n              }\n\n              return _context2.abrupt(\"return\", 0);\n\n            case 20:\n              _context2.prev = 20;\n              _context2.t0 = _context2[\"catch\"](1);\n              return _context2.abrupt(\"return\", _context2.t0);\n\n            case 23:\n              _context2.next = 26;\n              break;\n\n            case 25:\n              return _context2.abrupt(\"return\", res.redirect(\"/\"));\n\n            case 26:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[1, 20]]);\n    }\n  }, {\n    key: \"getAllhocvien\",\n    value: function getAllhocvien(req, res) {\n      var user, id, data, lophoc, baiviet;\n      return _regenerator[\"default\"].async(function getAllhocvien$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(req.session.user.quyenhang = \"Giảng Viên\")) {\n                _context3.next = 23;\n                break;\n              }\n\n              _context3.prev = 1;\n              user = [];\n\n              if (req.session.user) {\n                user = req.session.user;\n              }\n\n              id = req.params.id;\n              _context3.next = 7;\n              return _regenerator[\"default\"].awrap(_dangkyService[\"default\"].getByIDLop(id));\n\n            case 7:\n              data = _context3.sent;\n              _context3.next = 10;\n              return _regenerator[\"default\"].awrap(_lopHocService[\"default\"].getByID(id));\n\n            case 10:\n              lophoc = _context3.sent;\n              _context3.next = 13;\n              return _regenerator[\"default\"].awrap(_baivietService[\"default\"].getNew());\n\n            case 13:\n              baiviet = _context3.sent;\n\n              if (data.length > 0) {\n                res.render(\"../views/outsite/trangcanhan/listdangkyOut.ejs\", {\n                  data: data,\n                  user: user,\n                  baiviet: baiviet,\n                  date: _sDate[\"default\"],\n                  lophoc: lophoc\n                });\n              } else {\n                res.render(\"../views/outsite/trangcanhan/listdangkyOut.ejs\", {\n                  data: data,\n                  user: user,\n                  baiviet: baiviet,\n                  lophoc: lophoc,\n                  date: _sDate[\"default\"],\n                  message: \"Khong co hoc vien nao\"\n                });\n              }\n\n              return _context3.abrupt(\"return\", 0);\n\n            case 18:\n              _context3.prev = 18;\n              _context3.t0 = _context3[\"catch\"](1);\n              return _context3.abrupt(\"return\", _context3.t0);\n\n            case 21:\n              _context3.next = 24;\n              break;\n\n            case 23:\n              return _context3.abrupt(\"return\", res.redirect(\"/\"));\n\n            case 24:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[1, 18]]);\n    }\n  }]);\n  return lophocController;\n}();\n\nvar _default = lophocController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "lopHocOutC.js"
      ],
      "names": [
        "lophocController",
        "req",
        "res",
        "session",
        "user",
        "quyenhang",
        "trangthai",
        "params",
        "lopHocService",
        "getAll",
        "data1",
        "baivietService",
        "getNew",
        "baiviet",
        "data",
        "length",
        "render",
        "date",
        "redirect",
        "get1lop",
        "khoaHocService",
        "khoahoc",
        "giangVienService",
        "giangvien",
        "message",
        "id",
        "dangkyService",
        "getByIDLop",
        "getByID",
        "lophoc"
      ],
      "mappings": ";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;IACMA,gB;;;;;;;;;2BACgBC,G,EAAKC,G;;;;;;oBAClBD,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,GAA6B,Y;;;;;;AAE1BD,cAAAA,I,GAAO,E;;AACX,kBAAIH,GAAG,CAACE,OAAJ,CAAYC,IAAhB,EAAsB;AACpBA,gBAAAA,IAAI,GAAGH,GAAG,CAACE,OAAJ,CAAYC,IAAnB;AACD;;AACGE,cAAAA,S,GAAYL,GAAG,CAACM,MAAJ,CAAWD,S;;mDACPE,0BAAcC,MAAd,CAAqBH,SAArB,C;;;AAAdI,cAAAA,K;;mDACgBC,2BAAeC,MAAf,E;;;AAAhBC,cAAAA,O;AACAC,cAAAA,I,GAAOJ,KAAK,CAAC,CAAD,C;;AAClB,kBAAII,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AACnBb,gBAAAA,GAAG,CAACc,MAAJ,CAAW,gDAAX,EAA6D;AAC3DF,kBAAAA,IAAI,EAAJA,IAD2D;AACtDD,kBAAAA,OAAO,EAAPA,OADsD;AAE3DT,kBAAAA,IAAI,EAAJA,IAF2D;AAG3Da,kBAAAA,IAAI,EAAJA;AAH2D,iBAA7D;AAKD,eAND,MAMO;AACLf,gBAAAA,GAAG,CAACc,MAAJ,CAAW,gDAAX,EAA6D;AAC3DF,kBAAAA,IAAI,EAAJA,IAD2D;AACtDD,kBAAAA,OAAO,EAAPA,OADsD;AAE3DI,kBAAAA,IAAI,EAAJA,iBAF2D;AAG3Db,kBAAAA,IAAI,EAAJA;AAH2D,iBAA7D;AAKD;;+CACM,C;;;;;;;;;;;;+CAKFF,GAAG,CAACgB,QAAJ,CAAa,GAAb,C;;;;;;;;;;;4BAGUjB,G,EAAKC,G;;;;;;oBACnBD,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,GAA6B,Y;;;;;;AAE1BC,cAAAA,S,GAAYL,GAAG,CAACM,MAAJ,CAAWD,S;;mDACPE,0BAAcW,OAAd,CAAsBb,SAAtB,C;;;AAAdI,cAAAA,K;;mDACgBU,2BAAeX,MAAf,E;;;AAAhBY,cAAAA,O;;mDACkBC,6BAAiBb,MAAjB,E;;;AAAlBc,cAAAA,S;;mDACgBZ,2BAAeC,MAAf,E;;;AAAhBC,cAAAA,O;AACAC,cAAAA,I,GAAOJ,KAAK,CAAC,CAAD,C;;AAClB,kBAAII,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AACnBb,gBAAAA,GAAG,CAACc,MAAJ,CAAW,gDAAX,EAA6D;AAC3DF,kBAAAA,IAAI,EAAJA,IAD2D;AACtDD,kBAAAA,OAAO,EAAPA,OADsD;AAE3DI,kBAAAA,IAAI,EAAJA,iBAF2D;AAG3DI,kBAAAA,OAAO,EAAPA,OAH2D;AAI3DE,kBAAAA,SAAS,EAATA;AAJ2D,iBAA7D;AAMD,eAPD,MAOO;AACLrB,gBAAAA,GAAG,CAACc,MAAJ,CAAW,gDAAX,EAA6D;AAC3DF,kBAAAA,IAAI,EAAJA,IAD2D;AACtDD,kBAAAA,OAAO,EAAPA,OADsD;AAE3DI,kBAAAA,IAAI,EAAJA,iBAF2D;AAG3DI,kBAAAA,OAAO,EAAPA,OAH2D;AAI3DE,kBAAAA,SAAS,EAATA,SAJ2D;AAK3DC,kBAAAA,OAAO,EAAE;AALkD,iBAA7D;AAOD;;gDACM,C;;;;;;;;;;;;gDAKFtB,GAAG,CAACgB,QAAJ,CAAa,GAAb,C;;;;;;;;;;;kCAIgBjB,G,EAAKC,G;;;;;;oBACzBD,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,GAA6B,Y;;;;;;AAE1BD,cAAAA,I,GAAO,E;;AACX,kBAAIH,GAAG,CAACE,OAAJ,CAAYC,IAAhB,EAAsB;AACpBA,gBAAAA,IAAI,GAAGH,GAAG,CAACE,OAAJ,CAAYC,IAAnB;AACD;;AACOqB,cAAAA,E,GAAOxB,GAAG,CAACM,M,CAAXkB,E;;mDACWC,0BAAcC,UAAd,CAAyBF,EAAzB,C;;;AAAbX,cAAAA,I;;mDACeN,0BAAcoB,OAAd,CAAsBH,EAAtB,C;;;AAAfI,cAAAA,M;;mDACgBlB,2BAAeC,MAAf,E;;;AAAhBC,cAAAA,O;;AACN,kBAAIC,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AACnBb,gBAAAA,GAAG,CAACc,MAAJ,CAAW,gDAAX,EAA6D;AAC3DF,kBAAAA,IAAI,EAAJA,IAD2D;AAE3DV,kBAAAA,IAAI,EAAJA,IAF2D;AAEtDS,kBAAAA,OAAO,EAAPA,OAFsD;AAG3DI,kBAAAA,IAAI,EAAJA,iBAH2D;AAI3DY,kBAAAA,MAAM,EAANA;AAJ2D,iBAA7D;AAMD,eAPD,MAOO;AACL3B,gBAAAA,GAAG,CAACc,MAAJ,CAAW,gDAAX,EAA6D;AAC3DF,kBAAAA,IAAI,EAAJA,IAD2D;AAE3DV,kBAAAA,IAAI,EAAJA,IAF2D;AAEtDS,kBAAAA,OAAO,EAAPA,OAFsD;AAG3DgB,kBAAAA,MAAM,EAANA,MAH2D;AAI3DZ,kBAAAA,IAAI,EAAJA,iBAJ2D;AAK3DO,kBAAAA,OAAO,EAAE;AALkD,iBAA7D;AAOD;;gDACM,C;;;;;;;;;;;;gDAKFtB,GAAG,CAACgB,QAAJ,CAAa,GAAb,C;;;;;;;;;;;;;eAKElB,gB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite",
      "sourcesContent": [
        "import date from \"s-date\";\r\nimport lopHocService from \"../../services/lopHocService\";\r\nimport khoaHocService from \"../../services/khoaHocService\";\r\nimport giangVienService from \"../../services/giangVienService\";\r\nimport dangkyService from \"../../services/dangkyService\";\r\nimport baivietService from \"../../services/baivietService\";\r\nclass lophocController {\r\n  static async getAll(req, res) {\r\n    if ((req.session.user.quyenhang = \"Giảng Viên\")) {\r\n      try {\r\n        let user = [];\r\n        if (req.session.user) {\r\n          user = req.session.user;\r\n        }\r\n        let trangthai = req.params.trangthai;\r\n        const data1 = await lopHocService.getAll(trangthai);\r\n        const baiviet = await baivietService.getNew();\r\n        const data = data1[0];\r\n        if (data.length > 0) {\r\n          res.render(\"../views/outsite/trangcanhan/listlophocOut.ejs\", {\r\n            data,baiviet,\r\n            user,\r\n            date\r\n          });\r\n        } else {\r\n          res.render(\"../views/outsite/trangcanhan/listlophocOut.ejs\", {\r\n            data,baiviet,\r\n            date,\r\n            user\r\n          });\r\n        }\r\n        return 0;\r\n      } catch (error) {\r\n        return error;\r\n      }\r\n    } else {\r\n      return res.redirect(\"/\");\r\n    }\r\n  }\r\n  static async get1lop(req, res) {\r\n    if ((req.session.user.quyenhang = \"Giảng Viên\")) {\r\n      try {\r\n        let trangthai = req.params.trangthai;\r\n        const data1 = await lopHocService.get1lop(trangthai);\r\n        const khoahoc = await khoaHocService.getAll();\r\n        const giangvien = await giangVienService.getAll();\r\n        const baiviet = await baivietService.getNew();\r\n        const data = data1[0];\r\n        if (data.length > 0) {\r\n          res.render(\"../views/outsite/trangcanhan/listlophocOut.ejs\", {\r\n            data,baiviet,\r\n            date,\r\n            khoahoc,\r\n            giangvien\r\n          });\r\n        } else {\r\n          res.render(\"../views/outsite/trangcanhan/listlophocOut.ejs\", {\r\n            data,baiviet,\r\n            date,\r\n            khoahoc,\r\n            giangvien,\r\n            message: \"Khong co hoc vien nao\"\r\n          });\r\n        }\r\n        return 0;\r\n      } catch (error) {\r\n        return error;\r\n      }\r\n    } else {\r\n      return res.redirect(\"/\");\r\n    }\r\n  }\r\n\r\n  static async getAllhocvien(req, res) {\r\n    if ((req.session.user.quyenhang = \"Giảng Viên\")) {\r\n      try {\r\n        let user = [];\r\n        if (req.session.user) {\r\n          user = req.session.user;\r\n        }\r\n        const { id } = req.params;\r\n        const data = await dangkyService.getByIDLop(id);\r\n        const lophoc = await lopHocService.getByID(id);\r\n        const baiviet = await baivietService.getNew();\r\n        if (data.length > 0) {\r\n          res.render(\"../views/outsite/trangcanhan/listdangkyOut.ejs\", {\r\n            data,\r\n            user,baiviet,\r\n            date,\r\n            lophoc\r\n          });\r\n        } else {\r\n          res.render(\"../views/outsite/trangcanhan/listdangkyOut.ejs\", {\r\n            data,\r\n            user,baiviet,\r\n            lophoc,\r\n            date,\r\n            message: \"Khong co hoc vien nao\"\r\n          });\r\n        }\r\n        return 0;\r\n      } catch (error) {\r\n        return error;\r\n      }\r\n    } else {\r\n      return res.redirect(\"/\");\r\n    }\r\n  }\r\n}\r\n\r\nexport default lophocController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1587478567561
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\services\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\services\\\\giangVienService.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services\\giangVienService.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services\\giangVienService.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services\\giangVienService.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services",
        "sourceFileName": "giangVienService.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _models = _interopRequireDefault(require(\"../../Model/models\"));\n\nvar giangvienService =\n/*#__PURE__*/\nfunction () {\n  function giangvienService() {\n    (0, _classCallCheck2[\"default\"])(this, giangvienService);\n  }\n\n  (0, _createClass2[\"default\"])(giangvienService, null, [{\n    key: \"getAll\",\n    value: function getAll() {\n      return _regenerator[\"default\"].async(function getAll$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].giangvien.findAll());\n\n            case 3:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              throw _context.t0;\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    } // ==========cho lop hoc\n\n  }, {\n    key: \"getcolam\",\n    value: function getcolam() {\n      return _regenerator[\"default\"].async(function getcolam$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].giangvien.findAll({\n                where: {\n                  trangthai: 1\n                }\n              }));\n\n            case 3:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              throw _context2.t0;\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"getByID\",\n    value: function getByID(id) {\n      return _regenerator[\"default\"].async(function getByID$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].giangvien.findAll({\n                where: {\n                  id: id\n                }\n              }));\n\n            case 3:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 6:\n              _context3.prev = 6;\n              _context3.t0 = _context3[\"catch\"](0);\n              throw _context3.t0;\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(id) {\n      return _regenerator[\"default\"].async(function _delete$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].giangvien.destroy({\n                where: {\n                  id: id\n                }\n              }));\n\n            case 3:\n              return _context4.abrupt(\"return\", _context4.sent);\n\n            case 6:\n              _context4.prev = 6;\n              _context4.t0 = _context4[\"catch\"](0);\n              throw _context4.t0;\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"Save\",\n    value: function Save(data) {\n      return _regenerator[\"default\"].async(function Save$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].giangvien.create(data));\n\n            case 3:\n              return _context5.abrupt(\"return\", _context5.sent);\n\n            case 6:\n              _context5.prev = 6;\n              _context5.t0 = _context5[\"catch\"](0);\n              throw _context5.t0;\n\n            case 9:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"Update\",\n    value: function Update(id, data) {\n      var tk;\n      return _regenerator[\"default\"].async(function Update$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].giangvien.findOne({\n                where: {\n                  id: id\n                }\n              }));\n\n            case 3:\n              tk = _context6.sent;\n\n              if (!tk) {\n                _context6.next = 8;\n                break;\n              }\n\n              _context6.next = 7;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].giangvien.update(data, {\n                where: {\n                  id: id\n                }\n              }));\n\n            case 7:\n              return _context6.abrupt(\"return\", data);\n\n            case 8:\n              return _context6.abrupt(\"return\", null);\n\n            case 11:\n              _context6.prev = 11;\n              _context6.t0 = _context6[\"catch\"](0);\n              throw _context6.t0;\n\n            case 14:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[0, 11]]);\n    }\n  }, {\n    key: \"add\",\n    value: function add(data) {\n      var sdt, email, tk;\n      return _regenerator[\"default\"].async(function add$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              sdt = data.sdt;\n              email = data.email;\n              _context7.next = 5;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].giangvien.findOne({\n                where: {\n                  sdt: sdt,\n                  email: email\n                }\n              }));\n\n            case 5:\n              tk = _context7.sent;\n\n              if (!tk) {\n                _context7.next = 10;\n                break;\n              }\n\n              return _context7.abrupt(\"return\", null);\n\n            case 10:\n              _context7.next = 12;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].giangvien.create(data));\n\n            case 12:\n              return _context7.abrupt(\"return\", data);\n\n            case 13:\n              _context7.next = 18;\n              break;\n\n            case 15:\n              _context7.prev = 15;\n              _context7.t0 = _context7[\"catch\"](0);\n              throw _context7.t0;\n\n            case 18:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, [[0, 15]]);\n    }\n  }]);\n  return giangvienService;\n}();\n\nvar _default = giangvienService;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdpYW5nVmllblNlcnZpY2UuanMiXSwibmFtZXMiOlsiZ2lhbmd2aWVuU2VydmljZSIsImRhdGFiYXNlIiwiZ2lhbmd2aWVuIiwiZmluZEFsbCIsIndoZXJlIiwidHJhbmd0aGFpIiwiaWQiLCJkZXN0cm95IiwiZGF0YSIsImNyZWF0ZSIsImZpbmRPbmUiLCJ0ayIsInVwZGF0ZSIsInNkdCIsImVtYWlsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFFQTs7SUFFTUEsZ0I7Ozs7Ozs7Ozs7Ozs7Ozs7bURBR2FDLG1CQUFTQyxTQUFULENBQW1CQyxPQUFuQixFOzs7Ozs7Ozs7Ozs7Ozs7O01BS2pCOzs7Ozs7Ozs7OzttREFHaUJGLG1CQUFTQyxTQUFULENBQW1CQyxPQUFuQixDQUEyQjtBQUN0Q0MsZ0JBQUFBLEtBQUssRUFBRTtBQUFDQyxrQkFBQUEsU0FBUyxFQUFDO0FBQVg7QUFEK0IsZUFBM0IsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs0QkFPSUMsRTs7Ozs7OzttREFFQUwsbUJBQVNDLFNBQVQsQ0FBbUJDLE9BQW5CLENBQTJCO0FBQ3BDQyxnQkFBQUEsS0FBSyxFQUFFO0FBQUVFLGtCQUFBQSxFQUFFLEVBQUZBO0FBQUY7QUFENkIsZUFBM0IsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs0QkFRREEsRTs7Ozs7OzttREFFQ0wsbUJBQVNDLFNBQVQsQ0FBbUJLLE9BQW5CLENBQTJCO0FBQ3BDSCxnQkFBQUEsS0FBSyxFQUFDO0FBQUVFLGtCQUFBQSxFQUFFLEVBQUZBO0FBQUY7QUFEOEIsZUFBM0IsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt5QkFPSEUsSTs7Ozs7OzttREFFR1AsbUJBQVNDLFNBQVQsQ0FBbUJPLE1BQW5CLENBQTBCRCxJQUExQixDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OzJCQU1ERixFLEVBQUlFLEk7Ozs7Ozs7O21EQUVEUCxtQkFBU0MsU0FBVCxDQUFtQlEsT0FBbkIsQ0FBMkI7QUFDdENOLGdCQUFBQSxLQUFLLEVBQUU7QUFBRUUsa0JBQUFBLEVBQUUsRUFBRkE7QUFBRjtBQUQrQixlQUEzQixDOzs7QUFBZEssY0FBQUEsRTs7bUJBR0VBLEU7Ozs7OzttREFDT1YsbUJBQVNDLFNBQVQsQ0FBbUJVLE1BQW5CLENBQTBCSixJQUExQixFQUErQjtBQUNwQ0osZ0JBQUFBLEtBQUssRUFBRztBQUFFRSxrQkFBQUEsRUFBRSxFQUFGQTtBQUFGO0FBRDRCLGVBQS9CLEM7OztnREFHQUUsSTs7O2dEQUVILEk7Ozs7Ozs7Ozs7Ozs7Ozs7d0JBU0VBLEk7Ozs7Ozs7QUFFVEssY0FBQUEsRyxHQUFNTCxJQUFJLENBQUNLLEc7QUFDWEMsY0FBQUEsSyxHQUFRTixJQUFJLENBQUNNLEs7O21EQUNGYixtQkFBU0MsU0FBVCxDQUFtQlEsT0FBbkIsQ0FBMkI7QUFDeENOLGdCQUFBQSxLQUFLLEVBQUU7QUFBRVMsa0JBQUFBLEdBQUcsRUFBSEEsR0FBRjtBQUFRQyxrQkFBQUEsS0FBSyxFQUFMQTtBQUFSO0FBRGlDLGVBQTNCLEM7OztBQUFYSCxjQUFBQSxFOzttQkFHRkEsRTs7Ozs7Z0RBQ0ssSTs7OzttREFFQ1YsbUJBQVNDLFNBQVQsQ0FBbUJPLE1BQW5CLENBQTBCRCxJQUExQixDOzs7Z0RBQ0NBLEk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7ZUFXQVIsZ0IiLCJzb3VyY2VSb290IjoiRDpcXEx1YW5WYW5cXEx1YW5WYW5EMlxcdHJ1bmd0YW1fbGFuNFxcYXBwc1xcc2VydmljZXMiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuXHJcbmltcG9ydCBkYXRhYmFzZSBmcm9tICcuLi8uLi9Nb2RlbC9tb2RlbHMnO1xyXG5cclxuY2xhc3MgZ2lhbmd2aWVuU2VydmljZSB7XHJcbiAgc3RhdGljIGFzeW5jIGdldEFsbCgpIHtcclxuICAgIHRyeSB7ICAgICAgXHJcbiAgICAgIHJldHVybiBhd2FpdCBkYXRhYmFzZS5naWFuZ3ZpZW4uZmluZEFsbCgpO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG4gIC8vID09PT09PT09PT1jaG8gbG9wIGhvY1xyXG4gIHN0YXRpYyBhc3luYyBnZXRjb2xhbSgpIHtcclxuICAgIHRyeSB7ICAgICAgXHJcbiAgICAgIHJldHVybiBhd2FpdCBkYXRhYmFzZS5naWFuZ3ZpZW4uZmluZEFsbCh7XHJcbiAgICAgICAgd2hlcmU6IHt0cmFuZ3RoYWk6MX1cclxuICAgICAgfSk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9XHJcbiAgc3RhdGljIGFzeW5jIGdldEJ5SUQoaWQpe1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgICAgcmV0dXJuIGF3YWl0IGRhdGFiYXNlLmdpYW5ndmllbi5maW5kQWxsKHtcclxuICAgICAgICAgICAgICB3aGVyZTogeyBpZCB9XHJcbiAgICAgICAgICB9KVxyXG4gICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICB9XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgYXN5bmMgZGVsZXRlKGlkKXtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICAgIHJldHVybiBhd2FpdCBkYXRhYmFzZS5naWFuZ3ZpZW4uZGVzdHJveSh7XHJcbiAgICAgICAgICAgICAgd2hlcmU6eyBpZCB9XHJcbiAgICAgICAgICB9KVxyXG4gICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgIH1cclxuICB9XHJcbiAgc3RhdGljIGFzeW5jIFNhdmUoZGF0YSl7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgICByZXR1cm4gYXdhaXQgZGF0YWJhc2UuZ2lhbmd2aWVuLmNyZWF0ZShkYXRhKTtcclxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgIHRocm93IGVycm9yXHJcbiAgICAgIH1cclxuICB9XHJcblxyXG4gIHN0YXRpYyBhc3luYyBVcGRhdGUoaWQsIGRhdGEpe1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgbGV0IHRrID0gICAgYXdhaXQgZGF0YWJhc2UuZ2lhbmd2aWVuLmZpbmRPbmUoe1xyXG4gICAgICAgICAgICAgIHdoZXJlOiB7IGlkIH1cclxuICAgICAgICAgIH0pICAgICAgICAgXHJcbiAgICAgICAgICBpZih0ayl7ICAgICAgICAgICBcclxuICAgICAgICAgICAgICBhd2FpdCBkYXRhYmFzZS5naWFuZ3ZpZW4udXBkYXRlKGRhdGEse1xyXG4gICAgICAgICAgICAgICB3aGVyZSA6IHsgaWQgfVxyXG4gICAgICAgICAgICAgfSkgICAgICAgICAgICBcclxuICAgICAgICAgICAgIHJldHVybiBkYXRhXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICByZXR1cm4gbnVsbDtcclxuXHJcblxyXG4gICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgdGhyb3cgZXJyb3JcclxuICAgICAgfVxyXG4gIH1cclxuXHJcbiAgIFxyXG4gIHN0YXRpYyBhc3luYyBhZGQoZGF0YSkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgbGV0IHNkdCA9IGRhdGEuc2R0XHJcbiAgICAgIGxldCBlbWFpbCA9IGRhdGEuZW1haWxcclxuICAgICAgbGV0IHRrID0gYXdhaXQgZGF0YWJhc2UuZ2lhbmd2aWVuLmZpbmRPbmUoe1xyXG4gICAgICAgIHdoZXJlOiB7IHNkdCAsIGVtYWlsfVxyXG4gICAgfSkgICAgICBcclxuICAgIGlmICh0aykge1xyXG4gICAgICByZXR1cm4gbnVsbFxyXG4gICAgfSBlbHNle1xyXG4gICAgICAgIGF3YWl0IGRhdGFiYXNlLmdpYW5ndmllbi5jcmVhdGUoZGF0YSk7XHJcbiAgICAgICAgcmV0dXJuIGRhdGFcclxuICAgIH1cclxuICAgIFxyXG4gICAgIFxyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG4gXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGdpYW5ndmllblNlcnZpY2U7Il19",
    "map": {
      "version": 3,
      "sources": [
        "giangVienService.js"
      ],
      "names": [
        "giangvienService",
        "database",
        "giangvien",
        "findAll",
        "where",
        "trangthai",
        "id",
        "destroy",
        "data",
        "create",
        "findOne",
        "tk",
        "update",
        "sdt",
        "email"
      ],
      "mappings": ";;;;;;;;;;;;;;;AAEA;;IAEMA,gB;;;;;;;;;;;;;;;;mDAGaC,mBAASC,SAAT,CAAmBC,OAAnB,E;;;;;;;;;;;;;;;;MAKjB;;;;;;;;;;;mDAGiBF,mBAASC,SAAT,CAAmBC,OAAnB,CAA2B;AACtCC,gBAAAA,KAAK,EAAE;AAACC,kBAAAA,SAAS,EAAC;AAAX;AAD+B,eAA3B,C;;;;;;;;;;;;;;;;;;;4BAOIC,E;;;;;;;mDAEAL,mBAASC,SAAT,CAAmBC,OAAnB,CAA2B;AACpCC,gBAAAA,KAAK,EAAE;AAAEE,kBAAAA,EAAE,EAAFA;AAAF;AAD6B,eAA3B,C;;;;;;;;;;;;;;;;;;;4BAQDA,E;;;;;;;mDAECL,mBAASC,SAAT,CAAmBK,OAAnB,CAA2B;AACpCH,gBAAAA,KAAK,EAAC;AAAEE,kBAAAA,EAAE,EAAFA;AAAF;AAD8B,eAA3B,C;;;;;;;;;;;;;;;;;;;yBAOHE,I;;;;;;;mDAEGP,mBAASC,SAAT,CAAmBO,MAAnB,CAA0BD,IAA1B,C;;;;;;;;;;;;;;;;;;;2BAMDF,E,EAAIE,I;;;;;;;;mDAEDP,mBAASC,SAAT,CAAmBQ,OAAnB,CAA2B;AACtCN,gBAAAA,KAAK,EAAE;AAAEE,kBAAAA,EAAE,EAAFA;AAAF;AAD+B,eAA3B,C;;;AAAdK,cAAAA,E;;mBAGEA,E;;;;;;mDACOV,mBAASC,SAAT,CAAmBU,MAAnB,CAA0BJ,IAA1B,EAA+B;AACpCJ,gBAAAA,KAAK,EAAG;AAAEE,kBAAAA,EAAE,EAAFA;AAAF;AAD4B,eAA/B,C;;;gDAGAE,I;;;gDAEH,I;;;;;;;;;;;;;;;;wBASEA,I;;;;;;;AAETK,cAAAA,G,GAAML,IAAI,CAACK,G;AACXC,cAAAA,K,GAAQN,IAAI,CAACM,K;;mDACFb,mBAASC,SAAT,CAAmBQ,OAAnB,CAA2B;AACxCN,gBAAAA,KAAK,EAAE;AAAES,kBAAAA,GAAG,EAAHA,GAAF;AAAQC,kBAAAA,KAAK,EAALA;AAAR;AADiC,eAA3B,C;;;AAAXH,cAAAA,E;;mBAGFA,E;;;;;gDACK,I;;;;mDAECV,mBAASC,SAAT,CAAmBO,MAAnB,CAA0BD,IAA1B,C;;;gDACCA,I;;;;;;;;;;;;;;;;;;;;;;eAWAR,gB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services",
      "sourcesContent": [
        "\r\n\r\nimport database from '../../Model/models';\r\n\r\nclass giangvienService {\r\n  static async getAll() {\r\n    try {      \r\n      return await database.giangvien.findAll();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  // ==========cho lop hoc\r\n  static async getcolam() {\r\n    try {      \r\n      return await database.giangvien.findAll({\r\n        where: {trangthai:1}\r\n      });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  static async getByID(id){\r\n      try {\r\n          return await database.giangvien.findAll({\r\n              where: { id }\r\n          })\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n  }\r\n\r\n  static async delete(id){\r\n      try {\r\n          return await database.giangvien.destroy({\r\n              where:{ id }\r\n          })\r\n      } catch (error) {\r\n          throw error;\r\n      }\r\n  }\r\n  static async Save(data){\r\n      try {\r\n          return await database.giangvien.create(data);\r\n      } catch (error) {\r\n          throw error\r\n      }\r\n  }\r\n\r\n  static async Update(id, data){\r\n      try {\r\n       let tk =    await database.giangvien.findOne({\r\n              where: { id }\r\n          })         \r\n          if(tk){           \r\n              await database.giangvien.update(data,{\r\n               where : { id }\r\n             })            \r\n             return data\r\n          }\r\n          return null;\r\n\r\n\r\n      } catch (error) {\r\n          throw error\r\n      }\r\n  }\r\n\r\n   \r\n  static async add(data) {\r\n    try {\r\n      let sdt = data.sdt\r\n      let email = data.email\r\n      let tk = await database.giangvien.findOne({\r\n        where: { sdt , email}\r\n    })      \r\n    if (tk) {\r\n      return null\r\n    } else{\r\n        await database.giangvien.create(data);\r\n        return data\r\n    }\r\n    \r\n     \r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n \r\n}\r\n\r\nexport default giangvienService;"
      ]
    },
    "sourceType": "script",
    "mtime": 1581932205774
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\helpers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\helpers\\\\uploadfile.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\helpers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\helpers\\uploadfile.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\helpers\\uploadfile.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\helpers\\uploadfile.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\helpers",
        "sourceFileName": "uploadfile.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar multer = require(\"multer\");\n\nvar d = new Date();\nd.getDate();\nd.getMonth();\nd.getFullYear();\nvar n = d.getDate() + d.getMonth() + d.getFullYear(); // luu duong dan hinh\n\nvar storage = multer.diskStorage({\n  destination: function destination(req, file, cb) {\n    cb(null, \"public/uploadimg\");\n  },\n  filename: function filename(req, file, cb) {\n    cb(null, n + '-' + file.originalname);\n  }\n}); // check image upload\n\nfunction checkImage(req, file, cb) {\n  if (!file.originalname.match(/\\.(jpg|jpeg|png|gif)$/)) {\n    cb(new Error(\"Đây không phải là ảnh, vui lòng chọn lại!\"));\n  } else {\n    cb(null, true);\n  }\n}\n\nvar upload = multer({\n  storage: storage,\n  fileFilter: checkImage\n}); //const single = upload.single('file')\n// const single = upload.single(\"file\", (req, res) => {\n//   if (err) return res.send({ error: err.message });\n//   return res.send({ avatar: req.file });\n// });\n//========================================\n\nmodule.exports = upload;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVwbG9hZGZpbGUuanMiXSwibmFtZXMiOlsibXVsdGVyIiwicmVxdWlyZSIsImQiLCJEYXRlIiwiZ2V0RGF0ZSIsImdldE1vbnRoIiwiZ2V0RnVsbFllYXIiLCJuIiwic3RvcmFnZSIsImRpc2tTdG9yYWdlIiwiZGVzdGluYXRpb24iLCJyZXEiLCJmaWxlIiwiY2IiLCJmaWxlbmFtZSIsIm9yaWdpbmFsbmFtZSIsImNoZWNrSW1hZ2UiLCJtYXRjaCIsIkVycm9yIiwidXBsb2FkIiwiZmlsZUZpbHRlciIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFDQSxJQUFJQyxDQUFDLEdBQUcsSUFBSUMsSUFBSixFQUFSO0FBQ0FELENBQUMsQ0FBQ0UsT0FBRjtBQUNBRixDQUFDLENBQUNHLFFBQUY7QUFDQUgsQ0FBQyxDQUFDSSxXQUFGO0FBQ0EsSUFBSUMsQ0FBQyxHQUFJTCxDQUFDLENBQUNFLE9BQUYsS0FBYUYsQ0FBQyxDQUFDRyxRQUFGLEVBQWIsR0FBMkJILENBQUMsQ0FBQ0ksV0FBRixFQUFwQyxDLENBQ0E7O0FBQ0EsSUFBTUUsT0FBTyxHQUFHUixNQUFNLENBQUNTLFdBQVAsQ0FBbUI7QUFDakNDLEVBQUFBLFdBQVcsRUFBRSxxQkFBQ0MsR0FBRCxFQUFNQyxJQUFOLEVBQVlDLEVBQVosRUFBbUI7QUFDOUJBLElBQUFBLEVBQUUsQ0FBQyxJQUFELEVBQU8sa0JBQVAsQ0FBRjtBQUNELEdBSGdDO0FBSWpDQyxFQUFBQSxRQUFRLEVBQUUsa0JBQUNILEdBQUQsRUFBTUMsSUFBTixFQUFZQyxFQUFaLEVBQW1CO0FBQzNCQSxJQUFBQSxFQUFFLENBQUMsSUFBRCxFQUFPTixDQUFDLEdBQUcsR0FBSixHQUFVSyxJQUFJLENBQUNHLFlBQXRCLENBQUY7QUFDRDtBQU5nQyxDQUFuQixDQUFoQixDLENBU0E7O0FBRUEsU0FBU0MsVUFBVCxDQUFvQkwsR0FBcEIsRUFBeUJDLElBQXpCLEVBQStCQyxFQUEvQixFQUFtQztBQUNqQyxNQUFJLENBQUNELElBQUksQ0FBQ0csWUFBTCxDQUFrQkUsS0FBbEIsQ0FBd0IsdUJBQXhCLENBQUwsRUFBdUQ7QUFDckRKLElBQUFBLEVBQUUsQ0FBQyxJQUFJSyxLQUFKLENBQVUsMkNBQVYsQ0FBRCxDQUFGO0FBQ0QsR0FGRCxNQUVPO0FBQ0xMLElBQUFBLEVBQUUsQ0FBQyxJQUFELEVBQU8sSUFBUCxDQUFGO0FBQ0Q7QUFDRjs7QUFFRCxJQUFJTSxNQUFNLEdBQUduQixNQUFNLENBQUM7QUFBRVEsRUFBQUEsT0FBTyxFQUFFQSxPQUFYO0FBQW9CWSxFQUFBQSxVQUFVLEVBQUVKO0FBQWhDLENBQUQsQ0FBbkIsQyxDQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQUssTUFBTSxDQUFDQyxPQUFQLEdBQWlCSCxNQUFqQiIsInNvdXJjZVJvb3QiOiJEOlxcTHVhblZhblxcTHVhblZhbkQyXFx0cnVuZ3RhbV9sYW40XFxoZWxwZXJzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbXVsdGVyID0gcmVxdWlyZShcIm11bHRlclwiKTtcclxubGV0IGQgPSBuZXcgRGF0ZSgpO1xyXG5kLmdldERhdGUoKTtcclxuZC5nZXRNb250aCgpO1xyXG5kLmdldEZ1bGxZZWFyKCk7XHJcbmxldCBuID0gIGQuZ2V0RGF0ZSgpKyBkLmdldE1vbnRoKCkrIGQuZ2V0RnVsbFllYXIoKVxyXG4vLyBsdXUgZHVvbmcgZGFuIGhpbmhcclxuY29uc3Qgc3RvcmFnZSA9IG11bHRlci5kaXNrU3RvcmFnZSh7XHJcbiAgZGVzdGluYXRpb246IChyZXEsIGZpbGUsIGNiKSA9PiB7XHJcbiAgICBjYihudWxsLCBcInB1YmxpYy91cGxvYWRpbWdcIik7XHJcbiAgfSxcclxuICBmaWxlbmFtZTogKHJlcSwgZmlsZSwgY2IpID0+IHtcclxuICAgIGNiKG51bGwsIG4gKyAnLScgKyBmaWxlLm9yaWdpbmFsbmFtZSk7XHJcbiAgfVxyXG59KTtcclxuXHJcbi8vIGNoZWNrIGltYWdlIHVwbG9hZFxyXG5cclxuZnVuY3Rpb24gY2hlY2tJbWFnZShyZXEsIGZpbGUsIGNiKSB7XHJcbiAgaWYgKCFmaWxlLm9yaWdpbmFsbmFtZS5tYXRjaCgvXFwuKGpwZ3xqcGVnfHBuZ3xnaWYpJC8pKSB7XHJcbiAgICBjYihuZXcgRXJyb3IoXCLEkMOieSBraMO0bmcgcGjhuqNpIGzDoCDhuqNuaCwgdnVpIGzDsm5nIGNo4buNbiBs4bqhaSFcIikpO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBjYihudWxsLCB0cnVlKTtcclxuICB9XHJcbn1cclxuXHJcbnZhciB1cGxvYWQgPSBtdWx0ZXIoeyBzdG9yYWdlOiBzdG9yYWdlLCBmaWxlRmlsdGVyOiBjaGVja0ltYWdlIH0pO1xyXG4vL2NvbnN0IHNpbmdsZSA9IHVwbG9hZC5zaW5nbGUoJ2ZpbGUnKVxyXG5cclxuLy8gY29uc3Qgc2luZ2xlID0gdXBsb2FkLnNpbmdsZShcImZpbGVcIiwgKHJlcSwgcmVzKSA9PiB7XHJcbi8vICAgaWYgKGVycikgcmV0dXJuIHJlcy5zZW5kKHsgZXJyb3I6IGVyci5tZXNzYWdlIH0pO1xyXG4vLyAgIHJldHVybiByZXMuc2VuZCh7IGF2YXRhcjogcmVxLmZpbGUgfSk7XHJcbi8vIH0pO1xyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxubW9kdWxlLmV4cG9ydHMgPSB1cGxvYWQ7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "uploadfile.js"
      ],
      "names": [
        "multer",
        "require",
        "d",
        "Date",
        "getDate",
        "getMonth",
        "getFullYear",
        "n",
        "storage",
        "diskStorage",
        "destination",
        "req",
        "file",
        "cb",
        "filename",
        "originalname",
        "checkImage",
        "match",
        "Error",
        "upload",
        "fileFilter",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAIC,CAAC,GAAG,IAAIC,IAAJ,EAAR;AACAD,CAAC,CAACE,OAAF;AACAF,CAAC,CAACG,QAAF;AACAH,CAAC,CAACI,WAAF;AACA,IAAIC,CAAC,GAAIL,CAAC,CAACE,OAAF,KAAaF,CAAC,CAACG,QAAF,EAAb,GAA2BH,CAAC,CAACI,WAAF,EAApC,C,CACA;;AACA,IAAME,OAAO,GAAGR,MAAM,CAACS,WAAP,CAAmB;AACjCC,EAAAA,WAAW,EAAE,qBAACC,GAAD,EAAMC,IAAN,EAAYC,EAAZ,EAAmB;AAC9BA,IAAAA,EAAE,CAAC,IAAD,EAAO,kBAAP,CAAF;AACD,GAHgC;AAIjCC,EAAAA,QAAQ,EAAE,kBAACH,GAAD,EAAMC,IAAN,EAAYC,EAAZ,EAAmB;AAC3BA,IAAAA,EAAE,CAAC,IAAD,EAAON,CAAC,GAAG,GAAJ,GAAUK,IAAI,CAACG,YAAtB,CAAF;AACD;AANgC,CAAnB,CAAhB,C,CASA;;AAEA,SAASC,UAAT,CAAoBL,GAApB,EAAyBC,IAAzB,EAA+BC,EAA/B,EAAmC;AACjC,MAAI,CAACD,IAAI,CAACG,YAAL,CAAkBE,KAAlB,CAAwB,uBAAxB,CAAL,EAAuD;AACrDJ,IAAAA,EAAE,CAAC,IAAIK,KAAJ,CAAU,2CAAV,CAAD,CAAF;AACD,GAFD,MAEO;AACLL,IAAAA,EAAE,CAAC,IAAD,EAAO,IAAP,CAAF;AACD;AACF;;AAED,IAAIM,MAAM,GAAGnB,MAAM,CAAC;AAAEQ,EAAAA,OAAO,EAAEA,OAAX;AAAoBY,EAAAA,UAAU,EAAEJ;AAAhC,CAAD,CAAnB,C,CACA;AAEA;AACA;AACA;AACA;AACA;;AACAK,MAAM,CAACC,OAAP,GAAiBH,MAAjB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\helpers",
      "sourcesContent": [
        "const multer = require(\"multer\");\r\nlet d = new Date();\r\nd.getDate();\r\nd.getMonth();\r\nd.getFullYear();\r\nlet n =  d.getDate()+ d.getMonth()+ d.getFullYear()\r\n// luu duong dan hinh\r\nconst storage = multer.diskStorage({\r\n  destination: (req, file, cb) => {\r\n    cb(null, \"public/uploadimg\");\r\n  },\r\n  filename: (req, file, cb) => {\r\n    cb(null, n + '-' + file.originalname);\r\n  }\r\n});\r\n\r\n// check image upload\r\n\r\nfunction checkImage(req, file, cb) {\r\n  if (!file.originalname.match(/\\.(jpg|jpeg|png|gif)$/)) {\r\n    cb(new Error(\"Đây không phải là ảnh, vui lòng chọn lại!\"));\r\n  } else {\r\n    cb(null, true);\r\n  }\r\n}\r\n\r\nvar upload = multer({ storage: storage, fileFilter: checkImage });\r\n//const single = upload.single('file')\r\n\r\n// const single = upload.single(\"file\", (req, res) => {\r\n//   if (err) return res.send({ error: err.message });\r\n//   return res.send({ avatar: req.file });\r\n// });\r\n//========================================\r\nmodule.exports = upload;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1578120901552
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\\\\outsite\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\\\\outsite\\\\baivietOutRouter.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\outsite",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\outsite\\baivietOutRouter.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\outsite\\baivietOutRouter.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\outsite\\baivietOutRouter.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\outsite",
        "sourceFileName": "baivietOutRouter.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar Router = require(\"express\");\n\nvar baivietController = require(\"../../controllers/outsite/baivietOutC\");\n\nvar router = Router();\nrouter.route(\"/:limit/:chuyenmuc\").get(baivietController.getChuyenMuc); // router\n//   .route(\"/:limit/:chuyenmuc\")\n//   .get(baivietController.getAll)\n\nrouter.route(\"/:limit/:chuyenmuc/:id\").get(baivietController.getA);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhaXZpZXRPdXRSb3V0ZXIuanMiXSwibmFtZXMiOlsiUm91dGVyIiwicmVxdWlyZSIsImJhaXZpZXRDb250cm9sbGVyIiwicm91dGVyIiwicm91dGUiLCJnZXQiLCJnZXRDaHV5ZW5NdWMiLCJnZXRBIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFLQSxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXJCOztBQUNBLElBQUlDLGlCQUFpQixHQUFFRCxPQUFPLENBQUMsdUNBQUQsQ0FBOUI7O0FBRUEsSUFBTUUsTUFBTSxHQUFHSCxNQUFNLEVBQXJCO0FBR0FHLE1BQU0sQ0FBQ0MsS0FBUCxDQUFhLG9CQUFiLEVBQW1DQyxHQUFuQyxDQUF1Q0gsaUJBQWlCLENBQUNJLFlBQXpELEUsQ0FDQTtBQUNBO0FBQ0E7O0FBQ0FILE1BQU0sQ0FBQ0MsS0FBUCxDQUFhLHdCQUFiLEVBQXVDQyxHQUF2QyxDQUEyQ0gsaUJBQWlCLENBQUNLLElBQTdEO0FBR0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQk4sTUFBakIiLCJzb3VyY2VSb290IjoiRDpcXEx1YW5WYW5cXEx1YW5WYW5EMlxcdHJ1bmd0YW1fbGFuNFxcYXBwc1xccm91dGVyc1xcb3V0c2l0ZSIsInNvdXJjZXNDb250ZW50IjpbInZhciAgUm91dGVyICA9cmVxdWlyZShcImV4cHJlc3NcIik7XHJcbnZhciBiYWl2aWV0Q29udHJvbGxlciA9cmVxdWlyZShcIi4uLy4uL2NvbnRyb2xsZXJzL291dHNpdGUvYmFpdmlldE91dENcIik7XHJcblxyXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKTtcclxuXHJcblxyXG5yb3V0ZXIucm91dGUoXCIvOmxpbWl0LzpjaHV5ZW5tdWNcIikuZ2V0KGJhaXZpZXRDb250cm9sbGVyLmdldENodXllbk11Yyk7XHJcbi8vIHJvdXRlclxyXG4vLyAgIC5yb3V0ZShcIi86bGltaXQvOmNodXllbm11Y1wiKVxyXG4vLyAgIC5nZXQoYmFpdmlldENvbnRyb2xsZXIuZ2V0QWxsKVxyXG5yb3V0ZXIucm91dGUoXCIvOmxpbWl0LzpjaHV5ZW5tdWMvOmlkXCIpLmdldChiYWl2aWV0Q29udHJvbGxlci5nZXRBKTtcclxuXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "baivietOutRouter.js"
      ],
      "names": [
        "Router",
        "require",
        "baivietController",
        "router",
        "route",
        "get",
        "getChuyenMuc",
        "getA",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAKA,MAAM,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,iBAAiB,GAAED,OAAO,CAAC,uCAAD,CAA9B;;AAEA,IAAME,MAAM,GAAGH,MAAM,EAArB;AAGAG,MAAM,CAACC,KAAP,CAAa,oBAAb,EAAmCC,GAAnC,CAAuCH,iBAAiB,CAACI,YAAzD,E,CACA;AACA;AACA;;AACAH,MAAM,CAACC,KAAP,CAAa,wBAAb,EAAuCC,GAAvC,CAA2CH,iBAAiB,CAACK,IAA7D;AAGAC,MAAM,CAACC,OAAP,GAAiBN,MAAjB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\outsite",
      "sourcesContent": [
        "var  Router  =require(\"express\");\r\nvar baivietController =require(\"../../controllers/outsite/baivietOutC\");\r\n\r\nconst router = Router();\r\n\r\n\r\nrouter.route(\"/:limit/:chuyenmuc\").get(baivietController.getChuyenMuc);\r\n// router\r\n//   .route(\"/:limit/:chuyenmuc\")\r\n//   .get(baivietController.getAll)\r\nrouter.route(\"/:limit/:chuyenmuc/:id\").get(baivietController.getA);\r\n\r\n\r\nmodule.exports = router;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1586164408039
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\\\\outsite\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\\\\outsite\\\\baivietOutC.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite\\baivietOutC.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite\\baivietOutC.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite\\baivietOutC.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite",
        "sourceFileName": "baivietOutC.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar baivietService = require(\"../../services/baivietService\");\n\nvar chuyenmucService = require(\"../../services/chuyenmucService\");\n\nvar baivietService = require(\"../../services/baivietService\");\n\nvar date = require(\"s-date\");\n\nvar diendanController =\n/*#__PURE__*/\nfunction () {\n  function diendanController() {\n    (0, _classCallCheck2[\"default\"])(this, diendanController);\n  }\n\n  (0, _createClass2[\"default\"])(diendanController, null, [{\n    key: \"getAll\",\n    value: function getAll(req, res) {\n      var user, limit, data, baiviet, moiNhat, chuyenmuc;\n      return _regenerator[\"default\"].async(function getAll$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              user = [];\n\n              if (req.session.user) {\n                user = req.session.user;\n              }\n\n              limit = req.params.limit;\n              _context.next = 6;\n              return _regenerator[\"default\"].awrap(baivietService.getOutsite(parseInt(limit)));\n\n            case 6:\n              data = _context.sent;\n              _context.next = 9;\n              return _regenerator[\"default\"].awrap(baivietService.getNew());\n\n            case 9:\n              baiviet = _context.sent;\n              _context.next = 12;\n              return _regenerator[\"default\"].awrap(baivietService.getNew());\n\n            case 12:\n              moiNhat = _context.sent;\n              _context.next = 15;\n              return _regenerator[\"default\"].awrap(chuyenmucService.getAll());\n\n            case 15:\n              chuyenmuc = _context.sent;\n\n              if (moiNhat[0].length != [] || !moiNhat.length) {\n                res.render(\"../apps/views/outsite/blog.ejs\", {\n                  data: data,\n                  baiviet: baiviet,\n                  moiNhat: moiNhat,\n                  date: date,\n                  chuyenmuc: chuyenmuc,\n                  limit: limit,\n                  user: user,\n                  mes: 1\n                });\n              } else {\n                res.render(\"../apps/views/outsite/blog.ejs\", {\n                  data: data,\n                  baiviet: baiviet,\n                  moiNhat: moiNhat,\n                  date: date,\n                  chuyenmuc: chuyenmuc,\n                  limit: limit,\n                  user: user,\n                  mes: 0\n                });\n              }\n\n              return _context.abrupt(\"return\", 0);\n\n            case 20:\n              _context.prev = 20;\n              _context.t0 = _context[\"catch\"](0);\n              return _context.abrupt(\"return\", _context.t0);\n\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 20]]);\n    }\n  }, {\n    key: \"getA\",\n    value: function getA(req, res) {\n      var user, limit, chuyenmuc1, id, data, moiNhat, chuyenmuc, baiviet;\n      return _regenerator[\"default\"].async(function getA$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              user = [];\n\n              if (req.session.user) {\n                user = req.session.user;\n              }\n\n              limit = req.params.limit;\n              chuyenmuc1 = req.params.chuyenmuc;\n              id = req.params.id;\n              _context2.next = 8;\n              return _regenerator[\"default\"].awrap(baivietService.getNeWCM(parseInt(limit), chuyenmuc1));\n\n            case 8:\n              data = _context2.sent;\n              _context2.next = 11;\n              return _regenerator[\"default\"].awrap(baivietService.getA(parseInt(id)));\n\n            case 11:\n              moiNhat = _context2.sent;\n              _context2.next = 14;\n              return _regenerator[\"default\"].awrap(chuyenmucService.getAll());\n\n            case 14:\n              chuyenmuc = _context2.sent;\n              _context2.next = 17;\n              return _regenerator[\"default\"].awrap(baivietService.getNew());\n\n            case 17:\n              baiviet = _context2.sent;\n\n              if (moiNhat[0].length != [] || !moiNhat.length) {\n                res.render(\"../apps/views/outsite/blog.ejs\", {\n                  data: data,\n                  baiviet: baiviet,\n                  moiNhat: moiNhat,\n                  date: date,\n                  chuyenmuc: chuyenmuc,\n                  limit: limit,\n                  user: user,\n                  mes: 1\n                });\n              } else {\n                res.render(\"../apps/views/outsite/blog.ejs\", {\n                  data: data,\n                  baiviet: baiviet,\n                  moiNhat: moiNhat,\n                  date: date,\n                  chuyenmuc: chuyenmuc,\n                  limit: limit,\n                  user: user,\n                  mes: 0\n                });\n              }\n\n              return _context2.abrupt(\"return\", 0);\n\n            case 22:\n              _context2.prev = 22;\n              _context2.t0 = _context2[\"catch\"](0);\n              return _context2.abrupt(\"return\", _context2.t0);\n\n            case 25:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 22]]);\n    }\n  }, {\n    key: \"getChuyenMuc\",\n    value: function getChuyenMuc(req, res) {\n      var user, limit, chuyenmuc1, data, baiviet, chuyenmuc, moiNhat;\n      return _regenerator[\"default\"].async(function getChuyenMuc$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              user = [];\n\n              if (req.session.user) {\n                user = req.session.user;\n              }\n\n              limit = req.params.limit;\n              chuyenmuc1 = req.params.chuyenmuc;\n              _context3.next = 7;\n              return _regenerator[\"default\"].awrap(baivietService.getNeWCM(parseInt(limit), chuyenmuc1));\n\n            case 7:\n              data = _context3.sent;\n              _context3.next = 10;\n              return _regenerator[\"default\"].awrap(baivietService.getNew());\n\n            case 10:\n              baiviet = _context3.sent;\n              _context3.next = 13;\n              return _regenerator[\"default\"].awrap(chuyenmucService.getAll());\n\n            case 13:\n              chuyenmuc = _context3.sent;\n              _context3.next = 16;\n              return _regenerator[\"default\"].awrap(baivietService.getACM(chuyenmuc1));\n\n            case 16:\n              moiNhat = _context3.sent;\n\n              if (moiNhat[0].length != [] || !moiNhat.length) {\n                res.render(\"../apps/views/outsite/blog.ejs\", {\n                  data: data,\n                  baiviet: baiviet,\n                  moiNhat: moiNhat,\n                  chuyenmuc: chuyenmuc,\n                  date: date,\n                  limit: limit,\n                  user: user,\n                  mes: 1\n                });\n              } else {\n                res.render(\"../apps/views/outsite/blog.ejs\", {\n                  data: data,\n                  baiviet: baiviet,\n                  moiNhat: moiNhat,\n                  chuyenmuc: chuyenmuc,\n                  date: date,\n                  limit: limit,\n                  user: user,\n                  mes: 0\n                });\n              }\n\n              return _context3.abrupt(\"return\", 0);\n\n            case 21:\n              _context3.prev = 21;\n              _context3.t0 = _context3[\"catch\"](0);\n              return _context3.abrupt(\"return\", _context3.t0);\n\n            case 24:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 21]]);\n    }\n  }]);\n  return diendanController;\n}();\n\nmodule.exports = diendanController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "baivietOutC.js"
      ],
      "names": [
        "baivietService",
        "require",
        "chuyenmucService",
        "date",
        "diendanController",
        "req",
        "res",
        "user",
        "session",
        "limit",
        "params",
        "getOutsite",
        "parseInt",
        "data",
        "getNew",
        "baiviet",
        "moiNhat",
        "getAll",
        "chuyenmuc",
        "length",
        "render",
        "mes",
        "chuyenmuc1",
        "id",
        "getNeWCM",
        "getA",
        "getACM",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;AAAA,IAAIA,cAAc,GAAGC,OAAO,CAAC,+BAAD,CAA5B;;AACA,IAAIC,gBAAgB,GAAGD,OAAO,CAAC,iCAAD,CAA9B;;AACA,IAAID,cAAc,GAAGC,OAAO,CAAC,+BAAD,CAA5B;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,QAAD,CAAlB;;IACMG,iB;;;;;;;;;2BACgBC,G,EAAKC,G;;;;;;;AAEjBC,cAAAA,I,GAAO,E;;AACX,kBAAIF,GAAG,CAACG,OAAJ,CAAYD,IAAhB,EAAsB;AACpBA,gBAAAA,IAAI,GAAGF,GAAG,CAACG,OAAJ,CAAYD,IAAnB;AACD;;AACGE,cAAAA,K,GAAQJ,GAAG,CAACK,MAAJ,CAAWD,K;;mDACJT,cAAc,CAACW,UAAf,CAA0BC,QAAQ,CAACH,KAAD,CAAlC,C;;;AAAbI,cAAAA,I;;mDACgBb,cAAc,CAACc,MAAf,E;;;AAAhBC,cAAAA,O;;mDACgBf,cAAc,CAACc,MAAf,E;;;AAAhBE,cAAAA,O;;mDACkBd,gBAAgB,CAACe,MAAjB,E;;;AAAlBC,cAAAA,S;;AACN,kBAAIF,OAAO,CAAC,CAAD,CAAP,CAAWG,MAAX,IAAqB,EAArB,IAA2B,CAACH,OAAO,CAACG,MAAxC,EAAgD;AAC9Cb,gBAAAA,GAAG,CAACc,MAAJ,CAAW,gCAAX,EAA6C;AAC3CP,kBAAAA,IAAI,EAAJA,IAD2C;AACtCE,kBAAAA,OAAO,EAAPA,OADsC;AAE3CC,kBAAAA,OAAO,EAAPA,OAF2C;AAG3Cb,kBAAAA,IAAI,EAAJA,IAH2C;AAI3Ce,kBAAAA,SAAS,EAATA,SAJ2C;AAK3CT,kBAAAA,KAAK,EAALA,KAL2C;AAM3CF,kBAAAA,IAAI,EAAJA,IAN2C;AAMtCc,kBAAAA,GAAG,EAAC;AANkC,iBAA7C;AAQD,eATD,MASO;AACLf,gBAAAA,GAAG,CAACc,MAAJ,CAAW,gCAAX,EAA6C;AAC3CP,kBAAAA,IAAI,EAAJA,IAD2C;AACtCE,kBAAAA,OAAO,EAAPA,OADsC;AAE3CC,kBAAAA,OAAO,EAAPA,OAF2C;AAG3Cb,kBAAAA,IAAI,EAAJA,IAH2C;AAI3Ce,kBAAAA,SAAS,EAATA,SAJ2C;AAK3CT,kBAAAA,KAAK,EAALA,KAL2C;AAM3CF,kBAAAA,IAAI,EAAJA,IAN2C;AAMtCc,kBAAAA,GAAG,EAAC;AANkC,iBAA7C;AAQD;;+CACM,C;;;;;;;;;;;;;;;;yBAKOhB,G,EAAKC,G;;;;;;;AAEfC,cAAAA,I,GAAO,E;;AACX,kBAAIF,GAAG,CAACG,OAAJ,CAAYD,IAAhB,EAAsB;AACpBA,gBAAAA,IAAI,GAAGF,GAAG,CAACG,OAAJ,CAAYD,IAAnB;AACD;;AACGE,cAAAA,K,GAAQJ,GAAG,CAACK,MAAJ,CAAWD,K;AACnBa,cAAAA,U,GAAajB,GAAG,CAACK,MAAJ,CAAWQ,S;AACxBK,cAAAA,E,GAAKlB,GAAG,CAACK,MAAJ,CAAWa,E;;mDACDvB,cAAc,CAACwB,QAAf,CAAwBZ,QAAQ,CAACH,KAAD,CAAhC,EAAwCa,UAAxC,C;;;AAAbT,cAAAA,I;;mDACgBb,cAAc,CAACyB,IAAf,CAAoBb,QAAQ,CAACW,EAAD,CAA5B,C;;;AAAhBP,cAAAA,O;;mDACkBd,gBAAgB,CAACe,MAAjB,E;;;AAAlBC,cAAAA,S;;mDACgBlB,cAAc,CAACc,MAAf,E;;;AAAhBC,cAAAA,O;;AACN,kBAAIC,OAAO,CAAC,CAAD,CAAP,CAAWG,MAAX,IAAqB,EAArB,IAA2B,CAACH,OAAO,CAACG,MAAxC,EAAgD;AAC9Cb,gBAAAA,GAAG,CAACc,MAAJ,CAAW,gCAAX,EAA6C;AAC3CP,kBAAAA,IAAI,EAAJA,IAD2C;AACtCE,kBAAAA,OAAO,EAAPA,OADsC;AAE3CC,kBAAAA,OAAO,EAAPA,OAF2C;AAG3Cb,kBAAAA,IAAI,EAAJA,IAH2C;AAI3Ce,kBAAAA,SAAS,EAATA,SAJ2C;AAK3CT,kBAAAA,KAAK,EAALA,KAL2C;AAM3CF,kBAAAA,IAAI,EAAJA,IAN2C;AAMtCc,kBAAAA,GAAG,EAAC;AANkC,iBAA7C;AAQD,eATD,MASO;AACLf,gBAAAA,GAAG,CAACc,MAAJ,CAAW,gCAAX,EAA6C;AAC3CP,kBAAAA,IAAI,EAAJA,IAD2C;AACtCE,kBAAAA,OAAO,EAAPA,OADsC;AAE3CC,kBAAAA,OAAO,EAAPA,OAF2C;AAG3Cb,kBAAAA,IAAI,EAAJA,IAH2C;AAI3Ce,kBAAAA,SAAS,EAATA,SAJ2C;AAK3CT,kBAAAA,KAAK,EAALA,KAL2C;AAM3CF,kBAAAA,IAAI,EAAJA,IAN2C;AAMtCc,kBAAAA,GAAG,EAAC;AANkC,iBAA7C;AAQD;;gDACM,C;;;;;;;;;;;;;;;;iCAMehB,G,EAAKC,G;;;;;;;AAEvBC,cAAAA,I,GAAO,E;;AACX,kBAAIF,GAAG,CAACG,OAAJ,CAAYD,IAAhB,EAAsB;AACpBA,gBAAAA,IAAI,GAAGF,GAAG,CAACG,OAAJ,CAAYD,IAAnB;AACD;;AACGE,cAAAA,K,GAAQJ,GAAG,CAACK,MAAJ,CAAWD,K;AACnBa,cAAAA,U,GAAajB,GAAG,CAACK,MAAJ,CAAWQ,S;;mDACTlB,cAAc,CAACwB,QAAf,CAAwBZ,QAAQ,CAACH,KAAD,CAAhC,EAAyCa,UAAzC,C;;;AAAbT,cAAAA,I;;mDACgBb,cAAc,CAACc,MAAf,E;;;AAAhBC,cAAAA,O;;mDACkBb,gBAAgB,CAACe,MAAjB,E;;;AAAlBC,cAAAA,S;;mDACgBlB,cAAc,CAAC0B,MAAf,CAAsBJ,UAAtB,C;;;AAAhBN,cAAAA,O;;AAEN,kBAAIA,OAAO,CAAC,CAAD,CAAP,CAAWG,MAAX,IAAqB,EAArB,IAA2B,CAACH,OAAO,CAACG,MAAxC,EAAgD;AAC9Cb,gBAAAA,GAAG,CAACc,MAAJ,CAAW,gCAAX,EAA6C;AAC3CP,kBAAAA,IAAI,EAAJA,IAD2C;AACtCE,kBAAAA,OAAO,EAAPA,OADsC;AAE3CC,kBAAAA,OAAO,EAAPA,OAF2C;AAEnCE,kBAAAA,SAAS,EAATA,SAFmC;AAG3Cf,kBAAAA,IAAI,EAAJA,IAH2C;AAI3CM,kBAAAA,KAAK,EAALA,KAJ2C;AAK3CF,kBAAAA,IAAI,EAAJA,IAL2C;AAKrCc,kBAAAA,GAAG,EAAC;AALiC,iBAA7C;AAOD,eARD,MAQO;AACLf,gBAAAA,GAAG,CAACc,MAAJ,CAAW,gCAAX,EAA6C;AAC3CP,kBAAAA,IAAI,EAAJA,IAD2C;AACtCE,kBAAAA,OAAO,EAAPA,OADsC;AAE3CC,kBAAAA,OAAO,EAAPA,OAF2C;AAEnCE,kBAAAA,SAAS,EAATA,SAFmC;AAG3Cf,kBAAAA,IAAI,EAAJA,IAH2C;AAI3CM,kBAAAA,KAAK,EAALA,KAJ2C;AAK3CF,kBAAAA,IAAI,EAAJA,IAL2C;AAKrCc,kBAAAA,GAAG,EAAC;AALiC,iBAA7C;AAQD;;gDACM,C;;;;;;;;;;;;;;;;;;AAObM,MAAM,CAACC,OAAP,GAAiBxB,iBAAjB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\outsite",
      "sourcesContent": [
        "var baivietService = require(\"../../services/baivietService\");\r\nvar chuyenmucService = require(\"../../services/chuyenmucService\");\r\nvar baivietService = require(\"../../services/baivietService\");\r\nvar date = require(\"s-date\");\r\nclass diendanController {\r\n  static async getAll(req, res) {\r\n    try {\r\n      let user = [];\r\n      if (req.session.user) {\r\n        user = req.session.user;\r\n      }\r\n      let limit = req.params.limit;\r\n      const data = await baivietService.getOutsite(parseInt(limit));\r\n      const baiviet = await baivietService.getNew(); \r\n      const moiNhat = await baivietService.getNew();\r\n      const chuyenmuc = await chuyenmucService.getAll();\r\n      if (moiNhat[0].length != [] || !moiNhat.length) {\r\n        res.render(\"../apps/views/outsite/blog.ejs\", {\r\n          data,baiviet,\r\n          moiNhat,\r\n          date,\r\n          chuyenmuc,\r\n          limit,\r\n          user,mes:1\r\n        });\r\n      } else {\r\n        res.render(\"../apps/views/outsite/blog.ejs\", {\r\n          data,baiviet,\r\n          moiNhat,\r\n          date,\r\n          chuyenmuc,\r\n          limit,\r\n          user,mes:0\r\n        });\r\n      }\r\n      return 0;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n  static async getA(req, res) {\r\n    try {\r\n      let user = [];\r\n      if (req.session.user) {\r\n        user = req.session.user;\r\n      }\r\n      let limit = req.params.limit;\r\n      let chuyenmuc1 = req.params.chuyenmuc;\r\n      let id = req.params.id;\r\n      const data = await baivietService.getNeWCM(parseInt(limit),chuyenmuc1);\r\n      const moiNhat = await baivietService.getA(parseInt(id));\r\n      const chuyenmuc = await chuyenmucService.getAll();\r\n      const baiviet = await baivietService.getNew();\r\n      if (moiNhat[0].length != [] || !moiNhat.length) {\r\n        res.render(\"../apps/views/outsite/blog.ejs\", {\r\n          data,baiviet,\r\n          moiNhat,\r\n          date,\r\n          chuyenmuc,\r\n          limit,\r\n          user,mes:1\r\n        });\r\n      } else {\r\n        res.render(\"../apps/views/outsite/blog.ejs\", {\r\n          data,baiviet,\r\n          moiNhat,\r\n          date,\r\n          chuyenmuc,\r\n          limit,\r\n          user,mes:0\r\n        });\r\n      }\r\n      return 0;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  static async getChuyenMuc(req, res) {\r\n    try {\r\n      let user = [];\r\n      if (req.session.user) {\r\n        user = req.session.user;\r\n      }\r\n      let limit = req.params.limit;\r\n      let chuyenmuc1 = req.params.chuyenmuc;\r\n      const data = await baivietService.getNeWCM(parseInt(limit), chuyenmuc1);\r\n      const baiviet = await baivietService.getNew();\r\n      const chuyenmuc = await chuyenmucService.getAll();\r\n      const moiNhat = await baivietService.getACM(chuyenmuc1);     \r\n     \r\n      if (moiNhat[0].length != [] || !moiNhat.length) {\r\n        res.render(\"../apps/views/outsite/blog.ejs\", {\r\n          data,baiviet,\r\n          moiNhat,chuyenmuc,\r\n          date,\r\n          limit,\r\n          user, mes:1\r\n        });\r\n      } else {\r\n        res.render(\"../apps/views/outsite/blog.ejs\", {\r\n          data,baiviet,\r\n          moiNhat,chuyenmuc,\r\n          date,\r\n          limit,\r\n          user, mes:0\r\n          \r\n        });\r\n      }\r\n      return 0;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = diendanController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1587478472453
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\services\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\services\\\\chuyenmucService.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services\\chuyenmucService.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services\\chuyenmucService.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services\\chuyenmucService.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services",
        "sourceFileName": "chuyenmucService.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar database = require(\"../../Model/models\");\n\nvar chuyenmucService =\n/*#__PURE__*/\nfunction () {\n  function chuyenmucService() {\n    (0, _classCallCheck2[\"default\"])(this, chuyenmucService);\n  }\n\n  (0, _createClass2[\"default\"])(chuyenmucService, null, [{\n    key: \"getAll\",\n    value: function getAll() {\n      return _regenerator[\"default\"].async(function getAll$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regenerator[\"default\"].awrap(database.chuyenmuc.findAll({\n                order: [[\"id\", \"DESC\"]]\n              }));\n\n            case 3:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              throw _context.t0;\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"getOutsite\",\n    value: function getOutsite(limit) {\n      return _regenerator[\"default\"].async(function getOutsite$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regenerator[\"default\"].awrap(database.chuyenmuc.findAll({\n                where: {\n                  trangthai: 1\n                },\n                order: [[\"id\", \"DESC\"]],\n                limit: limit\n              }));\n\n            case 3:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              throw _context2.t0;\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    } // Outsite\n\n  }, {\n    key: \"getNeWCM\",\n    value: function getNeWCM(limit, chuyenmuc) {\n      return _regenerator[\"default\"].async(function getNeWCM$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regenerator[\"default\"].awrap(database.chuyenmuc.findAll({\n                where: {\n                  trangthai: 1,\n                  chuyenmuc: chuyenmuc\n                },\n                order: [[\"id\", \"DESC\"]],\n                limit: limit\n              }));\n\n            case 3:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 6:\n              _context3.prev = 6;\n              _context3.t0 = _context3[\"catch\"](0);\n              throw _context3.t0;\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"getACM\",\n    value: function getACM(chuyenmuc) {\n      var tk;\n      return _regenerator[\"default\"].async(function getACM$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return _regenerator[\"default\"].awrap(database.khoahoc.sequelize.query(\"SELECT  * FROM public.chuyenmucs  where id = (SELECT MAX(id) FROM chuyenmucs WHERE trangthai =1 and chuyenmuc = '\" + chuyenmuc + \"')  \"));\n\n            case 3:\n              tk = _context4.sent;\n\n              if (!tk) {\n                _context4.next = 8;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", tk);\n\n            case 8:\n              return _context4.abrupt(\"return\", 0);\n\n            case 9:\n              _context4.next = 14;\n              break;\n\n            case 11:\n              _context4.prev = 11;\n              _context4.t0 = _context4[\"catch\"](0);\n              throw _context4.t0;\n\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 11]]);\n    }\n  }, {\n    key: \"getA\",\n    value: function getA(id) {\n      var tk;\n      return _regenerator[\"default\"].async(function getA$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return _regenerator[\"default\"].awrap(database.khoahoc.sequelize.query(\"SELECT  * FROM public.chuyenmucs  where id = \" + id + \" \"));\n\n            case 3:\n              tk = _context5.sent;\n\n              if (!tk) {\n                _context5.next = 8;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", tk);\n\n            case 8:\n              return _context5.abrupt(\"return\", 0);\n\n            case 9:\n              _context5.next = 14;\n              break;\n\n            case 11:\n              _context5.prev = 11;\n              _context5.t0 = _context5[\"catch\"](0);\n              throw _context5.t0;\n\n            case 14:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 11]]);\n    }\n  }, {\n    key: \"getNew\",\n    value: function getNew() {\n      return _regenerator[\"default\"].async(function getNew$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return _regenerator[\"default\"].awrap(database.chuyenmuc.sequelize.query(\"SELECT *\\n        FROM chuyenmucs\\n        WHERE id = (SELECT MAX(id) FROM chuyenmucs WHERE trangthai =1 ) \"));\n\n            case 3:\n              return _context6.abrupt(\"return\", _context6.sent);\n\n            case 6:\n              _context6.prev = 6;\n              _context6.t0 = _context6[\"catch\"](0);\n              throw _context6.t0;\n\n            case 9:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(id) {\n      return _regenerator[\"default\"].async(function _delete$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _context7.next = 3;\n              return _regenerator[\"default\"].awrap(database.chuyenmuc.destroy({\n                where: {\n                  id: id\n                }\n              }));\n\n            case 3:\n              return _context7.abrupt(\"return\", _context7.sent);\n\n            case 6:\n              _context7.prev = 6;\n              _context7.t0 = _context7[\"catch\"](0);\n              throw _context7.t0;\n\n            case 9:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"Save\",\n    value: function Save(data) {\n      return _regenerator[\"default\"].async(function Save$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              _context8.next = 3;\n              return _regenerator[\"default\"].awrap(database.chuyenmuc.create(data));\n\n            case 3:\n              return _context8.abrupt(\"return\", _context8.sent);\n\n            case 6:\n              _context8.prev = 6;\n              _context8.t0 = _context8[\"catch\"](0);\n              throw _context8.t0;\n\n            case 9:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"Update\",\n    value: function Update(id, data) {\n      var tk, th;\n      return _regenerator[\"default\"].async(function Update$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.prev = 0;\n              _context9.next = 3;\n              return _regenerator[\"default\"].awrap(database.chuyenmuc.findOne({\n                where: {\n                  id: id\n                }\n              }));\n\n            case 3:\n              tk = _context9.sent;\n\n              if (!tk) {\n                _context9.next = 9;\n                break;\n              }\n\n              _context9.next = 7;\n              return _regenerator[\"default\"].awrap(database.chuyenmuc.update(data, {\n                where: {\n                  id: id\n                }\n              }));\n\n            case 7:\n              th = _context9.sent;\n              return _context9.abrupt(\"return\", th);\n\n            case 9:\n              return _context9.abrupt(\"return\", null);\n\n            case 12:\n              _context9.prev = 12;\n              _context9.t0 = _context9[\"catch\"](0);\n              throw _context9.t0;\n\n            case 15:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, null, null, [[0, 12]]);\n    }\n  }]);\n  return chuyenmucService;\n}();\n\nmodule.exports = chuyenmucService;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNodXllbm11Y1NlcnZpY2UuanMiXSwibmFtZXMiOlsiZGF0YWJhc2UiLCJyZXF1aXJlIiwiY2h1eWVubXVjU2VydmljZSIsImNodXllbm11YyIsImZpbmRBbGwiLCJvcmRlciIsImxpbWl0Iiwid2hlcmUiLCJ0cmFuZ3RoYWkiLCJraG9haG9jIiwic2VxdWVsaXplIiwicXVlcnkiLCJ0ayIsImlkIiwiZGVzdHJveSIsImRhdGEiLCJjcmVhdGUiLCJmaW5kT25lIiwidXBkYXRlIiwidGgiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEsSUFBSUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsb0JBQUQsQ0FBdEI7O0lBRU1DLGdCOzs7Ozs7Ozs7Ozs7Ozs7O21EQUdhRixRQUFRLENBQUNHLFNBQVQsQ0FBbUJDLE9BQW5CLENBQTJCO0FBQ3RDQyxnQkFBQUEsS0FBSyxFQUFFLENBQUMsQ0FBQyxJQUFELEVBQU8sTUFBUCxDQUFEO0FBRCtCLGVBQTNCLEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0JBT09DLEs7Ozs7Ozs7bURBRVBOLFFBQVEsQ0FBQ0csU0FBVCxDQUFtQkMsT0FBbkIsQ0FBMkI7QUFDdENHLGdCQUFBQSxLQUFLLEVBQUU7QUFBRUMsa0JBQUFBLFNBQVMsRUFBRTtBQUFiLGlCQUQrQjtBQUV0Q0gsZ0JBQUFBLEtBQUssRUFBRSxDQUFDLENBQUMsSUFBRCxFQUFPLE1BQVAsQ0FBRCxDQUYrQjtBQUd0Q0MsZ0JBQUFBLEtBQUssRUFBRUE7QUFIK0IsZUFBM0IsQzs7Ozs7Ozs7Ozs7Ozs7OztNQVNqQjs7Ozs2QkFDc0JBLEssRUFBTUgsUzs7Ozs7OzttREFFWEgsUUFBUSxDQUFDRyxTQUFULENBQW1CQyxPQUFuQixDQUEyQjtBQUN0Q0csZ0JBQUFBLEtBQUssRUFBRTtBQUFFQyxrQkFBQUEsU0FBUyxFQUFFLENBQWI7QUFBaUJMLGtCQUFBQSxTQUFTLEVBQVRBO0FBQWpCLGlCQUQrQjtBQUV0Q0UsZ0JBQUFBLEtBQUssRUFBRSxDQUFDLENBQUMsSUFBRCxFQUFPLE1BQVAsQ0FBRCxDQUYrQjtBQUd0Q0MsZ0JBQUFBLEtBQUssRUFBRUE7QUFIK0IsZUFBM0IsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsyQkFTR0gsUzs7Ozs7Ozs7bURBRURILFFBQVEsQ0FBQ1MsT0FBVCxDQUFpQkMsU0FBakIsQ0FBMkJDLEtBQTNCLENBQ2Isc0hBQW9IUixTQUFwSCxTQURhLEM7OztBQUFYUyxjQUFBQSxFOzttQkFHQUEsRTs7Ozs7Z0RBQ0tBLEU7OztnREFFQSxDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt5QkFPS0MsRTs7Ozs7Ozs7bURBRUNiLFFBQVEsQ0FBQ1MsT0FBVCxDQUFpQkMsU0FBakIsQ0FBMkJDLEtBQTNCLENBQ2Isa0RBQWtERSxFQUFsRCxNQURhLEM7OztBQUFYRCxjQUFBQSxFOzttQkFHQUEsRTs7Ozs7Z0RBQ0tBLEU7OztnREFFQSxDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7bURBUUlaLFFBQVEsQ0FBQ0csU0FBVCxDQUFtQk8sU0FBbkIsQ0FBNkJDLEtBQTdCLCtHOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OzRCQVNHRSxFOzs7Ozs7O21EQUVIYixRQUFRLENBQUNHLFNBQVQsQ0FBbUJXLE9BQW5CLENBQTJCO0FBQ3RDUCxnQkFBQUEsS0FBSyxFQUFFO0FBQUVNLGtCQUFBQSxFQUFFLEVBQUZBO0FBQUY7QUFEK0IsZUFBM0IsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt5QkFPQ0UsSTs7Ozs7OzttREFFRGYsUUFBUSxDQUFDRyxTQUFULENBQW1CYSxNQUFuQixDQUEwQkQsSUFBMUIsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsyQkFNR0YsRSxFQUFJRSxJOzs7Ozs7OzttREFFTGYsUUFBUSxDQUFDRyxTQUFULENBQW1CYyxPQUFuQixDQUEyQjtBQUN4Q1YsZ0JBQUFBLEtBQUssRUFBRTtBQUFFTSxrQkFBQUEsRUFBRSxFQUFGQTtBQUFGO0FBRGlDLGVBQTNCLEM7OztBQUFYRCxjQUFBQSxFOzttQkFHQUEsRTs7Ozs7O21EQUNhWixRQUFRLENBQUNHLFNBQVQsQ0FBbUJlLE1BQW5CLENBQTBCSCxJQUExQixFQUFnQztBQUM3Q1IsZ0JBQUFBLEtBQUssRUFBRTtBQUFFTSxrQkFBQUEsRUFBRSxFQUFGQTtBQUFGO0FBRHNDLGVBQWhDLEM7OztBQUFYTSxjQUFBQSxFO2dEQUdHQSxFOzs7Z0RBRUYsSTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBT2JDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFrQm5CLGdCQUFsQiIsInNvdXJjZVJvb3QiOiJEOlxcTHVhblZhblxcTHVhblZhbkQyXFx0cnVuZ3RhbV9sYW40XFxhcHBzXFxzZXJ2aWNlcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBkYXRhYmFzZSA9IHJlcXVpcmUoXCIuLi8uLi9Nb2RlbC9tb2RlbHNcIik7XHJcblxyXG5jbGFzcyBjaHV5ZW5tdWNTZXJ2aWNlIHtcclxuICBzdGF0aWMgYXN5bmMgZ2V0QWxsKCkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgcmV0dXJuIGF3YWl0IGRhdGFiYXNlLmNodXllbm11Yy5maW5kQWxsKHsgICAgICAgIFxyXG4gICAgICAgIG9yZGVyOiBbW1wiaWRcIiwgXCJERVNDXCJdXVxyXG4gICAgICB9KTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG4gIH1cclxuICBzdGF0aWMgYXN5bmMgZ2V0T3V0c2l0ZShsaW1pdCkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgcmV0dXJuIGF3YWl0IGRhdGFiYXNlLmNodXllbm11Yy5maW5kQWxsKHtcclxuICAgICAgICB3aGVyZTogeyB0cmFuZ3RoYWk6IDEgfSxcclxuICAgICAgICBvcmRlcjogW1tcImlkXCIsIFwiREVTQ1wiXV0sXHJcbiAgICAgICAgbGltaXQ6IGxpbWl0XHJcbiAgICAgIH0pO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG4gIC8vIE91dHNpdGVcclxuICBzdGF0aWMgYXN5bmMgZ2V0TmVXQ00obGltaXQsY2h1eWVubXVjKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICByZXR1cm4gYXdhaXQgZGF0YWJhc2UuY2h1eWVubXVjLmZpbmRBbGwoe1xyXG4gICAgICAgIHdoZXJlOiB7IHRyYW5ndGhhaTogMSAsIGNodXllbm11YyB9LFxyXG4gICAgICAgIG9yZGVyOiBbW1wiaWRcIiwgXCJERVNDXCJdXSxcclxuICAgICAgICBsaW1pdDogbGltaXRcclxuICAgICAgfSk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9XHJcbiAgc3RhdGljIGFzeW5jIGdldEFDTShjaHV5ZW5tdWMpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGxldCB0ayA9IGF3YWl0IGRhdGFiYXNlLmtob2Fob2Muc2VxdWVsaXplLnF1ZXJ5KFxyXG4gICAgICAgIGBTRUxFQ1QgICogRlJPTSBwdWJsaWMuY2h1eWVubXVjcyAgd2hlcmUgaWQgPSAoU0VMRUNUIE1BWChpZCkgRlJPTSBjaHV5ZW5tdWNzIFdIRVJFIHRyYW5ndGhhaSA9MSBhbmQgY2h1eWVubXVjID0gJ2ArY2h1eWVubXVjK2AnKSAgYFxyXG4gICAgICApO1xyXG4gICAgICBpZiAodGspIHtcclxuICAgICAgICByZXR1cm4gdGs7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuIDA7XHJcbiAgICAgIH1cclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc3RhdGljIGFzeW5jIGdldEEoaWQpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGxldCB0ayA9IGF3YWl0IGRhdGFiYXNlLmtob2Fob2Muc2VxdWVsaXplLnF1ZXJ5KFxyXG4gICAgICAgIGBTRUxFQ1QgICogRlJPTSBwdWJsaWMuY2h1eWVubXVjcyAgd2hlcmUgaWQgPSBgICsgaWQgKyBgIGBcclxuICAgICAgKTtcclxuICAgICAgaWYgKHRrKSB7XHJcbiAgICAgICAgcmV0dXJuIHRrO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJldHVybiAwO1xyXG4gICAgICB9XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9XHJcbiAgc3RhdGljIGFzeW5jIGdldE5ldygpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgIHJldHVybiBhd2FpdCBkYXRhYmFzZS5jaHV5ZW5tdWMuc2VxdWVsaXplLnF1ZXJ5KFxyXG4gICAgICAgIGBTRUxFQ1QgKlxyXG4gICAgICAgIEZST00gY2h1eWVubXVjc1xyXG4gICAgICAgIFdIRVJFIGlkID0gKFNFTEVDVCBNQVgoaWQpIEZST00gY2h1eWVubXVjcyBXSEVSRSB0cmFuZ3RoYWkgPTEgKSBgXHJcbiAgICAgICk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9XHJcbiAgc3RhdGljIGFzeW5jIGRlbGV0ZShpZCkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgcmV0dXJuIGF3YWl0IGRhdGFiYXNlLmNodXllbm11Yy5kZXN0cm95KHtcclxuICAgICAgICB3aGVyZTogeyBpZCB9XHJcbiAgICAgIH0pO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHN0YXRpYyBhc3luYyBTYXZlKGRhdGEpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgIHJldHVybiBhd2FpdCBkYXRhYmFzZS5jaHV5ZW5tdWMuY3JlYXRlKGRhdGEpO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgYXN5bmMgVXBkYXRlKGlkLCBkYXRhKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICBsZXQgdGsgPSBhd2FpdCBkYXRhYmFzZS5jaHV5ZW5tdWMuZmluZE9uZSh7XHJcbiAgICAgICAgd2hlcmU6IHsgaWQgfVxyXG4gICAgICB9KTtcclxuICAgICAgaWYgKHRrKSB7XHJcbiAgICAgICAgbGV0IHRoID0gYXdhaXQgZGF0YWJhc2UuY2h1eWVubXVjLnVwZGF0ZShkYXRhLCB7XHJcbiAgICAgICAgICB3aGVyZTogeyBpZCB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmV0dXJuIHRoO1xyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9ICBjaHV5ZW5tdWNTZXJ2aWNlO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "chuyenmucService.js"
      ],
      "names": [
        "database",
        "require",
        "chuyenmucService",
        "chuyenmuc",
        "findAll",
        "order",
        "limit",
        "where",
        "trangthai",
        "khoahoc",
        "sequelize",
        "query",
        "tk",
        "id",
        "destroy",
        "data",
        "create",
        "findOne",
        "update",
        "th",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,oBAAD,CAAtB;;IAEMC,gB;;;;;;;;;;;;;;;;mDAGaF,QAAQ,CAACG,SAAT,CAAmBC,OAAnB,CAA2B;AACtCC,gBAAAA,KAAK,EAAE,CAAC,CAAC,IAAD,EAAO,MAAP,CAAD;AAD+B,eAA3B,C;;;;;;;;;;;;;;;;;;;+BAOOC,K;;;;;;;mDAEPN,QAAQ,CAACG,SAAT,CAAmBC,OAAnB,CAA2B;AACtCG,gBAAAA,KAAK,EAAE;AAAEC,kBAAAA,SAAS,EAAE;AAAb,iBAD+B;AAEtCH,gBAAAA,KAAK,EAAE,CAAC,CAAC,IAAD,EAAO,MAAP,CAAD,CAF+B;AAGtCC,gBAAAA,KAAK,EAAEA;AAH+B,eAA3B,C;;;;;;;;;;;;;;;;MASjB;;;;6BACsBA,K,EAAMH,S;;;;;;;mDAEXH,QAAQ,CAACG,SAAT,CAAmBC,OAAnB,CAA2B;AACtCG,gBAAAA,KAAK,EAAE;AAAEC,kBAAAA,SAAS,EAAE,CAAb;AAAiBL,kBAAAA,SAAS,EAATA;AAAjB,iBAD+B;AAEtCE,gBAAAA,KAAK,EAAE,CAAC,CAAC,IAAD,EAAO,MAAP,CAAD,CAF+B;AAGtCC,gBAAAA,KAAK,EAAEA;AAH+B,eAA3B,C;;;;;;;;;;;;;;;;;;;2BASGH,S;;;;;;;;mDAEDH,QAAQ,CAACS,OAAT,CAAiBC,SAAjB,CAA2BC,KAA3B,CACb,sHAAoHR,SAApH,SADa,C;;;AAAXS,cAAAA,E;;mBAGAA,E;;;;;gDACKA,E;;;gDAEA,C;;;;;;;;;;;;;;;;;;;;yBAOKC,E;;;;;;;;mDAECb,QAAQ,CAACS,OAAT,CAAiBC,SAAjB,CAA2BC,KAA3B,CACb,kDAAkDE,EAAlD,MADa,C;;;AAAXD,cAAAA,E;;mBAGAA,E;;;;;gDACKA,E;;;gDAEA,C;;;;;;;;;;;;;;;;;;;;;;;;;;;mDAQIZ,QAAQ,CAACG,SAAT,CAAmBO,SAAnB,CAA6BC,KAA7B,+G;;;;;;;;;;;;;;;;;;;4BASGE,E;;;;;;;mDAEHb,QAAQ,CAACG,SAAT,CAAmBW,OAAnB,CAA2B;AACtCP,gBAAAA,KAAK,EAAE;AAAEM,kBAAAA,EAAE,EAAFA;AAAF;AAD+B,eAA3B,C;;;;;;;;;;;;;;;;;;;yBAOCE,I;;;;;;;mDAEDf,QAAQ,CAACG,SAAT,CAAmBa,MAAnB,CAA0BD,IAA1B,C;;;;;;;;;;;;;;;;;;;2BAMGF,E,EAAIE,I;;;;;;;;mDAELf,QAAQ,CAACG,SAAT,CAAmBc,OAAnB,CAA2B;AACxCV,gBAAAA,KAAK,EAAE;AAAEM,kBAAAA,EAAE,EAAFA;AAAF;AADiC,eAA3B,C;;;AAAXD,cAAAA,E;;mBAGAA,E;;;;;;mDACaZ,QAAQ,CAACG,SAAT,CAAmBe,MAAnB,CAA0BH,IAA1B,EAAgC;AAC7CR,gBAAAA,KAAK,EAAE;AAAEM,kBAAAA,EAAE,EAAFA;AAAF;AADsC,eAAhC,C;;;AAAXM,cAAAA,E;gDAGGA,E;;;gDAEF,I;;;;;;;;;;;;;;;;;;AAObC,MAAM,CAACC,OAAP,GAAkBnB,gBAAlB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services",
      "sourcesContent": [
        "var database = require(\"../../Model/models\");\r\n\r\nclass chuyenmucService {\r\n  static async getAll() {\r\n    try {\r\n      return await database.chuyenmuc.findAll({        \r\n        order: [[\"id\", \"DESC\"]]\r\n      });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  static async getOutsite(limit) {\r\n    try {\r\n      return await database.chuyenmuc.findAll({\r\n        where: { trangthai: 1 },\r\n        order: [[\"id\", \"DESC\"]],\r\n        limit: limit\r\n      });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  // Outsite\r\n  static async getNeWCM(limit,chuyenmuc) {\r\n    try {\r\n      return await database.chuyenmuc.findAll({\r\n        where: { trangthai: 1 , chuyenmuc },\r\n        order: [[\"id\", \"DESC\"]],\r\n        limit: limit\r\n      });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  static async getACM(chuyenmuc) {\r\n    try {\r\n      let tk = await database.khoahoc.sequelize.query(\r\n        `SELECT  * FROM public.chuyenmucs  where id = (SELECT MAX(id) FROM chuyenmucs WHERE trangthai =1 and chuyenmuc = '`+chuyenmuc+`')  `\r\n      );\r\n      if (tk) {\r\n        return tk;\r\n      } else {\r\n        return 0;\r\n      }\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async getA(id) {\r\n    try {\r\n      let tk = await database.khoahoc.sequelize.query(\r\n        `SELECT  * FROM public.chuyenmucs  where id = ` + id + ` `\r\n      );\r\n      if (tk) {\r\n        return tk;\r\n      } else {\r\n        return 0;\r\n      }\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  static async getNew() {\r\n    try {\r\n      return await database.chuyenmuc.sequelize.query(\r\n        `SELECT *\r\n        FROM chuyenmucs\r\n        WHERE id = (SELECT MAX(id) FROM chuyenmucs WHERE trangthai =1 ) `\r\n      );\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  static async delete(id) {\r\n    try {\r\n      return await database.chuyenmuc.destroy({\r\n        where: { id }\r\n      });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  static async Save(data) {\r\n    try {\r\n      return await database.chuyenmuc.create(data);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async Update(id, data) {\r\n    try {\r\n      let tk = await database.chuyenmuc.findOne({\r\n        where: { id }\r\n      });\r\n      if (tk) {\r\n        let th = await database.chuyenmuc.update(data, {\r\n          where: { id }\r\n        });\r\n        return th;\r\n      }\r\n      return null;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports =  chuyenmucService;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1586164739642
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\\\\AdminRouter.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\AdminRouter.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\AdminRouter.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\AdminRouter.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
        "sourceFileName": "AdminRouter.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _express = require(\"express\");\n\nvar _AdminC = _interopRequireDefault(require(\"../controllers/AdminC\"));\n\nvar router = (0, _express.Router)();\nrouter.route('/').get(_AdminC[\"default\"].get);\nrouter.route('/thongke').get(_AdminC[\"default\"].getTK);\nrouter.route('/thongkeThu').get(_AdminC[\"default\"].getTKThu); //router.get('*', (req, res) => res.redirect(\"/\"));\n//export default router;\n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFkbWluUm91dGVyLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsInJvdXRlIiwiZ2V0IiwiaW5kZXhDIiwiZ2V0VEsiLCJnZXRUS1RodSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFDQTs7QUFHQSxJQUFNQSxNQUFNLEdBQUcsc0JBQWY7QUFDQUEsTUFBTSxDQUFDQyxLQUFQLENBQWEsR0FBYixFQUNDQyxHQURELENBQ0tDLG1CQUFPRCxHQURaO0FBR0FGLE1BQU0sQ0FBQ0MsS0FBUCxDQUFhLFVBQWIsRUFDQ0MsR0FERCxDQUNLQyxtQkFBT0MsS0FEWjtBQUdBSixNQUFNLENBQUNDLEtBQVAsQ0FBYSxhQUFiLEVBQ0NDLEdBREQsQ0FDS0MsbUJBQU9FLFFBRFosRSxDQUdBO0FBRUE7O0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlAsTUFBakIiLCJzb3VyY2VSb290IjoiRDpcXEx1YW5WYW5cXEx1YW5WYW5EMlxcdHJ1bmd0YW1fbGFuNFxcYXBwc1xccm91dGVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gJ2V4cHJlc3MnO1xyXG5pbXBvcnQgaW5kZXhDIGZyb20gJy4uL2NvbnRyb2xsZXJzL0FkbWluQyc7XHJcblxyXG5cclxuY29uc3Qgcm91dGVyID0gUm91dGVyKCk7XHJcbnJvdXRlci5yb3V0ZSgnLycpXHJcbi5nZXQoaW5kZXhDLmdldClcclxuXHJcbnJvdXRlci5yb3V0ZSgnL3Rob25na2UnKVxyXG4uZ2V0KGluZGV4Qy5nZXRUSylcclxuXHJcbnJvdXRlci5yb3V0ZSgnL3Rob25na2VUaHUnKVxyXG4uZ2V0KGluZGV4Qy5nZXRUS1RodSlcclxuXHJcbi8vcm91dGVyLmdldCgnKicsIChyZXEsIHJlcykgPT4gcmVzLnJlZGlyZWN0KFwiL1wiKSk7XHJcblxyXG4vL2V4cG9ydCBkZWZhdWx0IHJvdXRlcjtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gcm91dGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "AdminRouter.js"
      ],
      "names": [
        "router",
        "route",
        "get",
        "indexC",
        "getTK",
        "getTKThu",
        "module",
        "exports"
      ],
      "mappings": ";;;;AAAA;;AACA;;AAGA,IAAMA,MAAM,GAAG,sBAAf;AACAA,MAAM,CAACC,KAAP,CAAa,GAAb,EACCC,GADD,CACKC,mBAAOD,GADZ;AAGAF,MAAM,CAACC,KAAP,CAAa,UAAb,EACCC,GADD,CACKC,mBAAOC,KADZ;AAGAJ,MAAM,CAACC,KAAP,CAAa,aAAb,EACCC,GADD,CACKC,mBAAOE,QADZ,E,CAGA;AAEA;;AAEAC,MAAM,CAACC,OAAP,GAAiBP,MAAjB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
      "sourcesContent": [
        "import { Router } from 'express';\r\nimport indexC from '../controllers/AdminC';\r\n\r\n\r\nconst router = Router();\r\nrouter.route('/')\r\n.get(indexC.get)\r\n\r\nrouter.route('/thongke')\r\n.get(indexC.getTK)\r\n\r\nrouter.route('/thongkeThu')\r\n.get(indexC.getTKThu)\r\n\r\n//router.get('*', (req, res) => res.redirect(\"/\"));\r\n\r\n//export default router;\r\n\r\nmodule.exports = router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1584289572774
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\\\\AdminC.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\AdminC.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\AdminC.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\AdminC.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
        "sourceFileName": "AdminC.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _lopHocService = _interopRequireDefault(require(\"../services/lopHocService\"));\n\nvar _dangkyService = _interopRequireDefault(require(\"../services/dangkyService\"));\n\nvar AdminController =\n/*#__PURE__*/\nfunction () {\n  function AdminController() {\n    (0, _classCallCheck2[\"default\"])(this, AdminController);\n  }\n\n  (0, _createClass2[\"default\"])(AdminController, null, [{\n    key: \"get\",\n    value: function get(req, res) {\n      var data1, data2, user;\n      return _regenerator[\"default\"].async(function get$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\")) {\n                _context.next = 15;\n                break;\n              }\n\n              _context.prev = 1;\n              _context.next = 4;\n              return _regenerator[\"default\"].awrap(_dangkyService[\"default\"].thongke());\n\n            case 4:\n              data1 = _context.sent;\n              data2 = data1[0];\n              user = req.session.user;\n\n              if (data2.length > 0) {\n                res.render(\"../views/admin/index.ejs\", {\n                  data2: data2,\n                  user: user\n                });\n              } else {\n                res.render(\"../views/admin/index.ejs\", {\n                  data2: data2,\n                  user: user\n                });\n              }\n\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](1);\n              return _context.abrupt(\"return\", _context.t0);\n\n            case 13:\n              _context.next = 16;\n              break;\n\n            case 15:\n              return _context.abrupt(\"return\", res.redirect(\"/\"));\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 10]]);\n    }\n  }, {\n    key: \"getTK\",\n    value: function getTK(req, res) {\n      var data1, tong, data;\n      return _regenerator[\"default\"].async(function getTK$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\")) {\n                _context2.next = 17;\n                break;\n              }\n\n              _context2.prev = 1;\n              _context2.next = 4;\n              return _regenerator[\"default\"].awrap(_dangkyService[\"default\"].thongke());\n\n            case 4:\n              data1 = _context2.sent;\n              _context2.next = 7;\n              return _regenerator[\"default\"].awrap(_dangkyService[\"default\"].Tongthongke());\n\n            case 7:\n              tong = _context2.sent;\n              data = data1[0];\n\n              if (data.length > 0) {\n                res.json({\n                  msg: \"success\",\n                  data: data,\n                  tong: tong\n                });\n              } else {\n                res.json({\n                  msg: 'error'\n                });\n              }\n\n              _context2.next = 15;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](1);\n              return _context2.abrupt(\"return\", _context2.t0);\n\n            case 15:\n              _context2.next = 18;\n              break;\n\n            case 17:\n              return _context2.abrupt(\"return\", res.redirect(\"/\"));\n\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[1, 12]]);\n    }\n  }, {\n    key: \"getTKThu\",\n    value: function getTKThu(req, res) {\n      var data1, tong, data;\n      return _regenerator[\"default\"].async(function getTKThu$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\")) {\n                _context3.next = 17;\n                break;\n              }\n\n              _context3.prev = 1;\n              _context3.next = 4;\n              return _regenerator[\"default\"].awrap(_dangkyService[\"default\"].ThongkeThu());\n\n            case 4:\n              data1 = _context3.sent;\n              _context3.next = 7;\n              return _regenerator[\"default\"].awrap(_dangkyService[\"default\"].TongthongkeThu());\n\n            case 7:\n              tong = _context3.sent;\n              data = data1[0];\n\n              if (data.length > 0) {\n                res.json({\n                  msg: \"success\",\n                  data: data,\n                  tong: tong\n                });\n              } else {\n                res.json({\n                  msg: 'error'\n                });\n              }\n\n              _context3.next = 15;\n              break;\n\n            case 12:\n              _context3.prev = 12;\n              _context3.t0 = _context3[\"catch\"](1);\n              return _context3.abrupt(\"return\", _context3.t0);\n\n            case 15:\n              _context3.next = 18;\n              break;\n\n            case 17:\n              return _context3.abrupt(\"return\", res.redirect(\"/\"));\n\n            case 18:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[1, 12]]);\n    }\n  }]);\n  return AdminController;\n}();\n\nvar _default = AdminController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFkbWluQy5qcyJdLCJuYW1lcyI6WyJBZG1pbkNvbnRyb2xsZXIiLCJyZXEiLCJyZXMiLCJzZXNzaW9uIiwidXNlciIsInF1eWVuaGFuZyIsImRhbmdreVNlcnZpY2UiLCJ0aG9uZ2tlIiwiZGF0YTEiLCJkYXRhMiIsImxlbmd0aCIsInJlbmRlciIsInJlZGlyZWN0IiwiVG9uZ3Rob25na2UiLCJ0b25nIiwiZGF0YSIsImpzb24iLCJtc2ciLCJUaG9uZ2tlVGh1IiwiVG9uZ3Rob25na2VUaHUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOztJQUNNQSxlOzs7Ozs7Ozs7d0JBQ2FDLEcsRUFBS0MsRzs7Ozs7O29CQUNoQkQsR0FBRyxDQUFDRSxPQUFKLENBQVlDLElBQVosQ0FBaUJDLFNBQWpCLElBQThCLE9BQTlCLElBQXlDSixHQUFHLENBQUNFLE9BQUosQ0FBWUMsSUFBWixDQUFpQkMsU0FBakIsSUFBOEIsVzs7Ozs7OzttREFFbkRDLDBCQUFjQyxPQUFkLEU7OztBQUFkQyxjQUFBQSxLO0FBQ0ZDLGNBQUFBLEssR0FBUUQsS0FBSyxDQUFDLENBQUQsQztBQUNYSixjQUFBQSxJLEdBQU9ILEdBQUcsQ0FBQ0UsT0FBSixDQUFZQyxJOztBQUN6QixrQkFBSUssS0FBSyxDQUFDQyxNQUFOLEdBQWUsQ0FBbkIsRUFBc0I7QUFDcEJSLGdCQUFBQSxHQUFHLENBQUNTLE1BQUosQ0FBVywwQkFBWCxFQUF1QztBQUNyQ0Ysa0JBQUFBLEtBQUssRUFBTEEsS0FEcUM7QUFDN0JMLGtCQUFBQSxJQUFJLEVBQUpBO0FBRDZCLGlCQUF2QztBQUdELGVBSkQsTUFJTztBQUNMRixnQkFBQUEsR0FBRyxDQUFDUyxNQUFKLENBQVcsMEJBQVgsRUFBdUM7QUFDckNGLGtCQUFBQSxLQUFLLEVBQUxBLEtBRHFDO0FBQzlCTCxrQkFBQUEsSUFBSSxFQUFKQTtBQUQ4QixpQkFBdkM7QUFHRDs7Ozs7Ozs7Ozs7Ozs7OytDQU1JRixHQUFHLENBQUNVLFFBQUosQ0FBYSxHQUFiLEM7Ozs7Ozs7Ozs7OzBCQUdRWCxHLEVBQUtDLEc7Ozs7OztvQkFDbEJELEdBQUcsQ0FBQ0UsT0FBSixDQUFZQyxJQUFaLENBQWlCQyxTQUFqQixJQUE4QixPQUE5QixJQUF5Q0osR0FBRyxDQUFDRSxPQUFKLENBQVlDLElBQVosQ0FBaUJDLFNBQWpCLElBQThCLFc7Ozs7Ozs7bURBR25EQywwQkFBY0MsT0FBZCxFOzs7QUFBZEMsY0FBQUEsSzs7bURBQ2FGLDBCQUFjTyxXQUFkLEU7OztBQUFiQyxjQUFBQSxJO0FBQ0ZDLGNBQUFBLEksR0FBT1AsS0FBSyxDQUFDLENBQUQsQzs7QUFDaEIsa0JBQUlPLElBQUksQ0FBQ0wsTUFBTCxHQUFjLENBQWxCLEVBQXFCO0FBQ25CUixnQkFBQUEsR0FBRyxDQUFDYyxJQUFKLENBQVM7QUFBRUMsa0JBQUFBLEdBQUcsRUFBRSxTQUFQO0FBQWtCRixrQkFBQUEsSUFBSSxFQUFKQSxJQUFsQjtBQUF3QkQsa0JBQUFBLElBQUksRUFBSkE7QUFBeEIsaUJBQVQ7QUFDRCxlQUZELE1BRU87QUFDTFosZ0JBQUFBLEdBQUcsQ0FBQ2MsSUFBSixDQUFTO0FBQUNDLGtCQUFBQSxHQUFHLEVBQUM7QUFBTCxpQkFBVDtBQUNEOzs7Ozs7Ozs7Ozs7Ozs7Z0RBTUlmLEdBQUcsQ0FBQ1UsUUFBSixDQUFhLEdBQWIsQzs7Ozs7Ozs7Ozs7NkJBR1dYLEcsRUFBS0MsRzs7Ozs7O29CQUNyQkQsR0FBRyxDQUFDRSxPQUFKLENBQVlDLElBQVosQ0FBaUJDLFNBQWpCLElBQThCLE9BQTlCLElBQXlDSixHQUFHLENBQUNFLE9BQUosQ0FBWUMsSUFBWixDQUFpQkMsU0FBakIsSUFBOEIsVzs7Ozs7OzttREFFbkRDLDBCQUFjWSxVQUFkLEU7OztBQUFkVixjQUFBQSxLOzttREFDYUYsMEJBQWNhLGNBQWQsRTs7O0FBQWJMLGNBQUFBLEk7QUFDRkMsY0FBQUEsSSxHQUFPUCxLQUFLLENBQUMsQ0FBRCxDOztBQUNoQixrQkFBSU8sSUFBSSxDQUFDTCxNQUFMLEdBQWMsQ0FBbEIsRUFBcUI7QUFDbkJSLGdCQUFBQSxHQUFHLENBQUNjLElBQUosQ0FBUztBQUFFQyxrQkFBQUEsR0FBRyxFQUFFLFNBQVA7QUFBa0JGLGtCQUFBQSxJQUFJLEVBQUpBLElBQWxCO0FBQXdCRCxrQkFBQUEsSUFBSSxFQUFKQTtBQUF4QixpQkFBVDtBQUNELGVBRkQsTUFFTztBQUNMWixnQkFBQUEsR0FBRyxDQUFDYyxJQUFKLENBQVM7QUFBQ0Msa0JBQUFBLEdBQUcsRUFBQztBQUFMLGlCQUFUO0FBQ0Q7Ozs7Ozs7Ozs7Ozs7OztnREFNSWYsR0FBRyxDQUFDVSxRQUFKLENBQWEsR0FBYixDOzs7Ozs7Ozs7Ozs7O2VBSUVaLGUiLCJzb3VyY2VSb290IjoiRDpcXEx1YW5WYW5cXEx1YW5WYW5EMlxcdHJ1bmd0YW1fbGFuNFxcYXBwc1xcY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbG9wSG9jU2VydmljZSBmcm9tIFwiLi4vc2VydmljZXMvbG9wSG9jU2VydmljZVwiO1xyXG5pbXBvcnQgZGFuZ2t5U2VydmljZSBmcm9tIFwiLi4vc2VydmljZXMvZGFuZ2t5U2VydmljZVwiO1xyXG5jbGFzcyBBZG1pbkNvbnRyb2xsZXIge1xyXG4gIHN0YXRpYyBhc3luYyBnZXQocmVxLCByZXMpIHtcclxuICAgIGlmIChyZXEuc2Vzc2lvbi51c2VyLnF1eWVuaGFuZyA9PSBcIkFkbWluXCIgfHwgcmVxLnNlc3Npb24udXNlci5xdXllbmhhbmcgPT0gXCJOaMOibiBWacOqblwiICkge1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IGRhdGExID0gYXdhaXQgZGFuZ2t5U2VydmljZS50aG9uZ2tlKCk7XHJcbiAgICAgICAgdmFyIGRhdGEyID0gZGF0YTFbMF07XHJcbiAgICAgICAgY29uc3QgdXNlciA9IHJlcS5zZXNzaW9uLnVzZXJcclxuICAgICAgICBpZiAoZGF0YTIubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgcmVzLnJlbmRlcihcIi4uL3ZpZXdzL2FkbWluL2luZGV4LmVqc1wiLCB7XHJcbiAgICAgICAgICAgIGRhdGEyICwgdXNlclxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHJlcy5yZW5kZXIoXCIuLi92aWV3cy9hZG1pbi9pbmRleC5lanNcIiwge1xyXG4gICAgICAgICAgICBkYXRhMiAsdXNlclxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICBcclxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICByZXR1cm4gZXJyb3I7XHJcbiAgICAgIH1cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiByZXMucmVkaXJlY3QoXCIvXCIpO1xyXG4gICAgfVxyXG4gIH1cclxuICBzdGF0aWMgYXN5bmMgZ2V0VEsocmVxLCByZXMpIHtcclxuICAgIGlmIChyZXEuc2Vzc2lvbi51c2VyLnF1eWVuaGFuZyA9PSBcIkFkbWluXCIgfHwgcmVxLnNlc3Npb24udXNlci5xdXllbmhhbmcgPT0gXCJOaMOibiBWacOqblwiKSB7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgXHJcbiAgICAgICAgY29uc3QgZGF0YTEgPSBhd2FpdCBkYW5na3lTZXJ2aWNlLnRob25na2UoKTtcclxuICAgICAgICBjb25zdCB0b25nID0gYXdhaXQgZGFuZ2t5U2VydmljZS5Ub25ndGhvbmdrZSgpICAgICAgIFxyXG4gICAgICAgIHZhciBkYXRhID0gZGF0YTFbMF07ICAgICBcclxuICAgICAgICBpZiAoZGF0YS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICByZXMuanNvbih7IG1zZzogXCJzdWNjZXNzXCIsIGRhdGEgLHRvbmcgfSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHJlcy5qc29uKHttc2c6J2Vycm9yJ30pO1xyXG4gICAgICAgIH1cclxuICAgICAgIFxyXG4gICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIHJldHVybiBlcnJvcjtcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIHJlcy5yZWRpcmVjdChcIi9cIik7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHN0YXRpYyBhc3luYyBnZXRUS1RodShyZXEsIHJlcykge1xyXG4gICAgaWYgKHJlcS5zZXNzaW9uLnVzZXIucXV5ZW5oYW5nID09IFwiQWRtaW5cIiB8fCByZXEuc2Vzc2lvbi51c2VyLnF1eWVuaGFuZyA9PSBcIk5ow6JuIFZpw6puXCIpIHtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBkYXRhMSA9IGF3YWl0IGRhbmdreVNlcnZpY2UuVGhvbmdrZVRodSgpO1xyXG4gICAgICAgIGNvbnN0IHRvbmcgPSBhd2FpdCBkYW5na3lTZXJ2aWNlLlRvbmd0aG9uZ2tlVGh1KCkgICAgICAgXHJcbiAgICAgICAgdmFyIGRhdGEgPSBkYXRhMVswXTsgICAgICBcclxuICAgICAgICBpZiAoZGF0YS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICByZXMuanNvbih7IG1zZzogXCJzdWNjZXNzXCIsIGRhdGEgLHRvbmcgfSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHJlcy5qc29uKHttc2c6J2Vycm9yJ30pO1xyXG4gICAgICAgIH1cclxuICAgICAgIFxyXG4gICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIHJldHVybiBlcnJvcjtcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIHJlcy5yZWRpcmVjdChcIi9cIik7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbmV4cG9ydCBkZWZhdWx0IEFkbWluQ29udHJvbGxlcjtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "AdminC.js"
      ],
      "names": [
        "AdminController",
        "req",
        "res",
        "session",
        "user",
        "quyenhang",
        "dangkyService",
        "thongke",
        "data1",
        "data2",
        "length",
        "render",
        "redirect",
        "Tongthongke",
        "tong",
        "data",
        "json",
        "msg",
        "ThongkeThu",
        "TongthongkeThu"
      ],
      "mappings": ";;;;;;;;;;;;;;;AAAA;;AACA;;IACMA,e;;;;;;;;;wBACaC,G,EAAKC,G;;;;;;oBAChBD,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,OAA9B,IAAyCJ,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,W;;;;;;;mDAEnDC,0BAAcC,OAAd,E;;;AAAdC,cAAAA,K;AACFC,cAAAA,K,GAAQD,KAAK,CAAC,CAAD,C;AACXJ,cAAAA,I,GAAOH,GAAG,CAACE,OAAJ,CAAYC,I;;AACzB,kBAAIK,KAAK,CAACC,MAAN,GAAe,CAAnB,EAAsB;AACpBR,gBAAAA,GAAG,CAACS,MAAJ,CAAW,0BAAX,EAAuC;AACrCF,kBAAAA,KAAK,EAALA,KADqC;AAC7BL,kBAAAA,IAAI,EAAJA;AAD6B,iBAAvC;AAGD,eAJD,MAIO;AACLF,gBAAAA,GAAG,CAACS,MAAJ,CAAW,0BAAX,EAAuC;AACrCF,kBAAAA,KAAK,EAALA,KADqC;AAC9BL,kBAAAA,IAAI,EAAJA;AAD8B,iBAAvC;AAGD;;;;;;;;;;;;;;;+CAMIF,GAAG,CAACU,QAAJ,CAAa,GAAb,C;;;;;;;;;;;0BAGQX,G,EAAKC,G;;;;;;oBAClBD,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,OAA9B,IAAyCJ,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,W;;;;;;;mDAGnDC,0BAAcC,OAAd,E;;;AAAdC,cAAAA,K;;mDACaF,0BAAcO,WAAd,E;;;AAAbC,cAAAA,I;AACFC,cAAAA,I,GAAOP,KAAK,CAAC,CAAD,C;;AAChB,kBAAIO,IAAI,CAACL,MAAL,GAAc,CAAlB,EAAqB;AACnBR,gBAAAA,GAAG,CAACc,IAAJ,CAAS;AAAEC,kBAAAA,GAAG,EAAE,SAAP;AAAkBF,kBAAAA,IAAI,EAAJA,IAAlB;AAAwBD,kBAAAA,IAAI,EAAJA;AAAxB,iBAAT;AACD,eAFD,MAEO;AACLZ,gBAAAA,GAAG,CAACc,IAAJ,CAAS;AAACC,kBAAAA,GAAG,EAAC;AAAL,iBAAT;AACD;;;;;;;;;;;;;;;gDAMIf,GAAG,CAACU,QAAJ,CAAa,GAAb,C;;;;;;;;;;;6BAGWX,G,EAAKC,G;;;;;;oBACrBD,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,OAA9B,IAAyCJ,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,W;;;;;;;mDAEnDC,0BAAcY,UAAd,E;;;AAAdV,cAAAA,K;;mDACaF,0BAAca,cAAd,E;;;AAAbL,cAAAA,I;AACFC,cAAAA,I,GAAOP,KAAK,CAAC,CAAD,C;;AAChB,kBAAIO,IAAI,CAACL,MAAL,GAAc,CAAlB,EAAqB;AACnBR,gBAAAA,GAAG,CAACc,IAAJ,CAAS;AAAEC,kBAAAA,GAAG,EAAE,SAAP;AAAkBF,kBAAAA,IAAI,EAAJA,IAAlB;AAAwBD,kBAAAA,IAAI,EAAJA;AAAxB,iBAAT;AACD,eAFD,MAEO;AACLZ,gBAAAA,GAAG,CAACc,IAAJ,CAAS;AAACC,kBAAAA,GAAG,EAAC;AAAL,iBAAT;AACD;;;;;;;;;;;;;;;gDAMIf,GAAG,CAACU,QAAJ,CAAa,GAAb,C;;;;;;;;;;;;;eAIEZ,e",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
      "sourcesContent": [
        "import lopHocService from \"../services/lopHocService\";\r\nimport dangkyService from \"../services/dangkyService\";\r\nclass AdminController {\r\n  static async get(req, res) {\r\n    if (req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\" ) {\r\n      try {\r\n        const data1 = await dangkyService.thongke();\r\n        var data2 = data1[0];\r\n        const user = req.session.user\r\n        if (data2.length > 0) {\r\n          res.render(\"../views/admin/index.ejs\", {\r\n            data2 , user\r\n          });\r\n        } else {\r\n          res.render(\"../views/admin/index.ejs\", {\r\n            data2 ,user\r\n          });\r\n        }\r\n      \r\n      } catch (error) {\r\n        return error;\r\n      }\r\n    } else {\r\n      return res.redirect(\"/\");\r\n    }\r\n  }\r\n  static async getTK(req, res) {\r\n    if (req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\") {\r\n      try {\r\n        \r\n        const data1 = await dangkyService.thongke();\r\n        const tong = await dangkyService.Tongthongke()       \r\n        var data = data1[0];     \r\n        if (data.length > 0) {\r\n          res.json({ msg: \"success\", data ,tong });\r\n        } else {\r\n          res.json({msg:'error'});\r\n        }\r\n       \r\n      } catch (error) {\r\n        return error;\r\n      }\r\n    } else {\r\n      return res.redirect(\"/\");\r\n    }\r\n  }\r\n  static async getTKThu(req, res) {\r\n    if (req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\") {\r\n      try {\r\n        const data1 = await dangkyService.ThongkeThu();\r\n        const tong = await dangkyService.TongthongkeThu()       \r\n        var data = data1[0];      \r\n        if (data.length > 0) {\r\n          res.json({ msg: \"success\", data ,tong });\r\n        } else {\r\n          res.json({msg:'error'});\r\n        }\r\n       \r\n      } catch (error) {\r\n        return error;\r\n      }\r\n    } else {\r\n      return res.redirect(\"/\");\r\n    }\r\n  }\r\n}\r\nexport default AdminController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1584458697148
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\\\\taikhoancanhanroute.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\taikhoancanhanroute.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\taikhoancanhanroute.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\taikhoancanhanroute.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
        "sourceFileName": "taikhoancanhanroute.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _express = require(\"express\");\n\nvar _taiKhoancanhanController = _interopRequireDefault(require(\"../controllers/taiKhoancanhanController\"));\n\nvar _uploadfile = _interopRequireDefault(require(\"../../helpers/uploadfile\"));\n\nvar router = (0, _express.Router)();\n\nvar single = _uploadfile[\"default\"].single(\"hinhanh\");\n\nrouter.route(\"/\").get(_taiKhoancanhanController[\"default\"].getATk);\nrouter.route(\"/thongtin/:id\").post(single, _taiKhoancanhanController[\"default\"].updatedtk);\nrouter.route(\"/doimatkhau/:id\").post(_taiKhoancanhanController[\"default\"].updatematkhau);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhaWtob2FuY2FuaGFucm91dGUuanMiXSwibmFtZXMiOlsicm91dGVyIiwic2luZ2xlIiwidXBsb2FkIiwicm91dGUiLCJnZXQiLCJ0YWlLaG9hbkNvbnRyb2xsZXIiLCJnZXRBVGsiLCJwb3N0IiwidXBkYXRlZHRrIiwidXBkYXRlbWF0a2hhdSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFFQTs7QUFDQTs7QUFFQSxJQUFNQSxNQUFNLEdBQUcsc0JBQWY7O0FBQ0EsSUFBSUMsTUFBTSxHQUFHQyx1QkFBT0QsTUFBUCxDQUFjLFNBQWQsQ0FBYjs7QUFFQUQsTUFBTSxDQUFDRyxLQUFQLENBQWEsR0FBYixFQUFrQkMsR0FBbEIsQ0FBc0JDLHFDQUFtQkMsTUFBekM7QUFDQU4sTUFBTSxDQUFDRyxLQUFQLENBQWEsZUFBYixFQUE4QkksSUFBOUIsQ0FBbUNOLE1BQW5DLEVBQTJDSSxxQ0FBbUJHLFNBQTlEO0FBQ0FSLE1BQU0sQ0FBQ0csS0FBUCxDQUFhLGlCQUFiLEVBQWdDSSxJQUFoQyxDQUFzQ0YscUNBQW1CSSxhQUF6RDtBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJYLE1BQWpCIiwic291cmNlUm9vdCI6IkQ6XFxMdWFuVmFuXFxMdWFuVmFuRDJcXHRydW5ndGFtX2xhbjRcXGFwcHNcXHJvdXRlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb3V0ZXIgfSBmcm9tIFwiZXhwcmVzc1wiO1xyXG5cclxuaW1wb3J0IHRhaUtob2FuQ29udHJvbGxlciBmcm9tIFwiLi4vY29udHJvbGxlcnMvdGFpS2hvYW5jYW5oYW5Db250cm9sbGVyXCI7XHJcbmltcG9ydCB1cGxvYWQgZnJvbSBcIi4uLy4uL2hlbHBlcnMvdXBsb2FkZmlsZVwiO1xyXG5cclxuY29uc3Qgcm91dGVyID0gUm91dGVyKCk7XHJcbnZhciBzaW5nbGUgPSB1cGxvYWQuc2luZ2xlKFwiaGluaGFuaFwiKTtcclxuXHJcbnJvdXRlci5yb3V0ZShcIi9cIikuZ2V0KHRhaUtob2FuQ29udHJvbGxlci5nZXRBVGspO1xyXG5yb3V0ZXIucm91dGUoXCIvdGhvbmd0aW4vOmlkXCIpLnBvc3Qoc2luZ2xlLCB0YWlLaG9hbkNvbnRyb2xsZXIudXBkYXRlZHRrKTtcclxucm91dGVyLnJvdXRlKFwiL2RvaW1hdGtoYXUvOmlkXCIpLnBvc3QoIHRhaUtob2FuQ29udHJvbGxlci51cGRhdGVtYXRraGF1KTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "taikhoancanhanroute.js"
      ],
      "names": [
        "router",
        "single",
        "upload",
        "route",
        "get",
        "taiKhoanController",
        "getATk",
        "post",
        "updatedtk",
        "updatematkhau",
        "module",
        "exports"
      ],
      "mappings": ";;;;AAAA;;AAEA;;AACA;;AAEA,IAAMA,MAAM,GAAG,sBAAf;;AACA,IAAIC,MAAM,GAAGC,uBAAOD,MAAP,CAAc,SAAd,CAAb;;AAEAD,MAAM,CAACG,KAAP,CAAa,GAAb,EAAkBC,GAAlB,CAAsBC,qCAAmBC,MAAzC;AACAN,MAAM,CAACG,KAAP,CAAa,eAAb,EAA8BI,IAA9B,CAAmCN,MAAnC,EAA2CI,qCAAmBG,SAA9D;AACAR,MAAM,CAACG,KAAP,CAAa,iBAAb,EAAgCI,IAAhC,CAAsCF,qCAAmBI,aAAzD;AAEAC,MAAM,CAACC,OAAP,GAAiBX,MAAjB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
      "sourcesContent": [
        "import { Router } from \"express\";\r\n\r\nimport taiKhoanController from \"../controllers/taiKhoancanhanController\";\r\nimport upload from \"../../helpers/uploadfile\";\r\n\r\nconst router = Router();\r\nvar single = upload.single(\"hinhanh\");\r\n\r\nrouter.route(\"/\").get(taiKhoanController.getATk);\r\nrouter.route(\"/thongtin/:id\").post(single, taiKhoanController.updatedtk);\r\nrouter.route(\"/doimatkhau/:id\").post( taiKhoanController.updatematkhau);\r\n\r\nmodule.exports = router;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1580974291342
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\\\\taiKhoancanhanController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\taiKhoancanhanController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\taiKhoancanhanController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\taiKhoancanhanController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
        "sourceFileName": "taiKhoancanhanController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _bcryptjs = _interopRequireDefault(require(\"bcryptjs\"));\n\nvar _taiKhoanService = _interopRequireDefault(require(\"../services/taiKhoanService\"));\n\nvar d = new Date();\nd.getDate();\nd.getMonth();\nd.getFullYear();\nvar n = d.getDate() + d.getMonth() + d.getFullYear();\n\nvar taiKhoanController =\n/*#__PURE__*/\nfunction () {\n  function taiKhoanController() {\n    (0, _classCallCheck2[\"default\"])(this, taiKhoanController);\n  }\n\n  (0, _createClass2[\"default\"])(taiKhoanController, null, [{\n    key: \"updatematkhau\",\n    value: function updatematkhau(req, res) {\n      var _req$body, matkhaucu, matkhau, id, thetk, salt, hash, data, updatetk;\n\n      return _regenerator[\"default\"].async(function updatematkhau$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _req$body = req.body, matkhaucu = _req$body.matkhaucu, matkhau = _req$body.matkhau;\n              id = req.params.id;\n              console.log(req.body);\n              _context.prev = 3;\n              _context.next = 6;\n              return _regenerator[\"default\"].awrap(_taiKhoanService[\"default\"].getByID(id));\n\n            case 6:\n              thetk = _context.sent;\n              console.log(thetk[0].matkhau);\n\n              if (thetk) {\n                _context.next = 12;\n                break;\n              }\n\n              res.redirect(\"/admin/canhan?kq=0\");\n              _context.next = 29;\n              break;\n\n            case 12:\n              if (!_bcryptjs[\"default\"].compareSync(matkhaucu, thetk[0].matkhau)) {\n                _context.next = 28;\n                break;\n              }\n\n              salt = _bcryptjs[\"default\"].genSaltSync(10);\n              hash = _bcryptjs[\"default\"].hashSync(matkhau, salt);\n              data = {\n                matkhau: hash\n              };\n              _context.prev = 16;\n              _context.next = 19;\n              return _regenerator[\"default\"].awrap(_taiKhoanService[\"default\"].UpdateTK(id, data));\n\n            case 19:\n              updatetk = _context.sent;\n\n              if (!updatetk) {\n                res.redirect(\"/admin/canhan?kq=0\");\n              } else {\n                res.redirect(\"/?kq=1\");\n              }\n\n              _context.next = 26;\n              break;\n\n            case 23:\n              _context.prev = 23;\n              _context.t0 = _context[\"catch\"](16);\n              return _context.abrupt(\"return\", _context.t0);\n\n            case 26:\n              _context.next = 29;\n              break;\n\n            case 28:\n              res.redirect(\"/\");\n\n            case 29:\n              return _context.abrupt(\"return\", error);\n\n            case 32:\n              _context.prev = 32;\n              _context.t1 = _context[\"catch\"](3);\n              return _context.abrupt(\"return\", _context.t1);\n\n            case 35:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[3, 32], [16, 23]]);\n    }\n  }, {\n    key: \"updatedtk\",\n    value: function updatedtk(req, res) {\n      var _req$body2, email, hinhanh, tentaikhoan, alteredtk, id, updatetk;\n\n      return _regenerator[\"default\"].async(function updatedtk$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _req$body2 = req.body, email = _req$body2.email, hinhanh = _req$body2.hinhanh, tentaikhoan = _req$body2.tentaikhoan;\n              email = email.replace(/\\s/g, \"\");\n              tentaikhoan = tentaikhoan.replace(/\\s/g, \"\");\n\n              if (req.file) {\n                hinhanh = n + \"-\" + req.file.originalname;\n              }\n\n              alteredtk = {\n                email: email,\n                tentaikhoan: tentaikhoan,\n                hinhanh: hinhanh\n              };\n              id = req.params.id;\n\n              if (!Number(id)) {\n                console.log(\"ID Not a Number!!!\");\n              }\n\n              _context2.prev = 7;\n              console.log(alteredtk);\n              _context2.next = 11;\n              return _regenerator[\"default\"].awrap(_taiKhoanService[\"default\"].UpdateTK(id, alteredtk));\n\n            case 11:\n              updatetk = _context2.sent;\n\n              if (!updatetk) {\n                res.redirect(\"/admin/canhan?kq=0\");\n              } else {\n                res.redirect(\"/?kq=1&mes='C\\u1EADp nh\\u1EADt th\\xE0nh c\\xF4ng!'\");\n              }\n\n              _context2.next = 18;\n              break;\n\n            case 15:\n              _context2.prev = 15;\n              _context2.t0 = _context2[\"catch\"](7);\n              return _context2.abrupt(\"return\", _context2.t0);\n\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[7, 15]]);\n    }\n  }, {\n    key: \"getATk\",\n    value: function getATk(req, res) {\n      var user, id, data, thetk;\n      return _regenerator[\"default\"].async(function getATk$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(req.session.user.quyenhang == \"Admin\")) {\n                _context3.next = 16;\n                break;\n              }\n\n              _context3.prev = 1;\n              user = req.session.user;\n              id = req.session.user.id;\n              data = req.session.user;\n              _context3.next = 7;\n              return _regenerator[\"default\"].awrap(_taiKhoanService[\"default\"].getByID(id));\n\n            case 7:\n              thetk = _context3.sent;\n\n              if (!thetk) {\n                res.render(\"../views/admin/taikhoan/trangcanhan.ejs\", {\n                  data: data,\n                  user: user,\n                  phanquyen: phanquyen,\n                  message: 0\n                });\n              } else {\n                res.render(\"../views/admin/taikhoan/trangcanhan.ejs\", {\n                  data: data,\n                  user: user,\n                  message: 1\n                });\n              }\n\n              _context3.next = 14;\n              break;\n\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](1);\n              return _context3.abrupt(\"return\", _context3.t0);\n\n            case 14:\n              _context3.next = 17;\n              break;\n\n            case 16:\n              return _context3.abrupt(\"return\", res.redirect(\"/\"));\n\n            case 17:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[1, 11]]);\n    }\n  }]);\n  return taiKhoanController;\n}();\n\nvar _default = taiKhoanController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "taiKhoancanhanController.js"
      ],
      "names": [
        "d",
        "Date",
        "getDate",
        "getMonth",
        "getFullYear",
        "n",
        "taiKhoanController",
        "req",
        "res",
        "body",
        "matkhaucu",
        "matkhau",
        "id",
        "params",
        "console",
        "log",
        "taiKhoanService",
        "getByID",
        "thetk",
        "redirect",
        "bcrypt",
        "compareSync",
        "salt",
        "genSaltSync",
        "hash",
        "hashSync",
        "data",
        "UpdateTK",
        "updatetk",
        "error",
        "email",
        "hinhanh",
        "tentaikhoan",
        "replace",
        "file",
        "originalname",
        "alteredtk",
        "Number",
        "session",
        "user",
        "quyenhang",
        "render",
        "phanquyen",
        "message"
      ],
      "mappings": ";;;;;;;;;;;;;;;AAAA;;AAEA;;AAEA,IAAIA,CAAC,GAAG,IAAIC,IAAJ,EAAR;AACAD,CAAC,CAACE,OAAF;AACAF,CAAC,CAACG,QAAF;AACAH,CAAC,CAACI,WAAF;AACA,IAAIC,CAAC,GAAGL,CAAC,CAACE,OAAF,KAAcF,CAAC,CAACG,QAAF,EAAd,GAA6BH,CAAC,CAACI,WAAF,EAArC;;IAEME,kB;;;;;;;;;kCACuBC,G,EAAKC,G;;;;;;;0BACCD,GAAG,CAACE,I,EAA3BC,S,aAAAA,S,EAAWC,O,aAAAA,O;AACXC,cAAAA,E,GAAOL,GAAG,CAACM,M,CAAXD,E;AACRE,cAAAA,OAAO,CAACC,GAAR,CAAYR,GAAG,CAACE,IAAhB;;;mDAEsBO,4BAAgBC,OAAhB,CAAwBL,EAAxB,C;;;AAAdM,cAAAA,K;AACNJ,cAAAA,OAAO,CAACC,GAAR,CAAYG,KAAK,CAAC,CAAD,CAAL,CAASP,OAArB;;kBACKO,K;;;;;AACHV,cAAAA,GAAG,CAACW,QAAJ,CAAa,oBAAb;;;;;mBAEIC,qBAAOC,WAAP,CAAmBX,SAAnB,EAA8BQ,KAAK,CAAC,CAAD,CAAL,CAASP,OAAvC,C;;;;;AACEW,cAAAA,I,GAAOF,qBAAOG,WAAP,CAAmB,EAAnB,C;AACPC,cAAAA,I,GAAOJ,qBAAOK,QAAP,CAAgBd,OAAhB,EAAyBW,IAAzB,C;AACPI,cAAAA,I,GAAO;AAAEf,gBAAAA,OAAO,EAAEa;AAAX,e;;;mDAEcR,4BAAgBW,QAAhB,CAAyBf,EAAzB,EAA6Bc,IAA7B,C;;;AAAjBE,cAAAA,Q;;AACN,kBAAI,CAACA,QAAL,EAAe;AACbpB,gBAAAA,GAAG,CAACW,QAAJ;AACD,eAFD,MAEO;AACLX,gBAAAA,GAAG,CAACW,QAAJ;AACD;;;;;;;;;;;;;;;AAIEX,cAAAA,GAAG,CAACW,QAAJ,CAAa,GAAb;;;+CAEFU,K;;;;;;;;;;;;;;;;8BAMYtB,G,EAAKC,G;;;;;;;2BAEYD,GAAG,CAACE,I,EAApCqB,K,cAAAA,K,EAAOC,O,cAAAA,O,EAASC,W,cAAAA,W;AACtBF,cAAAA,KAAK,GAAGA,KAAK,CAACG,OAAN,CAAc,KAAd,EAAqB,EAArB,CAAR;AACAD,cAAAA,WAAW,GAAGA,WAAW,CAACC,OAAZ,CAAoB,KAApB,EAA2B,EAA3B,CAAd;;AACA,kBAAI1B,GAAG,CAAC2B,IAAR,EAAc;AACXH,gBAAAA,OAAO,GAAG1B,CAAC,GAAG,GAAJ,GAAUE,GAAG,CAAC2B,IAAJ,CAASC,YAA7B;AACF;;AACKC,cAAAA,S,GAAY;AAAEN,gBAAAA,KAAK,EAALA,KAAF;AAASE,gBAAAA,WAAW,EAAXA,WAAT;AAAsBD,gBAAAA,OAAO,EAAPA;AAAtB,e;AACVnB,cAAAA,E,GAAOL,GAAG,CAACM,M,CAAXD,E;;AACR,kBAAI,CAACyB,MAAM,CAACzB,EAAD,CAAX,EAAiB;AACfE,gBAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD;;;AAECD,cAAAA,OAAO,CAACC,GAAR,CAAYqB,SAAZ;;mDACuBpB,4BAAgBW,QAAhB,CAAyBf,EAAzB,EAA6BwB,SAA7B,C;;;AAAjBR,cAAAA,Q;;AACN,kBAAI,CAACA,QAAL,EAAe;AACbpB,gBAAAA,GAAG,CAACW,QAAJ;AACD,eAFD,MAEO;AACLX,gBAAAA,GAAG,CAACW,QAAJ;AACD;;;;;;;;;;;;;;;;;;;2BAMeZ,G,EAAKC,G;;;;;;oBACnBD,GAAG,CAAC+B,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,O;;;;;;AAExBD,cAAAA,I,GAAOhC,GAAG,CAAC+B,OAAJ,CAAYC,I;AACnB3B,cAAAA,E,GAAKL,GAAG,CAAC+B,OAAJ,CAAYC,IAAZ,CAAiB3B,E;AACtBc,cAAAA,I,GAAOnB,GAAG,CAAC+B,OAAJ,CAAYC,I;;mDACLvB,4BAAgBC,OAAhB,CAAwBL,EAAxB,C;;;AAAdM,cAAAA,K;;AACN,kBAAI,CAACA,KAAL,EAAY;AACVV,gBAAAA,GAAG,CAACiC,MAAJ,CAAW,yCAAX,EAAsD;AACpDf,kBAAAA,IAAI,EAAJA,IADoD;AAC9Ca,kBAAAA,IAAI,EAAJA,IAD8C;AAEpDG,kBAAAA,SAAS,EAATA,SAFoD;AAGpDC,kBAAAA,OAAO,EAAE;AAH2C,iBAAtD;AAKD,eAND,MAMO;AACLnC,gBAAAA,GAAG,CAACiC,MAAJ,CAAW,yCAAX,EAAsD;AACpDf,kBAAAA,IAAI,EAAJA,IADoD;AAC9Ca,kBAAAA,IAAI,EAAJA,IAD8C;AAEpDI,kBAAAA,OAAO,EAAE;AAF2C,iBAAtD;AAID;;;;;;;;;;;;;;;gDAKInC,GAAG,CAACW,QAAJ,CAAa,GAAb,C;;;;;;;;;;;;;eAKEb,kB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
      "sourcesContent": [
        "import bcrypt from \"bcryptjs\";\r\n\r\nimport taiKhoanService from \"../services/taiKhoanService\";\r\n\r\nlet d = new Date();\r\nd.getDate();\r\nd.getMonth();\r\nd.getFullYear();\r\nlet n = d.getDate() + d.getMonth() + d.getFullYear();\r\n\r\nclass taiKhoanController {\r\n  static async updatematkhau(req, res) {\r\n    const { matkhaucu, matkhau } = req.body;\r\n    const { id } = req.params;\r\n    console.log(req.body);\r\n    try {\r\n      const thetk = await taiKhoanService.getByID(id);\r\n      console.log(thetk[0].matkhau);\r\n      if (!thetk) {\r\n        res.redirect(\"/admin/canhan?kq=0\");\r\n      } else {\r\n        if (bcrypt.compareSync(matkhaucu, thetk[0].matkhau)) {\r\n          let salt = bcrypt.genSaltSync(10);\r\n          let hash = bcrypt.hashSync(matkhau, salt);\r\n          let data = { matkhau: hash };\r\n          try {\r\n            const updatetk = await taiKhoanService.UpdateTK(id, data);\r\n            if (!updatetk) {\r\n              res.redirect(`/admin/canhan?kq=0`);\r\n            } else {\r\n              res.redirect(`/?kq=1`);\r\n            }\r\n          } catch (error) {\r\n            return error;\r\n          }\r\n        } else res.redirect(\"/\");\r\n      }\r\n      return error;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  static async updatedtk(req, res) {\r\n\r\n    let { email, hinhanh, tentaikhoan } = req.body;\r\n    email = email.replace(/\\s/g, \"\");\r\n    tentaikhoan = tentaikhoan.replace(/\\s/g, \"\");\r\n    if (req.file) {\r\n       hinhanh = n + \"-\" + req.file.originalname;\r\n    }\r\n    const alteredtk = { email, tentaikhoan, hinhanh };\r\n    const { id } = req.params;\r\n    if (!Number(id)) {\r\n      console.log(\"ID Not a Number!!!\");\r\n    }\r\n    try {\r\n      console.log(alteredtk);\r\n      const updatetk = await taiKhoanService.UpdateTK(id, alteredtk);\r\n      if (!updatetk) {\r\n        res.redirect(`/admin/canhan?kq=0`);\r\n      } else {\r\n        res.redirect(`/?kq=1&mes='Cập nhật thành công!'`);\r\n      }\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  static async getATk(req, res) {\r\n    if (req.session.user.quyenhang == \"Admin\") {\r\n      try {\r\n        const user = req.session.user\r\n        const id = req.session.user.id;\r\n        const data = req.session.user;\r\n        const thetk = await taiKhoanService.getByID(id);\r\n        if (!thetk) {\r\n          res.render(\"../views/admin/taikhoan/trangcanhan.ejs\", {\r\n            data, user,\r\n            phanquyen,\r\n            message: 0\r\n          });\r\n        } else {\r\n          res.render(\"../views/admin/taikhoan/trangcanhan.ejs\", {\r\n            data, user,\r\n            message: 1\r\n          });\r\n        }\r\n      } catch (error) {\r\n        return error;\r\n      }\r\n    } else {\r\n      return res.redirect(\"/\");\r\n    }\r\n  }\r\n}\r\n\r\nexport default taiKhoanController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1584458489147
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\\\\khoaHocRoute.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\khoaHocRoute.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\khoaHocRoute.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\khoaHocRoute.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
        "sourceFileName": "khoaHocRoute.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _express = require(\"express\");\n\nvar _khoaHocController = _interopRequireDefault(require(\"../controllers/khoaHocController\"));\n\nvar _uploadfile = _interopRequireDefault(require(\"../../helpers/uploadfile\"));\n\nvar router = (0, _express.Router)();\n\nvar single = _uploadfile[\"default\"].single(\"hinhanh\");\n\nrouter.route('/').get(_khoaHocController[\"default\"].getAll);\nrouter.route('/').post(single, _khoaHocController[\"default\"].add);\nrouter.route('/:id').post(single, _khoaHocController[\"default\"].update);\nrouter.route('/delete/:id/:hinhanh').get(_khoaHocController[\"default\"].Delete); //export default router;\n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImtob2FIb2NSb3V0ZS5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJzaW5nbGUiLCJ1cGxvYWQiLCJyb3V0ZSIsImdldCIsImtob2FIb2NDb250cm9sbGVyIiwiZ2V0QWxsIiwicG9zdCIsImFkZCIsInVwZGF0ZSIsIkRlbGV0ZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFDQTs7QUFFQTs7QUFFQSxJQUFNQSxNQUFNLEdBQUcsc0JBQWY7O0FBQ0EsSUFBSUMsTUFBTSxHQUFHQyx1QkFBT0QsTUFBUCxDQUFjLFNBQWQsQ0FBYjs7QUFFQUQsTUFBTSxDQUFDRyxLQUFQLENBQWEsR0FBYixFQUNDQyxHQURELENBQ0tDLDhCQUFrQkMsTUFEdkI7QUFHQU4sTUFBTSxDQUFDRyxLQUFQLENBQWEsR0FBYixFQUNDSSxJQURELENBQ09OLE1BRFAsRUFDY0ksOEJBQWtCRyxHQURoQztBQUVBUixNQUFNLENBQUNHLEtBQVAsQ0FBYSxNQUFiLEVBQ0NJLElBREQsQ0FDTU4sTUFETixFQUNhSSw4QkFBa0JJLE1BRC9CO0FBRUFULE1BQU0sQ0FBQ0csS0FBUCxDQUFhLHNCQUFiLEVBQ0NDLEdBREQsQ0FDS0MsOEJBQWtCSyxNQUR2QixFLENBR0E7O0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlosTUFBakIiLCJzb3VyY2VSb290IjoiRDpcXEx1YW5WYW5cXEx1YW5WYW5EMlxcdHJ1bmd0YW1fbGFuNFxcYXBwc1xccm91dGVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gJ2V4cHJlc3MnO1xyXG5pbXBvcnQga2hvYUhvY0NvbnRyb2xsZXIgZnJvbSAnLi4vY29udHJvbGxlcnMva2hvYUhvY0NvbnRyb2xsZXInO1xyXG5cclxuaW1wb3J0IHVwbG9hZCBmcm9tICcuLi8uLi9oZWxwZXJzL3VwbG9hZGZpbGUnXHJcblxyXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKTtcclxudmFyIHNpbmdsZSA9IHVwbG9hZC5zaW5nbGUoXCJoaW5oYW5oXCIpO1xyXG5cclxucm91dGVyLnJvdXRlKCcvJylcclxuLmdldChraG9hSG9jQ29udHJvbGxlci5nZXRBbGwpXHJcblxyXG5yb3V0ZXIucm91dGUoJy8nKVxyXG4ucG9zdCggc2luZ2xlLGtob2FIb2NDb250cm9sbGVyLmFkZClcclxucm91dGVyLnJvdXRlKCcvOmlkJylcclxuLnBvc3Qoc2luZ2xlLGtob2FIb2NDb250cm9sbGVyLnVwZGF0ZSlcclxucm91dGVyLnJvdXRlKCcvZGVsZXRlLzppZC86aGluaGFuaCcpXHJcbi5nZXQoa2hvYUhvY0NvbnRyb2xsZXIuRGVsZXRlKSBcclxuXHJcbi8vZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "khoaHocRoute.js"
      ],
      "names": [
        "router",
        "single",
        "upload",
        "route",
        "get",
        "khoaHocController",
        "getAll",
        "post",
        "add",
        "update",
        "Delete",
        "module",
        "exports"
      ],
      "mappings": ";;;;AAAA;;AACA;;AAEA;;AAEA,IAAMA,MAAM,GAAG,sBAAf;;AACA,IAAIC,MAAM,GAAGC,uBAAOD,MAAP,CAAc,SAAd,CAAb;;AAEAD,MAAM,CAACG,KAAP,CAAa,GAAb,EACCC,GADD,CACKC,8BAAkBC,MADvB;AAGAN,MAAM,CAACG,KAAP,CAAa,GAAb,EACCI,IADD,CACON,MADP,EACcI,8BAAkBG,GADhC;AAEAR,MAAM,CAACG,KAAP,CAAa,MAAb,EACCI,IADD,CACMN,MADN,EACaI,8BAAkBI,MAD/B;AAEAT,MAAM,CAACG,KAAP,CAAa,sBAAb,EACCC,GADD,CACKC,8BAAkBK,MADvB,E,CAGA;;AAEAC,MAAM,CAACC,OAAP,GAAiBZ,MAAjB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
      "sourcesContent": [
        "import { Router } from 'express';\r\nimport khoaHocController from '../controllers/khoaHocController';\r\n\r\nimport upload from '../../helpers/uploadfile'\r\n\r\nconst router = Router();\r\nvar single = upload.single(\"hinhanh\");\r\n\r\nrouter.route('/')\r\n.get(khoaHocController.getAll)\r\n\r\nrouter.route('/')\r\n.post( single,khoaHocController.add)\r\nrouter.route('/:id')\r\n.post(single,khoaHocController.update)\r\nrouter.route('/delete/:id/:hinhanh')\r\n.get(khoaHocController.Delete) \r\n\r\n//export default router;\r\n\r\nmodule.exports = router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1580916662009
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\\\\khoaHocController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\khoaHocController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\khoaHocController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\khoaHocController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
        "sourceFileName": "khoaHocController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _sDate = _interopRequireDefault(require(\"s-date\"));\n\nvar _khoaHocService = _interopRequireDefault(require(\"../services/khoaHocService\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar d = new Date();\nd.getDate();\nd.getMonth();\nd.getFullYear();\nvar n = d.getDate() + d.getMonth() + d.getFullYear();\n\nvar khoaHocController =\n/*#__PURE__*/\nfunction () {\n  function khoaHocController() {\n    (0, _classCallCheck2[\"default\"])(this, khoaHocController);\n  }\n\n  (0, _createClass2[\"default\"])(khoaHocController, null, [{\n    key: \"getAll\",\n    value: function getAll(req, res) {\n      var user, data;\n      return _regenerator[\"default\"].async(function getAll$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\")) {\n                _context.next = 15;\n                break;\n              }\n\n              _context.prev = 1;\n              user = req.session.user;\n              _context.next = 5;\n              return _regenerator[\"default\"].awrap(_khoaHocService[\"default\"].getAll());\n\n            case 5:\n              data = _context.sent;\n\n              if (data.length > 0) {\n                res.render(\"../views/admin/khoahoc/listkhoahoc.ejs\", {\n                  data: data,\n                  date: _sDate[\"default\"],\n                  user: user\n                });\n              } else {\n                res.render(\"../views/admin/khoahoc/listkhoahoc.ejs\", {\n                  data: data,\n                  date: _sDate[\"default\"],\n                  user: user\n                });\n              }\n\n              return _context.abrupt(\"return\", 0);\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](1);\n              return _context.abrupt(\"return\", 0);\n\n            case 13:\n              _context.next = 16;\n              break;\n\n            case 15:\n              return _context.abrupt(\"return\", res.redirect(\"/\"));\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 10]]);\n    }\n  }, {\n    key: \"Delete\",\n    value: function Delete(req, res) {\n      var _req$params, id, hinhanh, url_del, Xoa;\n\n      return _regenerator[\"default\"].async(function Delete$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\")) {\n                _context2.next = 16;\n                break;\n              }\n\n              _req$params = req.params, id = _req$params.id, hinhanh = _req$params.hinhanh;\n\n              if (!Number(id)) {\n                res.redirect(\"/admin/khoahoc\");\n              }\n\n              _context2.prev = 3;\n\n              if (hinhanh != \"images.png\") {\n                url_del = \"public/uploadimg/\" + hinhanh;\n\n                if (_fs[\"default\"].existsSync(url_del)) {\n                  _fs[\"default\"].unlinkSync(url_del);\n                }\n              }\n\n              _context2.next = 7;\n              return _regenerator[\"default\"].awrap(_khoaHocService[\"default\"][\"delete\"](id));\n\n            case 7:\n              Xoa = _context2.sent;\n\n              if (Xoa) {\n                res.redirect(\"/admin/khoahoc?kq=1&mes=Xóa Thành Công!!!\");\n              } else {\n                res.redirect(\"/admin/khoahoc?kq=0&mes=Xóa Không Thành Công!!!\");\n              }\n\n              _context2.next = 14;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](3);\n              return _context2.abrupt(\"return\", _context2.t0);\n\n            case 14:\n              _context2.next = 17;\n              break;\n\n            case 16:\n              return _context2.abrupt(\"return\", res.redirect(\"/\"));\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[3, 11]]);\n    }\n  }, {\n    key: \"add\",\n    value: function add(req, res) {\n      var hinhanh, data, created;\n      return _regenerator[\"default\"].async(function add$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              hinhanh = \"images.png\";\n\n              if (req.file) {\n                hinhanh = n + \"-\" + req.file.originalname;\n              }\n\n              data = _objectSpread({}, req.body, {\n                hinhanh: hinhanh\n              });\n              _context3.prev = 3;\n              _context3.next = 6;\n              return _regenerator[\"default\"].awrap(_khoaHocService[\"default\"].add(data));\n\n            case 6:\n              created = _context3.sent;\n              res.redirect(\"/admin/khoahoc\");\n              _context3.next = 13;\n              break;\n\n            case 10:\n              _context3.prev = 10;\n              _context3.t0 = _context3[\"catch\"](3);\n              return _context3.abrupt(\"return\", _context3.t0);\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[3, 10]]);\n    }\n  }, {\n    key: \"update\",\n    value: function update(req, res) {\n      var id, hinhanh, altered, update;\n      return _regenerator[\"default\"].async(function update$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              id = req.params.id;\n              hinhanh = req.body.hinhanh;\n              console.log(hinhanh);\n\n              if (req.file) {\n                console.log(req.file);\n                hinhanh = n + \"-\" + req.file.originalname;\n              }\n\n              altered = _objectSpread({}, req.body, {\n                hinhanh: hinhanh\n              });\n              console.log(altered);\n              _context4.prev = 6;\n              _context4.next = 9;\n              return _regenerator[\"default\"].awrap(_khoaHocService[\"default\"].Update(id, altered));\n\n            case 9:\n              update = _context4.sent;\n\n              if (!update) {\n                res.redirect(\"/admin/khoahoc?kq=0&mes=Lỗi!!!\");\n              } else {\n                res.redirect(\"/admin/khoahoc?kq=1&mes=Thành Công!!!\");\n              }\n\n              _context4.next = 16;\n              break;\n\n            case 13:\n              _context4.prev = 13;\n              _context4.t0 = _context4[\"catch\"](6);\n              return _context4.abrupt(\"return\", _context4.t0);\n\n            case 16:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[6, 13]]);\n    }\n  }]);\n  return khoaHocController;\n}();\n\nvar _default = khoaHocController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "khoaHocController.js"
      ],
      "names": [
        "d",
        "Date",
        "getDate",
        "getMonth",
        "getFullYear",
        "n",
        "khoaHocController",
        "req",
        "res",
        "session",
        "user",
        "quyenhang",
        "khoaHocService",
        "getAll",
        "data",
        "length",
        "render",
        "date",
        "redirect",
        "params",
        "id",
        "hinhanh",
        "Number",
        "url_del",
        "fs",
        "existsSync",
        "unlinkSync",
        "Xoa",
        "file",
        "originalname",
        "body",
        "add",
        "created",
        "console",
        "log",
        "altered",
        "Update",
        "update"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;AAEA,IAAIA,CAAC,GAAG,IAAIC,IAAJ,EAAR;AACAD,CAAC,CAACE,OAAF;AACAF,CAAC,CAACG,QAAF;AACAH,CAAC,CAACI,WAAF;AACA,IAAIC,CAAC,GAAGL,CAAC,CAACE,OAAF,KAAcF,CAAC,CAACG,QAAF,EAAd,GAA6BH,CAAC,CAACI,WAAF,EAArC;;IAEME,iB;;;;;;;;;2BACgBC,G,EAAKC,G;;;;;;oBACnBD,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,OAA9B,IAAyCJ,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,W;;;;;;AAEjED,cAAAA,I,GAAOH,GAAG,CAACE,OAAJ,CAAYC,I;;mDACNE,2BAAeC,MAAf,E;;;AAAbC,cAAAA,I;;AACN,kBAAIA,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AACnBP,gBAAAA,GAAG,CAACQ,MAAJ,CAAW,wCAAX,EAAqD;AAAEF,kBAAAA,IAAI,EAAJA,IAAF;AAAQG,kBAAAA,IAAI,EAAJA,iBAAR;AAAeP,kBAAAA,IAAI,EAAJA;AAAf,iBAArD;AACD,eAFD,MAEO;AACLF,gBAAAA,GAAG,CAACQ,MAAJ,CAAW,wCAAX,EAAqD;AAAEF,kBAAAA,IAAI,EAAJA,IAAF;AAAQG,kBAAAA,IAAI,EAAJA,iBAAR;AAAeP,kBAAAA,IAAI,EAAJA;AAAf,iBAArD;AACD;;+CACM,C;;;;;+CAEA,C;;;;;;;+CAGFF,GAAG,CAACU,QAAJ,CAAa,GAAb,C;;;;;;;;;;;2BAISX,G,EAAKC,G;;;;;;;oBACnBD,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,OAA9B,IAAyCJ,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,W;;;;;4BACnDJ,GAAG,CAACY,M,EAApBC,E,eAAAA,E,EAAIC,O,eAAAA,O;;AACV,kBAAI,CAACC,MAAM,CAACF,EAAD,CAAX,EAAiB;AACfZ,gBAAAA,GAAG,CAACU,QAAJ,CAAa,gBAAb;AACD;;;;AAEC,kBAAIG,OAAO,IAAI,YAAf,EAA6B;AACvBE,gBAAAA,OADuB,GACb,sBAAsBF,OADT;;AAE3B,oBAAIG,eAAGC,UAAH,CAAcF,OAAd,CAAJ,EAA4B;AAC1BC,iCAAGE,UAAH,CAAcH,OAAd;AACD;AACF;;;mDACeX,qCAAsBQ,EAAtB,C;;;AAAZO,cAAAA,G;;AACJ,kBAAIA,GAAJ,EAAS;AACPnB,gBAAAA,GAAG,CAACU,QAAJ,CAAa,2CAAb;AACD,eAFD,MAEO;AACLV,gBAAAA,GAAG,CAACU,QAAJ,CAAa,iDAAb;AACD;;;;;;;;;;;;;;;gDAKIV,GAAG,CAACU,QAAJ,CAAa,GAAb,C;;;;;;;;;;;wBAIMX,G,EAAKC,G;;;;;;AAChBa,cAAAA,O,GAAU,Y;;AACd,kBAAId,GAAG,CAACqB,IAAR,EAAc;AACZP,gBAAAA,OAAO,GAAGhB,CAAC,GAAG,GAAJ,GAAUE,GAAG,CAACqB,IAAJ,CAASC,YAA7B;AACD;;AACGf,cAAAA,I,qBAAYP,GAAG,CAACuB,I;AAAMT,gBAAAA,OAAO,EAAPA;;;;mDAEFT,2BAAemB,GAAf,CAAmBjB,IAAnB,C;;;AAAhBkB,cAAAA,O;AACNxB,cAAAA,GAAG,CAACU,QAAJ,CAAa,gBAAb;;;;;;;;;;;;;;;;;;2BAKgBX,G,EAAKC,G;;;;;;AACnBY,cAAAA,E,GAAKb,GAAG,CAACY,MAAJ,CAAWC,E;AAChBC,cAAAA,O,GAAUd,GAAG,CAACuB,IAAJ,CAAST,O;AACvBY,cAAAA,OAAO,CAACC,GAAR,CAAYb,OAAZ;;AACA,kBAAId,GAAG,CAACqB,IAAR,EAAc;AACZK,gBAAAA,OAAO,CAACC,GAAR,CAAY3B,GAAG,CAACqB,IAAhB;AACAP,gBAAAA,OAAO,GAAGhB,CAAC,GAAG,GAAJ,GAAUE,GAAG,CAACqB,IAAJ,CAASC,YAA7B;AACD;;AACGM,cAAAA,O,qBAAe5B,GAAG,CAACuB,I;AAAMT,gBAAAA,OAAO,EAAPA;;AAC7BY,cAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;;;mDAEuBvB,2BAAewB,MAAf,CAAsBhB,EAAtB,EAA0Be,OAA1B,C;;;AAAfE,cAAAA,M;;AACN,kBAAI,CAACA,MAAL,EAAa;AACX7B,gBAAAA,GAAG,CAACU,QAAJ,CAAa,gCAAb;AACD,eAFD,MAEO;AACLV,gBAAAA,GAAG,CAACU,QAAJ,CAAa,uCAAb;AACD;;;;;;;;;;;;;;;;;;;;;eAOQZ,iB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
      "sourcesContent": [
        "import fs from \"fs\";\r\nimport date from \"s-date\";\r\nimport khoaHocService from \"../services/khoaHocService\";\r\n\r\nlet d = new Date();\r\nd.getDate();\r\nd.getMonth();\r\nd.getFullYear();\r\nlet n = d.getDate() + d.getMonth() + d.getFullYear();\r\n\r\nclass khoaHocController {\r\n  static async getAll(req, res) {\r\n    if (req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\") {\r\n      try {\r\n        const user = req.session.user\r\n        const data = await khoaHocService.getAll();\r\n        if (data.length > 0) {\r\n          res.render(\"../views/admin/khoahoc/listkhoahoc.ejs\", { data, date , user });\r\n        } else {\r\n          res.render(\"../views/admin/khoahoc/listkhoahoc.ejs\", { data, date , user});\r\n        }\r\n        return 0;\r\n      } catch (error) {\r\n        return 0;\r\n      }\r\n    } else {\r\n      return res.redirect(\"/\");\r\n    }\r\n  }\r\n\r\n  static async Delete(req, res) {\r\n    if (req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\") {\r\n      let { id, hinhanh } = req.params;\r\n      if (!Number(id)) {\r\n        res.redirect(\"/admin/khoahoc\");\r\n      }  \r\n      try {\r\n        if (hinhanh != \"images.png\") {         \r\n          var url_del = \"public/uploadimg/\" + hinhanh;         \r\n          if (fs.existsSync(url_del)) {                    \r\n            fs.unlinkSync(url_del);\r\n          }\r\n        }\r\n        let Xoa = await khoaHocService.delete(id);  \r\n        if (Xoa) {          \r\n          res.redirect(\"/admin/khoahoc?kq=1&mes=Xóa Thành Công!!!\");\r\n        } else {\r\n          res.redirect(\"/admin/khoahoc?kq=0&mes=Xóa Không Thành Công!!!\");\r\n        }       \r\n      } catch (error) {\r\n        return error;\r\n      }\r\n    } else {\r\n      return res.redirect(\"/\");\r\n    }\r\n  }\r\n\r\n  static async add(req, res) {\r\n    let hinhanh = \"images.png\";\r\n    if (req.file) {\r\n      hinhanh = n + \"-\" + req.file.originalname;\r\n    }\r\n    let data = { ...req.body, hinhanh };\r\n    try {\r\n      const created = await khoaHocService.add(data);\r\n      res.redirect(\"/admin/khoahoc\");\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n  static async update(req, res) {\r\n    let id = req.params.id;\r\n    let hinhanh = req.body.hinhanh;\r\n    console.log(hinhanh);\r\n    if (req.file) {\r\n      console.log(req.file);\r\n      hinhanh = n + \"-\" + req.file.originalname;\r\n    }\r\n    let altered = { ...req.body, hinhanh };\r\n    console.log(altered);\r\n    try {\r\n      const update = await khoaHocService.Update(id, altered);\r\n      if (!update) {\r\n        res.redirect(\"/admin/khoahoc?kq=0&mes=Lỗi!!!\");\r\n      } else {\r\n        res.redirect(\"/admin/khoahoc?kq=1&mes=Thành Công!!!\");\r\n      }\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default khoaHocController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1584458397058
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\\\\dangKyRoute.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\dangKyRoute.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\dangKyRoute.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\dangKyRoute.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
        "sourceFileName": "dangKyRoute.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _express = require(\"express\");\n\nvar _dangKyController = _interopRequireDefault(require(\"../controllers/dangKyController\"));\n\nvar router = (0, _express.Router)();\nrouter.route(\"/\").get(_dangKyController[\"default\"].getAll).post(_dangKyController[\"default\"].add);\nrouter.route(\"/:id\").post(_dangKyController[\"default\"].update);\nrouter.route(\"/xoadangky/:id\").get(_dangKyController[\"default\"].Delete); //export default router;\n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhbmdLeVJvdXRlLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsInJvdXRlIiwiZ2V0IiwiZGFuZ0t5Q29udHJvbGxlciIsImdldEFsbCIsInBvc3QiLCJhZGQiLCJ1cGRhdGUiLCJEZWxldGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUE7O0FBRUE7O0FBRUEsSUFBTUEsTUFBTSxHQUFHLHNCQUFmO0FBRUFBLE1BQU0sQ0FDSEMsS0FESCxDQUNTLEdBRFQsRUFFR0MsR0FGSCxDQUVPQyw2QkFBaUJDLE1BRnhCLEVBR0dDLElBSEgsQ0FHUUYsNkJBQWlCRyxHQUh6QjtBQUlBTixNQUFNLENBQUNDLEtBQVAsQ0FBYSxNQUFiLEVBQXFCSSxJQUFyQixDQUEwQkYsNkJBQWlCSSxNQUEzQztBQUNBUCxNQUFNLENBQUNDLEtBQVAsQ0FBYSxnQkFBYixFQUErQkMsR0FBL0IsQ0FBbUNDLDZCQUFpQkssTUFBcEQsRSxDQUNBOztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJWLE1BQWpCIiwic291cmNlUm9vdCI6IkQ6XFxMdWFuVmFuXFxMdWFuVmFuRDJcXHRydW5ndGFtX2xhbjRcXGFwcHNcXHJvdXRlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb3V0ZXIgfSBmcm9tIFwiZXhwcmVzc1wiO1xyXG5cclxuaW1wb3J0IGRhbmdLeUNvbnRyb2xsZXIgZnJvbSBcIi4uL2NvbnRyb2xsZXJzL2RhbmdLeUNvbnRyb2xsZXJcIjtcclxuXHJcbmNvbnN0IHJvdXRlciA9IFJvdXRlcigpO1xyXG5cclxucm91dGVyXHJcbiAgLnJvdXRlKFwiL1wiKVxyXG4gIC5nZXQoZGFuZ0t5Q29udHJvbGxlci5nZXRBbGwpXHJcbiAgLnBvc3QoZGFuZ0t5Q29udHJvbGxlci5hZGQpO1xyXG5yb3V0ZXIucm91dGUoXCIvOmlkXCIpLnBvc3QoZGFuZ0t5Q29udHJvbGxlci51cGRhdGUpO1xyXG5yb3V0ZXIucm91dGUoXCIveG9hZGFuZ2t5LzppZFwiKS5nZXQoZGFuZ0t5Q29udHJvbGxlci5EZWxldGUpO1xyXG4vL2V4cG9ydCBkZWZhdWx0IHJvdXRlcjtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "dangKyRoute.js"
      ],
      "names": [
        "router",
        "route",
        "get",
        "dangKyController",
        "getAll",
        "post",
        "add",
        "update",
        "Delete",
        "module",
        "exports"
      ],
      "mappings": ";;;;AAAA;;AAEA;;AAEA,IAAMA,MAAM,GAAG,sBAAf;AAEAA,MAAM,CACHC,KADH,CACS,GADT,EAEGC,GAFH,CAEOC,6BAAiBC,MAFxB,EAGGC,IAHH,CAGQF,6BAAiBG,GAHzB;AAIAN,MAAM,CAACC,KAAP,CAAa,MAAb,EAAqBI,IAArB,CAA0BF,6BAAiBI,MAA3C;AACAP,MAAM,CAACC,KAAP,CAAa,gBAAb,EAA+BC,GAA/B,CAAmCC,6BAAiBK,MAApD,E,CACA;;AAEAC,MAAM,CAACC,OAAP,GAAiBV,MAAjB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
      "sourcesContent": [
        "import { Router } from \"express\";\r\n\r\nimport dangKyController from \"../controllers/dangKyController\";\r\n\r\nconst router = Router();\r\n\r\nrouter\r\n  .route(\"/\")\r\n  .get(dangKyController.getAll)\r\n  .post(dangKyController.add);\r\nrouter.route(\"/:id\").post(dangKyController.update);\r\nrouter.route(\"/xoadangky/:id\").get(dangKyController.Delete);\r\n//export default router;\r\n\r\nmodule.exports = router;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1577885409647
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\\\\dangKyController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\dangKyController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\dangKyController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\dangKyController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
        "sourceFileName": "dangKyController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _sDate = _interopRequireDefault(require(\"s-date\"));\n\nvar _nodemailer = _interopRequireDefault(require(\"../../helpers/nodemailer\"));\n\nvar _dangkyService = _interopRequireDefault(require(\"../services/dangkyService\"));\n\nvar _lopHocService = _interopRequireDefault(require(\"../services/lopHocService\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar dangkyController =\n/*#__PURE__*/\nfunction () {\n  function dangkyController() {\n    (0, _classCallCheck2[\"default\"])(this, dangkyController);\n  }\n\n  (0, _createClass2[\"default\"])(dangkyController, null, [{\n    key: \"getAll\",\n    value: function getAll(req, res) {\n      var user, data1, data, lophoc;\n      return _regenerator[\"default\"].async(function getAll$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\")) {\n                _context.next = 18;\n                break;\n              }\n\n              _context.prev = 1;\n              user = req.session.user;\n              _context.next = 5;\n              return _regenerator[\"default\"].awrap(_dangkyService[\"default\"].getAll());\n\n            case 5:\n              data1 = _context.sent;\n              data = data1[0];\n              _context.next = 9;\n              return _regenerator[\"default\"].awrap(_lopHocService[\"default\"].getsapmo());\n\n            case 9:\n              lophoc = _context.sent;\n\n              if (data.length > 0) {\n                res.render(\"../views/admin/dangky/listdangky.ejs\", {\n                  data: data,\n                  user: user,\n                  lophoc: lophoc,\n                  date: _sDate[\"default\"],\n                  message: 1\n                });\n              } else {\n                res.render(\"../views/admin/dangky/listdangky.ejs\", {\n                  data: data,\n                  user: user,\n                  lophoc: lophoc,\n                  date: _sDate[\"default\"],\n                  message: 0\n                });\n              }\n\n              _context.next = 16;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](1);\n              return _context.abrupt(\"return\", _context.t0);\n\n            case 16:\n              _context.next = 19;\n              break;\n\n            case 18:\n              return _context.abrupt(\"return\", res.redirect('/'));\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 13]]);\n    }\n  }, {\n    key: \"Delete\",\n    value: function Delete(req, res) {\n      var id, Xoa;\n      return _regenerator[\"default\"].async(function Delete$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\")) {\n                _context2.next = 18;\n                break;\n              }\n\n              id = req.params.id;\n\n              if (Number(id)) {\n                _context2.next = 5;\n                break;\n              }\n\n              res.redirect(\"/admin/dangky\");\n              return _context2.abrupt(\"return\");\n\n            case 5:\n              _context2.prev = 5;\n              _context2.next = 8;\n              return _regenerator[\"default\"].awrap(_dangkyService[\"default\"][\"delete\"](id));\n\n            case 8:\n              Xoa = _context2.sent;\n\n              if (Xoa) {\n                res.redirect(\"/admin/dangky\");\n              } else {\n                res.redirect(\"/admin/dangky\");\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 13:\n              _context2.prev = 13;\n              _context2.t0 = _context2[\"catch\"](5);\n              return _context2.abrupt(\"return\", _context2.t0);\n\n            case 16:\n              _context2.next = 19;\n              break;\n\n            case 18:\n              return _context2.abrupt(\"return\", res.redirect('/'));\n\n            case 19:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[5, 13]]);\n    }\n  }, {\n    key: \"add\",\n    value: function add(req, res) {\n      var _req$body, thanhtoan, email, tenkhachhang, trangthai, html, data, created;\n\n      return _regenerator[\"default\"].async(function add$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _req$body = req.body, thanhtoan = _req$body.thanhtoan, email = _req$body.email, tenkhachhang = _req$body.tenkhachhang;\n\n              if (thanhtoan == \"\") {\n                thanhtoan = 0;\n              }\n\n              trangthai = 1;\n              html = \"Xin ch\\xE0o,\\n    <br/>\\n    C\\xE1m \\u01A1n b\\u1EA1n \\u0111\\xE3 \\u0111\\u0103ng k\\xFD kh\\xF3a h\\u1ECDc t\\u1EA1i trung t\\xE2m ch\\xFAng t\\xF4i!\\n    <br/><br/>\\n    Mong b\\u1EA1n h\\xE3y \\u0111\\u1EBFn trung t\\xE2m thanh to\\xE1n s\\u1EDBm nh\\u1EA5t \\u0111\\u1EC3 c\\xF3 th\\u1EC3 gi\\u1EEF ch\\u1ED7 v\\xE0 bi\\u1EBFt th\\xEAm th\\xF4ng tin.\\n    <br/>\\n    <br/><br/>\\n    Ch\\xFAc b\\u1EA1n m\\u1ED9t ng\\xE0y t\\u1ED1t l\\xE0nh.\";\n              _context3.next = 6;\n              return _regenerator[\"default\"].awrap((0, _nodemailer[\"default\"])(email, tenkhachhang, html));\n\n            case 6:\n              _context3.next = 8;\n              return _regenerator[\"default\"].awrap(_objectSpread({}, req.body, {\n                thanhtoan: thanhtoan,\n                trangthai: trangthai\n              }));\n\n            case 8:\n              data = _context3.sent;\n              _context3.prev = 9;\n              _context3.next = 12;\n              return _regenerator[\"default\"].awrap(_dangkyService[\"default\"].add(data));\n\n            case 12:\n              created = _context3.sent;\n\n              if (created == null) {\n                res.redirect(\"/admin/dangky\");\n              } else {\n                res.redirect(\"/admin/dangky\");\n              }\n\n              _context3.next = 19;\n              break;\n\n            case 16:\n              _context3.prev = 16;\n              _context3.t0 = _context3[\"catch\"](9);\n              return _context3.abrupt(\"return\", _context3.t0);\n\n            case 19:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[9, 16]]);\n    }\n  }, {\n    key: \"update\",\n    value: function update(req, res) {\n      var thanhtoan, altered, id, update;\n      return _regenerator[\"default\"].async(function update$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              thanhtoan = req.body.thanhtoan;\n\n              if (thanhtoan == \"\") {\n                thanhtoan = 0;\n              }\n\n              _context4.next = 4;\n              return _regenerator[\"default\"].awrap(_objectSpread({}, req.body, {\n                thanhtoan: thanhtoan\n              }));\n\n            case 4:\n              altered = _context4.sent;\n              id = req.params.id;\n              _context4.prev = 6;\n              _context4.next = 9;\n              return _regenerator[\"default\"].awrap(_dangkyService[\"default\"].Update(id, altered));\n\n            case 9:\n              update = _context4.sent;\n\n              if (!update) {\n                res.redirect(\"/admin/dangky\");\n              } else {\n                res.redirect(\"/admin/dangky\");\n              }\n\n              res.redirect(\"/admin/dangky\");\n              _context4.next = 17;\n              break;\n\n            case 14:\n              _context4.prev = 14;\n              _context4.t0 = _context4[\"catch\"](6);\n              return _context4.abrupt(\"return\", _context4.t0);\n\n            case 17:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[6, 14]]);\n    }\n  }]);\n  return dangkyController;\n}();\n\nvar _default = dangkyController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "dangKyController.js"
      ],
      "names": [
        "dangkyController",
        "req",
        "res",
        "session",
        "user",
        "quyenhang",
        "dangkyService",
        "getAll",
        "data1",
        "data",
        "lopHocService",
        "getsapmo",
        "lophoc",
        "length",
        "render",
        "date",
        "message",
        "redirect",
        "id",
        "params",
        "Number",
        "Xoa",
        "body",
        "thanhtoan",
        "email",
        "tenkhachhang",
        "trangthai",
        "html",
        "add",
        "created",
        "altered",
        "Update",
        "update"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;IAEMA,gB;;;;;;;;;2BACgBC,G,EAAKC,G;;;;;;oBACpBD,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,OAA9B,IAAyCJ,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,W;;;;;;AAElED,cAAAA,I,GAAOH,GAAG,CAACE,OAAJ,CAAYC,I;;mDACLE,0BAAcC,MAAd,E;;;AAAdC,cAAAA,K;AACFC,cAAAA,I,GAAOD,KAAK,CAAC,CAAD,C;;mDACKE,0BAAcC,QAAd,E;;;AAAfC,cAAAA,M;;AACN,kBAAIH,IAAI,CAACI,MAAL,GAAc,CAAlB,EAAqB;AACnBX,gBAAAA,GAAG,CAACY,MAAJ,CAAW,sCAAX,EAAmD;AACjDL,kBAAAA,IAAI,EAAJA,IADiD;AAC3CL,kBAAAA,IAAI,EAAJA,IAD2C;AAEjDQ,kBAAAA,MAAM,EAANA,MAFiD;AAGjDG,kBAAAA,IAAI,EAAJA,iBAHiD;AAIjDC,kBAAAA,OAAO,EAAE;AAJwC,iBAAnD;AAMD,eAPD,MAOO;AACLd,gBAAAA,GAAG,CAACY,MAAJ,CAAW,sCAAX,EAAmD;AACjDL,kBAAAA,IAAI,EAAJA,IADiD;AAC3CL,kBAAAA,IAAI,EAAJA,IAD2C;AAEjDQ,kBAAAA,MAAM,EAANA,MAFiD;AAGjDG,kBAAAA,IAAI,EAAJA,iBAHiD;AAIjDC,kBAAAA,OAAO,EAAE;AAJwC,iBAAnD;AAMD;;;;;;;;;;;;;;;+CAISd,GAAG,CAACe,QAAJ,CAAa,GAAb,C;;;;;;;;;;;2BAGMhB,G,EAAKC,G;;;;;;oBACpBD,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,OAA9B,IAAyCJ,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,W;;;;;AACpEa,cAAAA,E,GAAOjB,GAAG,CAACkB,M,CAAXD,E;;kBACDE,MAAM,CAACF,EAAD,C;;;;;AACThB,cAAAA,GAAG,CAACe,QAAJ,CAAa,eAAb;;;;;;mDAIgBX,oCAAqBY,EAArB,C;;;AAAZG,cAAAA,G;;AACJ,kBAAIA,GAAJ,EAAS;AACPnB,gBAAAA,GAAG,CAACe,QAAJ,CAAa,eAAb;AACD,eAFD,MAEO;AACLf,gBAAAA,GAAG,CAACe,QAAJ,CAAa,eAAb;AACD;;;;;;;;;;;;;;gDAKSf,GAAG,CAACe,QAAJ,CAAa,GAAb,C;;;;;;;;;;;wBAGGhB,G,EAAKC,G;;;;;;;0BACqBD,GAAG,CAACqB,I,EAAvCC,S,aAAAA,S,EAAWC,K,aAAAA,K,EAAQC,Y,aAAAA,Y;;AACzB,kBAAIF,SAAS,IAAI,EAAjB,EAAqB;AACnBA,gBAAAA,SAAS,GAAG,CAAZ;AACD;;AACGG,cAAAA,S,GAAY,C;AACVC,cAAAA,I;;mDAQA,4BAAKH,KAAL,EAAWC,YAAX,EAAyBE,IAAzB,C;;;;qEACgB1B,GAAG,CAACqB,I;AAAMC,gBAAAA,SAAS,EAATA,S;AAAWG,gBAAAA,SAAS,EAATA;;;;AAAvCjB,cAAAA,I;;;mDAEoBH,0BAAcsB,GAAd,CAAkBnB,IAAlB,C;;;AAAhBoB,cAAAA,O;;AAEN,kBAAIA,OAAO,IAAI,IAAf,EAAqB;AACnB3B,gBAAAA,GAAG,CAACe,QAAJ,CAAa,eAAb;AACD,eAFD,MAEO;AACLf,gBAAAA,GAAG,CAACe,QAAJ,CAAa,eAAb;AACD;;;;;;;;;;;;;;;;;;;2BAMehB,G,EAAKC,G;;;;;;AACnBqB,cAAAA,S,GAAYtB,GAAG,CAACqB,IAAJ,CAASC,S;;AACzB,kBAAIA,SAAS,IAAI,EAAjB,EAAqB;AACnBA,gBAAAA,SAAS,GAAG,CAAZ;AACD;;;qEACwBtB,GAAG,CAACqB,I;AAAMC,gBAAAA,SAAS,EAATA;;;;AAA/BO,cAAAA,O;AACIZ,cAAAA,E,GAAOjB,GAAG,CAACkB,M,CAAXD,E;;;mDAEeZ,0BAAcyB,MAAd,CAAqBb,EAArB,EAAyBY,OAAzB,C;;;AAAfE,cAAAA,M;;AACN,kBAAI,CAACA,MAAL,EAAa;AACX9B,gBAAAA,GAAG,CAACe,QAAJ,CAAa,eAAb;AACD,eAFD,MAEO;AACLf,gBAAAA,GAAG,CAACe,QAAJ,CAAa,eAAb;AACD;;AACDf,cAAAA,GAAG,CAACe,QAAJ,CAAa,eAAb;;;;;;;;;;;;;;;;;;;;eASSjB,gB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
      "sourcesContent": [
        "import date from \"s-date\";\r\nimport mail from \"../../helpers/nodemailer\"\r\nimport dangkyService from \"../services/dangkyService\";\r\nimport lopHocService from \"../services/lopHocService\";\r\n\r\nclass dangkyController {\r\n  static async getAll(req, res) {     \r\n    if(req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\"){\r\n    try {\r\n      const user = req.session.user\r\n      const data1 = await dangkyService.getAll();\r\n      var data = data1[0];      \r\n      const lophoc = await lopHocService.getsapmo();\r\n      if (data.length > 0) {\r\n        res.render(\"../views/admin/dangky/listdangky.ejs\", {\r\n          data, user,\r\n          lophoc,\r\n          date,\r\n          message: 1\r\n        });\r\n      } else {\r\n        res.render(\"../views/admin/dangky/listdangky.ejs\", {\r\n          data, user,\r\n          lophoc,\r\n          date,\r\n          message: 0\r\n        });\r\n      }\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }else{ return res.redirect('/') }\r\n  }\r\n\r\n  static async Delete(req, res) {    \r\n    if(req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\" ){\r\n    let { id } = req.params;\r\n    if (!Number(id)) {\r\n      res.redirect(\"/admin/dangky\");\r\n      return; //util.send(res);\r\n    }\r\n    try {\r\n      let Xoa = await dangkyService.delete(id);\r\n      if (Xoa) {\r\n        res.redirect(\"/admin/dangky\");\r\n      } else {\r\n        res.redirect(\"/admin/dangky\");\r\n      }\r\n      return;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }else{ return res.redirect('/') }\r\n  }\r\n\r\n  static async add(req, res) {\r\n    let { thanhtoan, email , tenkhachhang} = req.body;\r\n    if (thanhtoan == \"\") {\r\n      thanhtoan = 0;\r\n    }\r\n    let trangthai = 1     \r\n    const html = `Xin chào,\r\n    <br/>\r\n    Cám ơn bạn đã đăng ký khóa học tại trung tâm chúng tôi!\r\n    <br/><br/>\r\n    Mong bạn hãy đến trung tâm thanh toán sớm nhất để có thể giữ chỗ và biết thêm thông tin.\r\n    <br/>\r\n    <br/><br/>\r\n    Chúc bạn một ngày tốt lành.` \r\n    await mail(email,tenkhachhang, html);\r\n    let data = await { ...req.body, thanhtoan ,trangthai};\r\n    try {\r\n      const created = await dangkyService.add(data);\r\n\r\n      if (created == null) {\r\n        res.redirect(\"/admin/dangky\");\r\n      } else {\r\n        res.redirect(\"/admin/dangky\");\r\n      }\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  static async update(req, res) {\r\n    let thanhtoan = req.body.thanhtoan;\r\n    if (thanhtoan == \"\") {\r\n      thanhtoan = 0;\r\n    }\r\n    let altered = await { ...req.body, thanhtoan };\r\n    const { id } = req.params;\r\n    try {\r\n      const update = await dangkyService.Update(id, altered);\r\n      if (!update) {\r\n        res.redirect(\"/admin/dangky\");\r\n      } else {\r\n        res.redirect(\"/admin/dangky\");\r\n      }\r\n      res.redirect(\"/admin/dangky\");\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default dangkyController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1584884202198
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\\\\giangVienRoute.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\giangVienRoute.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\giangVienRoute.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\giangVienRoute.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
        "sourceFileName": "giangVienRoute.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _express = require(\"express\");\n\nvar _giangVienController = _interopRequireDefault(require(\"../controllers/giangVienController\"));\n\nvar _uploadfile = _interopRequireDefault(require(\"../../helpers/uploadfile\"));\n\nvar router = (0, _express.Router)();\n\nvar single = _uploadfile[\"default\"].single(\"hinhanh\");\n\nrouter.route(\"/\").get(_giangVienController[\"default\"].getAll).post(single, _giangVienController[\"default\"].add);\nrouter.route(\"/:id\").post(single, _giangVienController[\"default\"].update).get(_giangVienController[\"default\"].Delete);\nrouter.route(\"/xoa/:id/:hinhanh\").post(single, _giangVienController[\"default\"].update).get(_giangVienController[\"default\"].Delete); //export default router;\n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdpYW5nVmllblJvdXRlLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsInNpbmdsZSIsInVwbG9hZCIsInJvdXRlIiwiZ2V0IiwiZ2lhbmd2aWVuQ29udHJvbGxlciIsImdldEFsbCIsInBvc3QiLCJhZGQiLCJ1cGRhdGUiLCJEZWxldGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUE7O0FBRUE7O0FBRUE7O0FBRUEsSUFBTUEsTUFBTSxHQUFHLHNCQUFmOztBQUNBLElBQUlDLE1BQU0sR0FBR0MsdUJBQU9ELE1BQVAsQ0FBYyxTQUFkLENBQWI7O0FBRUFELE1BQU0sQ0FDSEcsS0FESCxDQUNTLEdBRFQsRUFFR0MsR0FGSCxDQUVPQyxnQ0FBb0JDLE1BRjNCLEVBR0dDLElBSEgsQ0FHUU4sTUFIUixFQUdnQkksZ0NBQW9CRyxHQUhwQztBQUlBUixNQUFNLENBQ0hHLEtBREgsQ0FDUyxNQURULEVBRUdJLElBRkgsQ0FFUU4sTUFGUixFQUVnQkksZ0NBQW9CSSxNQUZwQyxFQUdHTCxHQUhILENBR1FDLGdDQUFvQkssTUFINUI7QUFLRVYsTUFBTSxDQUNMRyxLQURELENBQ08sbUJBRFAsRUFFQ0ksSUFGRCxDQUVNTixNQUZOLEVBRWNJLGdDQUFvQkksTUFGbEMsRUFHQ0wsR0FIRCxDQUdNQyxnQ0FBb0JLLE1BSDFCLEUsQ0FLRjs7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCWixNQUFqQiIsInNvdXJjZVJvb3QiOiJEOlxcTHVhblZhblxcTHVhblZhbkQyXFx0cnVuZ3RhbV9sYW40XFxhcHBzXFxyb3V0ZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyIH0gZnJvbSBcImV4cHJlc3NcIjtcclxuXHJcbmltcG9ydCBnaWFuZ3ZpZW5Db250cm9sbGVyIGZyb20gXCIuLi9jb250cm9sbGVycy9naWFuZ1ZpZW5Db250cm9sbGVyXCI7XHJcblxyXG5pbXBvcnQgdXBsb2FkIGZyb20gXCIuLi8uLi9oZWxwZXJzL3VwbG9hZGZpbGVcIjtcclxuXHJcbmNvbnN0IHJvdXRlciA9IFJvdXRlcigpO1xyXG52YXIgc2luZ2xlID0gdXBsb2FkLnNpbmdsZShcImhpbmhhbmhcIik7XHJcblxyXG5yb3V0ZXJcclxuICAucm91dGUoXCIvXCIpXHJcbiAgLmdldChnaWFuZ3ZpZW5Db250cm9sbGVyLmdldEFsbClcclxuICAucG9zdChzaW5nbGUsIGdpYW5ndmllbkNvbnRyb2xsZXIuYWRkKTtcclxucm91dGVyXHJcbiAgLnJvdXRlKFwiLzppZFwiKVxyXG4gIC5wb3N0KHNpbmdsZSwgZ2lhbmd2aWVuQ29udHJvbGxlci51cGRhdGUpXHJcbiAgLmdldCggZ2lhbmd2aWVuQ29udHJvbGxlci5EZWxldGUpXHJcblxyXG4gIHJvdXRlclxyXG4gIC5yb3V0ZShcIi94b2EvOmlkLzpoaW5oYW5oXCIpXHJcbiAgLnBvc3Qoc2luZ2xlLCBnaWFuZ3ZpZW5Db250cm9sbGVyLnVwZGF0ZSlcclxuICAuZ2V0KCBnaWFuZ3ZpZW5Db250cm9sbGVyLkRlbGV0ZSlcclxuXHJcbi8vZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "giangVienRoute.js"
      ],
      "names": [
        "router",
        "single",
        "upload",
        "route",
        "get",
        "giangvienController",
        "getAll",
        "post",
        "add",
        "update",
        "Delete",
        "module",
        "exports"
      ],
      "mappings": ";;;;AAAA;;AAEA;;AAEA;;AAEA,IAAMA,MAAM,GAAG,sBAAf;;AACA,IAAIC,MAAM,GAAGC,uBAAOD,MAAP,CAAc,SAAd,CAAb;;AAEAD,MAAM,CACHG,KADH,CACS,GADT,EAEGC,GAFH,CAEOC,gCAAoBC,MAF3B,EAGGC,IAHH,CAGQN,MAHR,EAGgBI,gCAAoBG,GAHpC;AAIAR,MAAM,CACHG,KADH,CACS,MADT,EAEGI,IAFH,CAEQN,MAFR,EAEgBI,gCAAoBI,MAFpC,EAGGL,GAHH,CAGQC,gCAAoBK,MAH5B;AAKEV,MAAM,CACLG,KADD,CACO,mBADP,EAECI,IAFD,CAEMN,MAFN,EAEcI,gCAAoBI,MAFlC,EAGCL,GAHD,CAGMC,gCAAoBK,MAH1B,E,CAKF;;AAEAC,MAAM,CAACC,OAAP,GAAiBZ,MAAjB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
      "sourcesContent": [
        "import { Router } from \"express\";\r\n\r\nimport giangvienController from \"../controllers/giangVienController\";\r\n\r\nimport upload from \"../../helpers/uploadfile\";\r\n\r\nconst router = Router();\r\nvar single = upload.single(\"hinhanh\");\r\n\r\nrouter\r\n  .route(\"/\")\r\n  .get(giangvienController.getAll)\r\n  .post(single, giangvienController.add);\r\nrouter\r\n  .route(\"/:id\")\r\n  .post(single, giangvienController.update)\r\n  .get( giangvienController.Delete)\r\n\r\n  router\r\n  .route(\"/xoa/:id/:hinhanh\")\r\n  .post(single, giangvienController.update)\r\n  .get( giangvienController.Delete)\r\n\r\n//export default router;\r\n\r\nmodule.exports = router;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581568172950
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\\\\giangVienController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\giangVienController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\giangVienController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\giangVienController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
        "sourceFileName": "giangVienController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _giangVienService = _interopRequireDefault(require(\"../services/giangVienService\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar d = new Date();\nd.getDate();\nd.getMonth();\nd.getFullYear();\nvar n = d.getDate() + d.getMonth() + d.getFullYear();\n\nvar giangvienController =\n/*#__PURE__*/\nfunction () {\n  function giangvienController() {\n    (0, _classCallCheck2[\"default\"])(this, giangvienController);\n  }\n\n  (0, _createClass2[\"default\"])(giangvienController, null, [{\n    key: \"getAll\",\n    value: function getAll(req, res) {\n      var user, data;\n      return _regenerator[\"default\"].async(function getAll$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\")) {\n                _context.next = 14;\n                break;\n              }\n\n              _context.prev = 1;\n              user = req.session.user;\n              _context.next = 5;\n              return _regenerator[\"default\"].awrap(_giangVienService[\"default\"].getAll());\n\n            case 5:\n              data = _context.sent;\n\n              if (data.length > 0) {\n                res.render(\"../views/admin/nhanvien/listnv.ejs\", {\n                  data: data,\n                  user: user\n                });\n              } else {\n                res.render(\"../views/admin/nhanvien/listnv.ejs\", {\n                  data: data,\n                  user: user,\n                  message: \"Khong co du lieu\"\n                });\n              }\n\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              return _context.abrupt(\"return\", _context.t0);\n\n            case 12:\n              _context.next = 15;\n              break;\n\n            case 14:\n              return _context.abrupt(\"return\", res.redirect(\"/\"));\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 9]]);\n    }\n  }, {\n    key: \"Delete\",\n    value: function Delete(req, res) {\n      var _req$params, id, hinhanh, url_del, Xoa;\n\n      return _regenerator[\"default\"].async(function Delete$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\")) {\n                _context2.next = 17;\n                break;\n              }\n\n              _req$params = req.params, id = _req$params.id, hinhanh = _req$params.hinhanh;\n\n              if (!Number(id)) {\n                res.redirect(\"/admin/giangvien\");\n              }\n\n              _context2.prev = 3;\n\n              if (hinhanh != \"ImagesDefault.png\") {\n                // var url_del = \"../../public/uploadimg/\" + hinhanh;\n                url_del = \"public/uploadimg/\" + hinhanh;\n                console.log(url_del);\n\n                if (_fs[\"default\"].existsSync(url_del)) {\n                  _fs[\"default\"].unlinkSync(url_del);\n                }\n              }\n\n              _context2.next = 7;\n              return _regenerator[\"default\"].awrap(_giangVienService[\"default\"][\"delete\"](id));\n\n            case 7:\n              Xoa = _context2.sent;\n\n              if (Xoa) {\n                res.redirect(\"/admin/giangvien\");\n              } else {\n                res.redirect(\"/admin/giangvien\");\n              }\n\n              res.redirect(\"/admin/giangvien\");\n              _context2.next = 15;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](3);\n              return _context2.abrupt(\"return\", _context2.t0);\n\n            case 15:\n              _context2.next = 18;\n              break;\n\n            case 17:\n              return _context2.abrupt(\"return\", res.redirect(\"/\"));\n\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[3, 12]]);\n    }\n  }, {\n    key: \"add\",\n    value: function add(req, res) {\n      var hinhanh, data, created;\n      return _regenerator[\"default\"].async(function add$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              hinhanh = \"ImagesDefault.png\";\n\n              if (req.file) {\n                hinhanh = n + \"-\" + req.file.originalname;\n              }\n\n              data = _objectSpread({}, req.body, {\n                hinhanh: hinhanh\n              });\n              _context3.prev = 3;\n              _context3.next = 6;\n              return _regenerator[\"default\"].awrap(_giangVienService[\"default\"].add(data));\n\n            case 6:\n              created = _context3.sent;\n              res.status(204).redirect(\"/admin/giangvien\");\n              _context3.next = 13;\n              break;\n\n            case 10:\n              _context3.prev = 10;\n              _context3.t0 = _context3[\"catch\"](3);\n              return _context3.abrupt(\"return\", _context3.t0);\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[3, 10]]);\n    }\n  }, {\n    key: \"update\",\n    value: function update(req, res) {\n      var id, hinhanh, altered, update;\n      return _regenerator[\"default\"].async(function update$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              id = req.params.id;\n              hinhanh = req.body.hinhanh;\n\n              if (req.file) {\n                hinhanh = n + \"-\" + req.file.originalname;\n              }\n\n              altered = _objectSpread({}, req.body, {\n                hinhanh: hinhanh\n              });\n              console.log(altered);\n              _context4.prev = 5;\n              _context4.next = 8;\n              return _regenerator[\"default\"].awrap(_giangVienService[\"default\"].Update(id, altered));\n\n            case 8:\n              update = _context4.sent;\n\n              if (!update) {\n                res.redirect(\"/admin/giangvien?kq=0\");\n              } else {\n                res.redirect(\"/admin/giangvien?kq=1\");\n              }\n\n              return _context4.abrupt(\"return\", res.redirect(\"/admin/giangvien\"));\n\n            case 13:\n              _context4.prev = 13;\n              _context4.t0 = _context4[\"catch\"](5);\n              return _context4.abrupt(\"return\", res.redirect(\"/admin/giangvien\"));\n\n            case 16:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[5, 13]]);\n    }\n  }]);\n  return giangvienController;\n}();\n\nvar _default = giangvienController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "giangVienController.js"
      ],
      "names": [
        "d",
        "Date",
        "getDate",
        "getMonth",
        "getFullYear",
        "n",
        "giangvienController",
        "req",
        "res",
        "session",
        "user",
        "quyenhang",
        "giangvienService",
        "getAll",
        "data",
        "length",
        "render",
        "message",
        "redirect",
        "params",
        "id",
        "hinhanh",
        "Number",
        "url_del",
        "console",
        "log",
        "fs",
        "existsSync",
        "unlinkSync",
        "Xoa",
        "file",
        "originalname",
        "body",
        "add",
        "created",
        "status",
        "altered",
        "Update",
        "update"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;AAAA;;AACA;;;;;;AAEA,IAAIA,CAAC,GAAG,IAAIC,IAAJ,EAAR;AACAD,CAAC,CAACE,OAAF;AACAF,CAAC,CAACG,QAAF;AACAH,CAAC,CAACI,WAAF;AACA,IAAIC,CAAC,GAAGL,CAAC,CAACE,OAAF,KAAcF,CAAC,CAACG,QAAF,EAAd,GAA6BH,CAAC,CAACI,WAAF,EAArC;;IAEME,mB;;;;;;;;;2BACgBC,G,EAAKC,G;;;;;;oBACnBD,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,OAA9B,IAAyCJ,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,W;;;;;;AAEjED,cAAAA,I,GAAOH,GAAG,CAACE,OAAJ,CAAYC,I;;mDACNE,6BAAiBC,MAAjB,E;;;AAAbC,cAAAA,I;;AACN,kBAAIA,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AACnBP,gBAAAA,GAAG,CAACQ,MAAJ,CAAW,oCAAX,EAAiD;AAAEF,kBAAAA,IAAI,EAAJA,IAAF;AAAQJ,kBAAAA,IAAI,EAAJA;AAAR,iBAAjD;AACD,eAFD,MAEO;AACLF,gBAAAA,GAAG,CAACQ,MAAJ,CAAW,oCAAX,EAAiD;AAC/CF,kBAAAA,IAAI,EAAJA,IAD+C;AACzCJ,kBAAAA,IAAI,EAAJA,IADyC;AAE/CO,kBAAAA,OAAO,EAAE;AAFsC,iBAAjD;AAID;;;;;;;;;;;;;;;+CAKIT,GAAG,CAACU,QAAJ,CAAa,GAAb,C;;;;;;;;;;;2BAISX,G,EAAKC,G;;;;;;;oBACnBD,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,OAA9B,IAAyCJ,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,W;;;;;4BACnDJ,GAAG,CAACY,M,EAApBC,E,eAAAA,E,EAAIC,O,eAAAA,O;;AACV,kBAAI,CAACC,MAAM,CAACF,EAAD,CAAX,EAAiB;AACfZ,gBAAAA,GAAG,CAACU,QAAJ,CAAa,kBAAb;AACD;;;;AAGC,kBAAIG,OAAO,IAAI,mBAAf,EAAoC;AAClC;AACIE,gBAAAA,OAF8B,GAEpB,sBAAsBF,OAFF;AAGlCG,gBAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AACA,oBAAIG,eAAGC,UAAH,CAAcJ,OAAd,CAAJ,EAA4B;AAC1BG,iCAAGE,UAAH,CAAcL,OAAd;AACD;AACF;;;mDACeX,uCAAwBQ,EAAxB,C;;;AAAZS,cAAAA,G;;AACJ,kBAAIA,GAAJ,EAAS;AACPrB,gBAAAA,GAAG,CAACU,QAAJ,CAAa,kBAAb;AACD,eAFD,MAEO;AACLV,gBAAAA,GAAG,CAACU,QAAJ,CAAa,kBAAb;AACD;;AACDV,cAAAA,GAAG,CAACU,QAAJ,CAAa,kBAAb;;;;;;;;;;;;;;gDAKKV,GAAG,CAACU,QAAJ,CAAa,GAAb,C;;;;;;;;;;;wBAIMX,G,EAAKC,G;;;;;;AAChBa,cAAAA,O,GAAU,mB;;AACd,kBAAId,GAAG,CAACuB,IAAR,EAAc;AACZT,gBAAAA,OAAO,GAAGhB,CAAC,GAAG,GAAJ,GAAUE,GAAG,CAACuB,IAAJ,CAASC,YAA7B;AACD;;AACGjB,cAAAA,I,qBAAYP,GAAG,CAACyB,I;AAAMX,gBAAAA,OAAO,EAAPA;;;;mDAEFT,6BAAiBqB,GAAjB,CAAqBnB,IAArB,C;;;AAAhBoB,cAAAA,O;AACN1B,cAAAA,GAAG,CAAC2B,MAAJ,CAAW,GAAX,EAAgBjB,QAAhB,CAAyB,kBAAzB;;;;;;;;;;;;;;;;;;2BAMgBX,G,EAAKC,G;;;;;;AACnBY,cAAAA,E,GAAKb,GAAG,CAACY,MAAJ,CAAWC,E;AAChBC,cAAAA,O,GAAUd,GAAG,CAACyB,IAAJ,CAASX,O;;AACvB,kBAAId,GAAG,CAACuB,IAAR,EAAc;AACZT,gBAAAA,OAAO,GAAGhB,CAAC,GAAG,GAAJ,GAAUE,GAAG,CAACuB,IAAJ,CAASC,YAA7B;AACD;;AAEEK,cAAAA,O,qBAAe7B,GAAG,CAACyB,I;AAAMX,gBAAAA,OAAO,EAAPA;;AAC5BG,cAAAA,OAAO,CAACC,GAAR,CAAYW,OAAZ;;;mDAEuBxB,6BAAiByB,MAAjB,CAAwBjB,EAAxB,EAA4BgB,OAA5B,C;;;AAAfE,cAAAA,M;;AACN,kBAAI,CAACA,MAAL,EAAa;AACX9B,gBAAAA,GAAG,CAACU,QAAJ,CAAa,uBAAb;AACD,eAFD,MAEO;AACLV,gBAAAA,GAAG,CAACU,QAAJ,CAAa,uBAAb;AACD;;gDACMV,GAAG,CAACU,QAAJ,CAAa,kBAAb,C;;;;;gDAEAV,GAAG,CAACU,QAAJ,CAAa,kBAAb,C;;;;;;;;;;;;;eAKEZ,mB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
      "sourcesContent": [
        "import fs from \"fs\";\r\nimport giangvienService from \"../services/giangVienService\";\r\n\r\nlet d = new Date();\r\nd.getDate();\r\nd.getMonth();\r\nd.getFullYear();\r\nlet n = d.getDate() + d.getMonth() + d.getFullYear();\r\n\r\nclass giangvienController {\r\n  static async getAll(req, res) {  \r\n    if (req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\") {\r\n      try {\r\n        const user = req.session.user\r\n        const data = await giangvienService.getAll();\r\n        if (data.length > 0) {\r\n          res.render(\"../views/admin/nhanvien/listnv.ejs\", { data ,user });\r\n        } else {\r\n          res.render(\"../views/admin/nhanvien/listnv.ejs\", {\r\n            data, user,\r\n            message: \"Khong co du lieu\"\r\n          });\r\n        }\r\n      } catch (error) {\r\n        return error;\r\n      }\r\n    } else {\r\n      return res.redirect(\"/\");\r\n    }\r\n  }\r\n\r\n  static async Delete(req, res) {   \r\n    if (req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\") {\r\n      let { id, hinhanh } = req.params;\r\n      if (!Number(id)) {\r\n        res.redirect(\"/admin/giangvien\");\r\n      }\r\n\r\n      try {\r\n        if (hinhanh != \"ImagesDefault.png\") {\r\n          // var url_del = \"../../public/uploadimg/\" + hinhanh;\r\n          var url_del = \"public/uploadimg/\" + hinhanh;\r\n          console.log(url_del);\r\n          if (fs.existsSync(url_del)) {\r\n            fs.unlinkSync(url_del);\r\n          }\r\n        }\r\n        let Xoa = await giangvienService.delete(id);\r\n        if (Xoa) {\r\n          res.redirect(\"/admin/giangvien\");\r\n        } else {\r\n          res.redirect(\"/admin/giangvien\");\r\n        }\r\n        res.redirect(\"/admin/giangvien\");\r\n      } catch (error) {\r\n        return error;\r\n      }\r\n    } else {\r\n      return res.redirect(\"/\");\r\n    }\r\n  }\r\n\r\n  static async add(req, res) {\r\n    let hinhanh = \"ImagesDefault.png\";\r\n    if (req.file) {\r\n      hinhanh = n + \"-\" + req.file.originalname;\r\n    }\r\n    let data = { ...req.body, hinhanh };\r\n    try {\r\n      const created = await giangvienService.add(data);\r\n      res.status(204).redirect(\"/admin/giangvien\");\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  static async update(req, res) {\r\n    let id = req.params.id\r\n    let hinhanh = req.body.hinhanh;    \r\n    if (req.file) {    \r\n      hinhanh = n + \"-\" + req.file.originalname;\r\n    }\r\n      \r\n  let  altered = { ...req.body, hinhanh };\r\n    console.log(altered);    \r\n    try {\r\n      const update = await giangvienService.Update(id, altered);\r\n      if (!update) {\r\n        res.redirect(\"/admin/giangvien?kq=0\");\r\n      } else {\r\n        res.redirect(\"/admin/giangvien?kq=1\");\r\n      }\r\n      return res.redirect(\"/admin/giangvien\");\r\n    } catch (error) {\r\n      return res.redirect(\"/admin/giangvien\");\r\n    }\r\n  }\r\n}\r\n\r\nexport default giangvienController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1584458350307
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\\\\hocVienRoute.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\hocVienRoute.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\hocVienRoute.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\hocVienRoute.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
        "sourceFileName": "hocVienRoute.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _express = require(\"express\");\n\nvar _hocVienController = _interopRequireDefault(require(\"../controllers/hocVienController\"));\n\nvar router = (0, _express.Router)();\nrouter.route('/').get(_hocVienController[\"default\"].getAll).post(_hocVienController[\"default\"].add);\nrouter.route('/:id').post(_hocVienController[\"default\"].update).get(_hocVienController[\"default\"].Delete); //export default router;\n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhvY1ZpZW5Sb3V0ZS5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJyb3V0ZSIsImdldCIsImhvY1ZpZW5Db250cm9sbGVyIiwiZ2V0QWxsIiwicG9zdCIsImFkZCIsInVwZGF0ZSIsIkRlbGV0ZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFFQTs7QUFFQSxJQUFNQSxNQUFNLEdBQUcsc0JBQWY7QUFHQUEsTUFBTSxDQUFDQyxLQUFQLENBQWEsR0FBYixFQUNDQyxHQURELENBQ0tDLDhCQUFrQkMsTUFEdkIsRUFFQ0MsSUFGRCxDQUVPRiw4QkFBa0JHLEdBRnpCO0FBR0FOLE1BQU0sQ0FBQ0MsS0FBUCxDQUFhLE1BQWIsRUFDQ0ksSUFERCxDQUNNRiw4QkFBa0JJLE1BRHhCLEVBRUNMLEdBRkQsQ0FFS0MsOEJBQWtCSyxNQUZ2QixFLENBR0E7O0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlYsTUFBakIiLCJzb3VyY2VSb290IjoiRDpcXEx1YW5WYW5cXEx1YW5WYW5EMlxcdHJ1bmd0YW1fbGFuNFxcYXBwc1xccm91dGVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gJ2V4cHJlc3MnO1xyXG5cclxuaW1wb3J0IGhvY1ZpZW5Db250cm9sbGVyIGZyb20gJy4uL2NvbnRyb2xsZXJzL2hvY1ZpZW5Db250cm9sbGVyJztcclxuXHJcbmNvbnN0IHJvdXRlciA9IFJvdXRlcigpO1xyXG5cclxuXHJcbnJvdXRlci5yb3V0ZSgnLycpXHJcbi5nZXQoaG9jVmllbkNvbnRyb2xsZXIuZ2V0QWxsKVxyXG4ucG9zdCggaG9jVmllbkNvbnRyb2xsZXIuYWRkKVxyXG5yb3V0ZXIucm91dGUoJy86aWQnKVxyXG4ucG9zdChob2NWaWVuQ29udHJvbGxlci51cGRhdGUpXHJcbi5nZXQoaG9jVmllbkNvbnRyb2xsZXIuRGVsZXRlKVxyXG4vL2V4cG9ydCBkZWZhdWx0IHJvdXRlcjtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gcm91dGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "hocVienRoute.js"
      ],
      "names": [
        "router",
        "route",
        "get",
        "hocVienController",
        "getAll",
        "post",
        "add",
        "update",
        "Delete",
        "module",
        "exports"
      ],
      "mappings": ";;;;AAAA;;AAEA;;AAEA,IAAMA,MAAM,GAAG,sBAAf;AAGAA,MAAM,CAACC,KAAP,CAAa,GAAb,EACCC,GADD,CACKC,8BAAkBC,MADvB,EAECC,IAFD,CAEOF,8BAAkBG,GAFzB;AAGAN,MAAM,CAACC,KAAP,CAAa,MAAb,EACCI,IADD,CACMF,8BAAkBI,MADxB,EAECL,GAFD,CAEKC,8BAAkBK,MAFvB,E,CAGA;;AAEAC,MAAM,CAACC,OAAP,GAAiBV,MAAjB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
      "sourcesContent": [
        "import { Router } from 'express';\r\n\r\nimport hocVienController from '../controllers/hocVienController';\r\n\r\nconst router = Router();\r\n\r\n\r\nrouter.route('/')\r\n.get(hocVienController.getAll)\r\n.post( hocVienController.add)\r\nrouter.route('/:id')\r\n.post(hocVienController.update)\r\n.get(hocVienController.Delete)\r\n//export default router;\r\n\r\nmodule.exports = router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1584802848218
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\\\\hocVienController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\hocVienController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\hocVienController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\hocVienController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
        "sourceFileName": "hocVienController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _sDate = _interopRequireDefault(require(\"s-date\"));\n\nvar _nodemailer = _interopRequireDefault(require(\"../../helpers/nodemailer\"));\n\nvar _dangkyService = _interopRequireDefault(require(\"../services/dangkyService\"));\n\nvar _lopHocService = _interopRequireDefault(require(\"../services/lopHocService\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar dangkyController =\n/*#__PURE__*/\nfunction () {\n  function dangkyController() {\n    (0, _classCallCheck2[\"default\"])(this, dangkyController);\n  }\n\n  (0, _createClass2[\"default\"])(dangkyController, null, [{\n    key: \"getAll\",\n    value: function getAll(req, res) {\n      var user, data1, data, lophoc;\n      return _regenerator[\"default\"].async(function getAll$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\")) {\n                _context.next = 18;\n                break;\n              }\n\n              _context.prev = 1;\n              user = req.session.user;\n              _context.next = 5;\n              return _regenerator[\"default\"].awrap(_dangkyService[\"default\"].getAllHV());\n\n            case 5:\n              data1 = _context.sent;\n              data = data1[0];\n              _context.next = 9;\n              return _regenerator[\"default\"].awrap(_lopHocService[\"default\"].getsapmo());\n\n            case 9:\n              lophoc = _context.sent;\n\n              if (data.length > 0) {\n                res.render(\"../views/admin/hocvien/listhocvien.ejs\", {\n                  data: data,\n                  user: user,\n                  lophoc: lophoc,\n                  date: _sDate[\"default\"],\n                  message: 1\n                });\n              } else {\n                res.render(\"../views/admin/hocvien/listhocvien.ejs\", {\n                  data: data,\n                  user: user,\n                  lophoc: lophoc,\n                  date: _sDate[\"default\"],\n                  message: 0\n                });\n              }\n\n              _context.next = 16;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](1);\n              return _context.abrupt(\"return\", _context.t0);\n\n            case 16:\n              _context.next = 19;\n              break;\n\n            case 18:\n              return _context.abrupt(\"return\", res.redirect('/'));\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 13]]);\n    }\n  }, {\n    key: \"Delete\",\n    value: function Delete(req, res) {\n      var id, Xoa;\n      return _regenerator[\"default\"].async(function Delete$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\")) {\n                _context2.next = 18;\n                break;\n              }\n\n              id = req.params.id;\n\n              if (Number(id)) {\n                _context2.next = 5;\n                break;\n              }\n\n              res.redirect(\"/admin/hocvien?kq=0&mes=Lỗi xác nhận đối tượng !!!\");\n              return _context2.abrupt(\"return\");\n\n            case 5:\n              _context2.prev = 5;\n              _context2.next = 8;\n              return _regenerator[\"default\"].awrap(_dangkyService[\"default\"][\"delete\"](id));\n\n            case 8:\n              Xoa = _context2.sent;\n\n              if (Xoa) {\n                res.redirect(\"/admin/hocvien?kq=1&mes=Xóa Thành Công !!!\");\n              } else {\n                res.redirect(\"/admin/hocvien?kq=0&mes=Có Lỗi Xảy Ra !!!\");\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 13:\n              _context2.prev = 13;\n              _context2.t0 = _context2[\"catch\"](5);\n              return _context2.abrupt(\"return\", _context2.t0);\n\n            case 16:\n              _context2.next = 19;\n              break;\n\n            case 18:\n              return _context2.abrupt(\"return\", res.redirect('/'));\n\n            case 19:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[5, 13]]);\n    }\n  }, {\n    key: \"add\",\n    value: function add(req, res) {\n      var _req$body, thanhtoan, email, tenkhachhang, trangthai, data, created;\n\n      return _regenerator[\"default\"].async(function add$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _req$body = req.body, thanhtoan = _req$body.thanhtoan, email = _req$body.email, tenkhachhang = _req$body.tenkhachhang;\n\n              if (thanhtoan == \"\") {\n                thanhtoan = 0;\n              }\n\n              trangthai = 1;\n              _context3.next = 5;\n              return _regenerator[\"default\"].awrap((0, _nodemailer[\"default\"])(email, tenkhachhang));\n\n            case 5:\n              _context3.next = 7;\n              return _regenerator[\"default\"].awrap(_objectSpread({}, req.body, {\n                thanhtoan: thanhtoan,\n                trangthai: trangthai\n              }));\n\n            case 7:\n              data = _context3.sent;\n              _context3.prev = 8;\n              _context3.next = 11;\n              return _regenerator[\"default\"].awrap(_dangkyService[\"default\"].add(data));\n\n            case 11:\n              created = _context3.sent;\n\n              if (created == null) {\n                res.redirect(\"/admin/hocvien?kq=0&mes=Thêm Không Thành Công !!!\");\n              } else {\n                res.redirect(\"/admin/hocvien?kq=1&mes=Thêm Thành Công !!!\");\n              }\n\n              _context3.next = 18;\n              break;\n\n            case 15:\n              _context3.prev = 15;\n              _context3.t0 = _context3[\"catch\"](8);\n              return _context3.abrupt(\"return\", _context3.t0);\n\n            case 18:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[8, 15]]);\n    }\n  }, {\n    key: \"update\",\n    value: function update(req, res) {\n      var thanhtoan, altered, id, update;\n      return _regenerator[\"default\"].async(function update$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              thanhtoan = req.body.thanhtoan;\n\n              if (thanhtoan == \"\") {\n                thanhtoan = 0;\n              }\n\n              _context4.next = 4;\n              return _regenerator[\"default\"].awrap(_objectSpread({}, req.body, {\n                thanhtoan: thanhtoan\n              }));\n\n            case 4:\n              altered = _context4.sent;\n              id = req.params.id;\n              _context4.prev = 6;\n              _context4.next = 9;\n              return _regenerator[\"default\"].awrap(_dangkyService[\"default\"].Update(id, altered));\n\n            case 9:\n              update = _context4.sent;\n\n              if (!update) {\n                res.redirect(\"/admin/hocvien?kq=0&mes=Sửa Không Thành Công !!!\");\n              } else {\n                res.redirect(\"/admin/hocvien?kq=1&mes=Sửa Thành Công !!!\");\n              }\n\n              res.redirect(\"/admin/hocvien\");\n              _context4.next = 17;\n              break;\n\n            case 14:\n              _context4.prev = 14;\n              _context4.t0 = _context4[\"catch\"](6);\n              return _context4.abrupt(\"return\", _context4.t0);\n\n            case 17:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[6, 14]]);\n    }\n  }]);\n  return dangkyController;\n}();\n\nvar _default = dangkyController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "hocVienController.js"
      ],
      "names": [
        "dangkyController",
        "req",
        "res",
        "session",
        "user",
        "quyenhang",
        "dangkyService",
        "getAllHV",
        "data1",
        "data",
        "lopHocService",
        "getsapmo",
        "lophoc",
        "length",
        "render",
        "date",
        "message",
        "redirect",
        "id",
        "params",
        "Number",
        "Xoa",
        "body",
        "thanhtoan",
        "email",
        "tenkhachhang",
        "trangthai",
        "add",
        "created",
        "altered",
        "Update",
        "update"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;IAEMA,gB;;;;;;;;;2BACgBC,G,EAAKC,G;;;;;;oBACpBD,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,OAA9B,IAAyCJ,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,W;;;;;;AAElED,cAAAA,I,GAAOH,GAAG,CAACE,OAAJ,CAAYC,I;;mDACLE,0BAAcC,QAAd,E;;;AAAdC,cAAAA,K;AACFC,cAAAA,I,GAAOD,KAAK,CAAC,CAAD,C;;mDACKE,0BAAcC,QAAd,E;;;AAAfC,cAAAA,M;;AACN,kBAAIH,IAAI,CAACI,MAAL,GAAc,CAAlB,EAAqB;AACnBX,gBAAAA,GAAG,CAACY,MAAJ,CAAW,wCAAX,EAAqD;AACnDL,kBAAAA,IAAI,EAAJA,IADmD;AAC7CL,kBAAAA,IAAI,EAAJA,IAD6C;AAEnDQ,kBAAAA,MAAM,EAANA,MAFmD;AAGnDG,kBAAAA,IAAI,EAAJA,iBAHmD;AAInDC,kBAAAA,OAAO,EAAE;AAJ0C,iBAArD;AAMD,eAPD,MAOO;AACLd,gBAAAA,GAAG,CAACY,MAAJ,CAAW,wCAAX,EAAqD;AACnDL,kBAAAA,IAAI,EAAJA,IADmD;AAC7CL,kBAAAA,IAAI,EAAJA,IAD6C;AAEnDQ,kBAAAA,MAAM,EAANA,MAFmD;AAGnDG,kBAAAA,IAAI,EAAJA,iBAHmD;AAInDC,kBAAAA,OAAO,EAAE;AAJ0C,iBAArD;AAMD;;;;;;;;;;;;;;;+CAISd,GAAG,CAACe,QAAJ,CAAa,GAAb,C;;;;;;;;;;;2BAGMhB,G,EAAKC,G;;;;;;oBACpBD,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,OAA9B,IAAyCJ,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,W;;;;;AACpEa,cAAAA,E,GAAOjB,GAAG,CAACkB,M,CAAXD,E;;kBACDE,MAAM,CAACF,EAAD,C;;;;;AACThB,cAAAA,GAAG,CAACe,QAAJ,CAAa,oDAAb;;;;;;mDAIgBX,oCAAqBY,EAArB,C;;;AAAZG,cAAAA,G;;AACJ,kBAAIA,GAAJ,EAAS;AACPnB,gBAAAA,GAAG,CAACe,QAAJ,CAAa,4CAAb;AACD,eAFD,MAEO;AACLf,gBAAAA,GAAG,CAACe,QAAJ,CAAa,2CAAb;AACD;;;;;;;;;;;;;;gDAKSf,GAAG,CAACe,QAAJ,CAAa,GAAb,C;;;;;;;;;;;wBAGGhB,G,EAAKC,G;;;;;;;0BACqBD,GAAG,CAACqB,I,EAAvCC,S,aAAAA,S,EAAWC,K,aAAAA,K,EAAQC,Y,aAAAA,Y;;AACzB,kBAAIF,SAAS,IAAI,EAAjB,EAAqB;AACnBA,gBAAAA,SAAS,GAAG,CAAZ;AACD;;AACGG,cAAAA,S,GAAY,C;;mDACV,4BAAKF,KAAL,EAAWC,YAAX,C;;;;qEACgBxB,GAAG,CAACqB,I;AAAMC,gBAAAA,SAAS,EAATA,S;AAAWG,gBAAAA,SAAS,EAATA;;;;AAAvCjB,cAAAA,I;;;mDAEoBH,0BAAcqB,GAAd,CAAkBlB,IAAlB,C;;;AAAhBmB,cAAAA,O;;AAEN,kBAAIA,OAAO,IAAI,IAAf,EAAqB;AACnB1B,gBAAAA,GAAG,CAACe,QAAJ,CAAa,mDAAb;AACD,eAFD,MAEO;AACLf,gBAAAA,GAAG,CAACe,QAAJ,CAAa,6CAAb;AACD;;;;;;;;;;;;;;;;;;;2BAMehB,G,EAAKC,G;;;;;;AACnBqB,cAAAA,S,GAAYtB,GAAG,CAACqB,IAAJ,CAASC,S;;AACzB,kBAAIA,SAAS,IAAI,EAAjB,EAAqB;AACnBA,gBAAAA,SAAS,GAAG,CAAZ;AACD;;;qEACwBtB,GAAG,CAACqB,I;AAAMC,gBAAAA,SAAS,EAATA;;;;AAA/BM,cAAAA,O;AACIX,cAAAA,E,GAAOjB,GAAG,CAACkB,M,CAAXD,E;;;mDAEeZ,0BAAcwB,MAAd,CAAqBZ,EAArB,EAAyBW,OAAzB,C;;;AAAfE,cAAAA,M;;AACN,kBAAI,CAACA,MAAL,EAAa;AACX7B,gBAAAA,GAAG,CAACe,QAAJ,CAAa,kDAAb;AACD,eAFD,MAEO;AACLf,gBAAAA,GAAG,CAACe,QAAJ,CAAa,4CAAb;AACD;;AACDf,cAAAA,GAAG,CAACe,QAAJ,CAAa,gBAAb;;;;;;;;;;;;;;;;;;;;eASSjB,gB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
      "sourcesContent": [
        "import date from \"s-date\";\r\nimport mail from \"../../helpers/nodemailer\"\r\nimport dangkyService from \"../services/dangkyService\";\r\nimport lopHocService from \"../services/lopHocService\";\r\n\r\nclass dangkyController {\r\n  static async getAll(req, res) {     \r\n    if(req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\"){\r\n    try {\r\n      const user = req.session.user\r\n      const data1 = await dangkyService.getAllHV();\r\n      var data = data1[0];      \r\n      const lophoc = await lopHocService.getsapmo();\r\n      if (data.length > 0) {\r\n        res.render(\"../views/admin/hocvien/listhocvien.ejs\", {\r\n          data, user,\r\n          lophoc,\r\n          date,\r\n          message: 1\r\n        });\r\n      } else {\r\n        res.render(\"../views/admin/hocvien/listhocvien.ejs\", {\r\n          data, user,\r\n          lophoc,\r\n          date,\r\n          message: 0\r\n        });\r\n      }\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }else{ return res.redirect('/') }\r\n  }\r\n\r\n  static async Delete(req, res) {    \r\n    if(req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\" ){\r\n    let { id } = req.params;\r\n    if (!Number(id)) {\r\n      res.redirect(\"/admin/hocvien?kq=0&mes=Lỗi xác nhận đối tượng !!!\");\r\n      return; //util.send(res);\r\n    }\r\n    try {\r\n      let Xoa = await dangkyService.delete(id);\r\n      if (Xoa) {\r\n        res.redirect(\"/admin/hocvien?kq=1&mes=Xóa Thành Công !!!\");\r\n      } else {\r\n        res.redirect(\"/admin/hocvien?kq=0&mes=Có Lỗi Xảy Ra !!!\");\r\n      }\r\n      return;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }else{ return res.redirect('/') }\r\n  }\r\n\r\n  static async add(req, res) {\r\n    let { thanhtoan, email , tenkhachhang} = req.body;\r\n    if (thanhtoan == \"\") {\r\n      thanhtoan = 0;\r\n    }\r\n    let trangthai = 1     \r\n    await mail(email,tenkhachhang);\r\n    let data = await { ...req.body, thanhtoan ,trangthai};\r\n    try {\r\n      const created = await dangkyService.add(data);\r\n\r\n      if (created == null) {\r\n        res.redirect(\"/admin/hocvien?kq=0&mes=Thêm Không Thành Công !!!\");\r\n      } else {\r\n        res.redirect(\"/admin/hocvien?kq=1&mes=Thêm Thành Công !!!\");\r\n      }\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  static async update(req, res) {\r\n    let thanhtoan = req.body.thanhtoan;\r\n    if (thanhtoan == \"\") {\r\n      thanhtoan = 0;\r\n    }\r\n    let altered = await { ...req.body, thanhtoan };\r\n    const { id } = req.params;\r\n    try {\r\n      const update = await dangkyService.Update(id, altered);\r\n      if (!update) {\r\n        res.redirect(\"/admin/hocvien?kq=0&mes=Sửa Không Thành Công !!!\");\r\n      } else {\r\n        res.redirect(\"/admin/hocvien?kq=1&mes=Sửa Thành Công !!!\");\r\n      }\r\n      res.redirect(\"/admin/hocvien\");\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default dangkyController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1584803385849
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\\\\lopHocRoute.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\lopHocRoute.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\lopHocRoute.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\lopHocRoute.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
        "sourceFileName": "lopHocRoute.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _express = require(\"express\");\n\nvar _lopHocController = _interopRequireDefault(require(\"../controllers/lopHocController\"));\n\nvar router = (0, _express.Router)();\nrouter.route(\"/\").get(_lopHocController[\"default\"].getAll).post(_lopHocController[\"default\"].add);\nrouter.route(\"/dem/:trangthai\").get(_lopHocController[\"default\"].get1lop);\nrouter.route(\"/:id\").post(_lopHocController[\"default\"].update).get(_lopHocController[\"default\"].Delete);\nrouter.route(\"/hocvien/:id\").get(_lopHocController[\"default\"].getAllhocvien);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvcEhvY1JvdXRlLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsInJvdXRlIiwiZ2V0IiwibG9wSG9jQ29udHJvbGxlciIsImdldEFsbCIsInBvc3QiLCJhZGQiLCJnZXQxbG9wIiwidXBkYXRlIiwiRGVsZXRlIiwiZ2V0QWxsaG9jdmllbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFFQTs7QUFFQSxJQUFNQSxNQUFNLEdBQUcsc0JBQWY7QUFFQUEsTUFBTSxDQUNIQyxLQURILENBQ1MsR0FEVCxFQUVHQyxHQUZILENBRU9DLDZCQUFpQkMsTUFGeEIsRUFHR0MsSUFISCxDQUdRRiw2QkFBaUJHLEdBSHpCO0FBS0VOLE1BQU0sQ0FDTEMsS0FERCxDQUNPLGlCQURQLEVBRUNDLEdBRkQsQ0FFS0MsNkJBQWlCSSxPQUZ0QjtBQU9GUCxNQUFNLENBQ0hDLEtBREgsQ0FDUyxNQURULEVBRUdJLElBRkgsQ0FFUUYsNkJBQWlCSyxNQUZ6QixFQUdHTixHQUhILENBR09DLDZCQUFpQk0sTUFIeEI7QUFNRVQsTUFBTSxDQUNMQyxLQURELENBQ08sY0FEUCxFQUVDQyxHQUZELENBRUtDLDZCQUFpQk8sYUFGdEI7QUFHRkMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCWixNQUFqQiIsInNvdXJjZVJvb3QiOiJEOlxcTHVhblZhblxcTHVhblZhbkQyXFx0cnVuZ3RhbV9sYW40XFxhcHBzXFxyb3V0ZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyIH0gZnJvbSBcImV4cHJlc3NcIjtcclxuXHJcbmltcG9ydCBsb3BIb2NDb250cm9sbGVyIGZyb20gXCIuLi9jb250cm9sbGVycy9sb3BIb2NDb250cm9sbGVyXCI7XHJcblxyXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKTtcclxuXHJcbnJvdXRlclxyXG4gIC5yb3V0ZShcIi9cIilcclxuICAuZ2V0KGxvcEhvY0NvbnRyb2xsZXIuZ2V0QWxsKVxyXG4gIC5wb3N0KGxvcEhvY0NvbnRyb2xsZXIuYWRkKTtcclxuXHJcbiAgcm91dGVyXHJcbiAgLnJvdXRlKFwiL2RlbS86dHJhbmd0aGFpXCIpXHJcbiAgLmdldChsb3BIb2NDb250cm9sbGVyLmdldDFsb3ApXHJcbiBcclxuXHJcbiAgXHJcblxyXG5yb3V0ZXJcclxuICAucm91dGUoXCIvOmlkXCIpXHJcbiAgLnBvc3QobG9wSG9jQ29udHJvbGxlci51cGRhdGUpXHJcbiAgLmdldChsb3BIb2NDb250cm9sbGVyLkRlbGV0ZSk7XHJcblxyXG5cclxuICByb3V0ZXJcclxuICAucm91dGUoXCIvaG9jdmllbi86aWRcIilcclxuICAuZ2V0KGxvcEhvY0NvbnRyb2xsZXIuZ2V0QWxsaG9jdmllbilcclxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "lopHocRoute.js"
      ],
      "names": [
        "router",
        "route",
        "get",
        "lopHocController",
        "getAll",
        "post",
        "add",
        "get1lop",
        "update",
        "Delete",
        "getAllhocvien",
        "module",
        "exports"
      ],
      "mappings": ";;;;AAAA;;AAEA;;AAEA,IAAMA,MAAM,GAAG,sBAAf;AAEAA,MAAM,CACHC,KADH,CACS,GADT,EAEGC,GAFH,CAEOC,6BAAiBC,MAFxB,EAGGC,IAHH,CAGQF,6BAAiBG,GAHzB;AAKEN,MAAM,CACLC,KADD,CACO,iBADP,EAECC,GAFD,CAEKC,6BAAiBI,OAFtB;AAOFP,MAAM,CACHC,KADH,CACS,MADT,EAEGI,IAFH,CAEQF,6BAAiBK,MAFzB,EAGGN,GAHH,CAGOC,6BAAiBM,MAHxB;AAMET,MAAM,CACLC,KADD,CACO,cADP,EAECC,GAFD,CAEKC,6BAAiBO,aAFtB;AAGFC,MAAM,CAACC,OAAP,GAAiBZ,MAAjB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
      "sourcesContent": [
        "import { Router } from \"express\";\r\n\r\nimport lopHocController from \"../controllers/lopHocController\";\r\n\r\nconst router = Router();\r\n\r\nrouter\r\n  .route(\"/\")\r\n  .get(lopHocController.getAll)\r\n  .post(lopHocController.add);\r\n\r\n  router\r\n  .route(\"/dem/:trangthai\")\r\n  .get(lopHocController.get1lop)\r\n \r\n\r\n  \r\n\r\nrouter\r\n  .route(\"/:id\")\r\n  .post(lopHocController.update)\r\n  .get(lopHocController.Delete);\r\n\r\n\r\n  router\r\n  .route(\"/hocvien/:id\")\r\n  .get(lopHocController.getAllhocvien)\r\nmodule.exports = router;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1583675818812
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\\\\lopHocController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\lopHocController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\lopHocController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\lopHocController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
        "sourceFileName": "lopHocController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _sDate = _interopRequireDefault(require(\"s-date\"));\n\nvar _lopHocService = _interopRequireDefault(require(\"../services/lopHocService\"));\n\nvar _khoaHocService = _interopRequireDefault(require(\"../services/khoaHocService\"));\n\nvar _giangVienService = _interopRequireDefault(require(\"../services/giangVienService\"));\n\nvar _dangkyService = _interopRequireDefault(require(\"../services/dangkyService\"));\n\nvar _phongHocService = _interopRequireDefault(require(\"../services/phongHocService\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// trang thai 0 hoàn thành , 1 sáp khai giảng , 2 đang học , 3 đang chờ\nvar lophocController =\n/*#__PURE__*/\nfunction () {\n  function lophocController() {\n    (0, _classCallCheck2[\"default\"])(this, lophocController);\n  }\n\n  (0, _createClass2[\"default\"])(lophocController, null, [{\n    key: \"getAll\",\n    value: function getAll(req, res) {\n      var user, trangthai, data1, khoahoc, phonghoc, giangvien, data;\n      return _regenerator[\"default\"].async(function getAll$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\")) {\n                _context.next = 26;\n                break;\n              }\n\n              _context.prev = 1;\n              user = req.session.user;\n              trangthai = 1;\n              _context.next = 6;\n              return _regenerator[\"default\"].awrap(_lopHocService[\"default\"].getAll(trangthai));\n\n            case 6:\n              data1 = _context.sent;\n              _context.next = 9;\n              return _regenerator[\"default\"].awrap(_khoaHocService[\"default\"].getKH());\n\n            case 9:\n              khoahoc = _context.sent;\n              _context.next = 12;\n              return _regenerator[\"default\"].awrap(_phongHocService[\"default\"].getsudung());\n\n            case 12:\n              phonghoc = _context.sent;\n              _context.next = 15;\n              return _regenerator[\"default\"].awrap(_giangVienService[\"default\"].getcolam());\n\n            case 15:\n              giangvien = _context.sent;\n              data = data1[0];\n\n              if (data.length > 0) {\n                res.render(\"../views/admin/lophoc/listlophoc.ejs\", {\n                  data: data,\n                  user: user,\n                  trangthai: trangthai,\n                  date: _sDate[\"default\"],\n                  phonghoc: phonghoc,\n                  khoahoc: khoahoc,\n                  giangvien: giangvien\n                });\n              } else {\n                res.render(\"../views/admin/lophoc/listlophoc.ejs\", {\n                  data: data,\n                  user: user,\n                  date: _sDate[\"default\"],\n                  trangthai: trangthai,\n                  khoahoc: khoahoc,\n                  giangvien: giangvien,\n                  phonghoc: phonghoc,\n                  message: \"Khong co hoc vien nao\"\n                });\n              }\n\n              return _context.abrupt(\"return\", 0);\n\n            case 21:\n              _context.prev = 21;\n              _context.t0 = _context[\"catch\"](1);\n              return _context.abrupt(\"return\", _context.t0);\n\n            case 24:\n              _context.next = 27;\n              break;\n\n            case 26:\n              return _context.abrupt(\"return\", res.redirect(\"/\"));\n\n            case 27:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 21]]);\n    }\n  }, {\n    key: \"get1lop\",\n    value: function get1lop(req, res) {\n      var user, trangthai, data1, khoahoc, phonghoc, giangvien, data;\n      return _regenerator[\"default\"].async(function get1lop$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\")) {\n                _context2.next = 26;\n                break;\n              }\n\n              _context2.prev = 1;\n              user = req.session.user;\n              trangthai = req.params.trangthai;\n              _context2.next = 6;\n              return _regenerator[\"default\"].awrap(_lopHocService[\"default\"].get1lop(trangthai));\n\n            case 6:\n              data1 = _context2.sent;\n              _context2.next = 9;\n              return _regenerator[\"default\"].awrap(_khoaHocService[\"default\"].getAll());\n\n            case 9:\n              khoahoc = _context2.sent;\n              _context2.next = 12;\n              return _regenerator[\"default\"].awrap(_phongHocService[\"default\"].getsudung());\n\n            case 12:\n              phonghoc = _context2.sent;\n              _context2.next = 15;\n              return _regenerator[\"default\"].awrap(_giangVienService[\"default\"].getcolam());\n\n            case 15:\n              giangvien = _context2.sent;\n              data = data1[0];\n\n              if (data.length > 0) {\n                res.render(\"../views/admin/lophoc/listlophoc.ejs\", {\n                  data: data,\n                  user: user,\n                  phonghoc: phonghoc,\n                  trangthai: trangthai,\n                  date: _sDate[\"default\"],\n                  khoahoc: khoahoc,\n                  giangvien: giangvien\n                });\n              } else {\n                res.render(\"../views/admin/lophoc/listlophoc.ejs\", {\n                  data: data,\n                  user: user,\n                  date: _sDate[\"default\"],\n                  phonghoc: phonghoc,\n                  trangthai: trangthai,\n                  khoahoc: khoahoc,\n                  giangvien: giangvien,\n                  message: \"Khong co hoc vien nao\"\n                });\n              }\n\n              return _context2.abrupt(\"return\", 0);\n\n            case 21:\n              _context2.prev = 21;\n              _context2.t0 = _context2[\"catch\"](1);\n              return _context2.abrupt(\"return\", _context2.t0);\n\n            case 24:\n              _context2.next = 27;\n              break;\n\n            case 26:\n              return _context2.abrupt(\"return\", res.redirect(\"/\"));\n\n            case 27:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[1, 21]]);\n    }\n  }, {\n    key: \"Delete\",\n    value: function Delete(req, res) {\n      var id, Xoa;\n      return _regenerator[\"default\"].async(function Delete$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\")) {\n                _context3.next = 16;\n                break;\n              }\n\n              id = req.params.id;\n\n              if (!Number(id)) {\n                console.log(\"ID not Number !!!\");\n                res.redirect(\"/admin/lophoc\");\n              }\n\n              _context3.prev = 3;\n              _context3.next = 6;\n              return _regenerator[\"default\"].awrap(_lopHocService[\"default\"][\"delete\"](id));\n\n            case 6:\n              Xoa = _context3.sent;\n\n              if (Xoa) {\n                res.status(204).redirect(\"/admin/lophoc\");\n              } else {\n                res.redirect(\"/admin/lophoc\");\n              }\n\n              return _context3.abrupt(\"return\");\n\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](3);\n              return _context3.abrupt(\"return\", _context3.t0);\n\n            case 14:\n              _context3.next = 17;\n              break;\n\n            case 16:\n              return _context3.abrupt(\"return\", res.redirect(\"/\"));\n\n            case 17:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[3, 11]]);\n    }\n  }, {\n    key: \"add\",\n    value: function add(req, res) {\n      var trangthai, data, created;\n      return _regenerator[\"default\"].async(function add$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              trangthai = 3;\n              data = _objectSpread({}, req.body, {\n                trangthai: trangthai\n              });\n              _context4.prev = 2;\n              _context4.next = 5;\n              return _regenerator[\"default\"].awrap(_lopHocService[\"default\"].add(data));\n\n            case 5:\n              created = _context4.sent;\n              _context4.t0 = created;\n              _context4.next = _context4.t0 === 0 ? 9 : _context4.t0 === 1 ? 11 : 13;\n              break;\n\n            case 9:\n              res.redirect(\"/admin/lophoc/dem/3?kq=0&mes=Bị trùng lớp !\");\n              return _context4.abrupt(\"break\", 14);\n\n            case 11:\n              res.redirect(\"/admin/lophoc/dem/3?kq=0&mes=Không thêm được !\");\n              return _context4.abrupt(\"break\", 14);\n\n            case 13:\n              res.redirect(\"/admin/lophoc/dem/3?kq=1&mes=Thêm thành công !\");\n\n            case 14:\n              _context4.next = 19;\n              break;\n\n            case 16:\n              _context4.prev = 16;\n              _context4.t1 = _context4[\"catch\"](2);\n              return _context4.abrupt(\"return\", _context4.t1);\n\n            case 19:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[2, 16]]);\n    }\n  }, {\n    key: \"update\",\n    value: function update(req, res) {\n      var altered, id, update;\n      return _regenerator[\"default\"].async(function update$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              altered = req.body;\n              id = req.params.id;\n              _context5.prev = 2;\n              _context5.next = 5;\n              return _regenerator[\"default\"].awrap(_lopHocService[\"default\"].Update(id, altered));\n\n            case 5:\n              update = _context5.sent;\n\n              if (!update) {\n                res.redirect(\"/admin/lophoc?kq=0&mes=Cập nhật không thành công !!!\");\n              } else {\n                res.redirect(\"/admin/lophoc?kq=1&mes=Thành công !\");\n              }\n\n              return _context5.abrupt(\"return\");\n\n            case 10:\n              _context5.prev = 10;\n              _context5.t0 = _context5[\"catch\"](2);\n              return _context5.abrupt(\"return\", _context5.t0);\n\n            case 13:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[2, 10]]);\n    }\n  }, {\n    key: \"getAllhocvien\",\n    value: function getAllhocvien(req, res) {\n      var user, id, data, lophoc;\n      return _regenerator[\"default\"].async(function getAllhocvien$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              if (!(req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\")) {\n                _context6.next = 19;\n                break;\n              }\n\n              _context6.prev = 1;\n              user = req.session.user;\n              id = req.params.id;\n              _context6.next = 6;\n              return _regenerator[\"default\"].awrap(_dangkyService[\"default\"].getByIDLop(id));\n\n            case 6:\n              data = _context6.sent;\n              _context6.next = 9;\n              return _regenerator[\"default\"].awrap(_lopHocService[\"default\"].getByID(id));\n\n            case 9:\n              lophoc = _context6.sent;\n\n              if (data.length > 0) {\n                res.render(\"../views/admin/dangky/listdangky.ejs\", {\n                  data: data,\n                  user: user,\n                  date: _sDate[\"default\"],\n                  lophoc: lophoc\n                });\n              } else {\n                res.render(\"../views/admin/dangky/listdangky.ejs\", {\n                  data: data,\n                  user: user,\n                  lophoc: lophoc,\n                  date: _sDate[\"default\"],\n                  message: \"Khong co hoc vien nao\"\n                });\n              }\n\n              return _context6.abrupt(\"return\", 0);\n\n            case 14:\n              _context6.prev = 14;\n              _context6.t0 = _context6[\"catch\"](1);\n              return _context6.abrupt(\"return\", _context6.t0);\n\n            case 17:\n              _context6.next = 20;\n              break;\n\n            case 19:\n              return _context6.abrupt(\"return\", res.redirect(\"/\"));\n\n            case 20:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[1, 14]]);\n    }\n  }]);\n  return lophocController;\n}();\n\nvar _default = lophocController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "lopHocController.js"
      ],
      "names": [
        "lophocController",
        "req",
        "res",
        "session",
        "user",
        "quyenhang",
        "trangthai",
        "lopHocService",
        "getAll",
        "data1",
        "khoaHocService",
        "getKH",
        "khoahoc",
        "phongHocService",
        "getsudung",
        "phonghoc",
        "giangVienService",
        "getcolam",
        "giangvien",
        "data",
        "length",
        "render",
        "date",
        "message",
        "redirect",
        "params",
        "get1lop",
        "id",
        "Number",
        "console",
        "log",
        "Xoa",
        "status",
        "body",
        "add",
        "created",
        "altered",
        "Update",
        "update",
        "dangkyService",
        "getByIDLop",
        "getByID",
        "lophoc"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AACA;IACMA,gB;;;;;;;;;2BACgBC,G,EAAKC,G;;;;;;oBACnBD,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,OAA9B,IAAyCJ,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,W;;;;;;AAEjED,cAAAA,I,GAAOH,GAAG,CAACE,OAAJ,CAAYC,I;AACrBE,cAAAA,S,GAAY,C;;mDACIC,0BAAcC,MAAd,CAAqBF,SAArB,C;;;AAAdG,cAAAA,K;;mDACgBC,2BAAeC,KAAf,E;;;AAAhBC,cAAAA,O;;mDACiBC,4BAAgBC,SAAhB,E;;;AAAjBC,cAAAA,Q;;mDACkBC,6BAAiBC,QAAjB,E;;;AAAlBC,cAAAA,S;AACAC,cAAAA,I,GAAOV,KAAK,CAAC,CAAD,C;;AAClB,kBAAIU,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AACnBlB,gBAAAA,GAAG,CAACmB,MAAJ,CAAW,sCAAX,EAAmD;AACjDF,kBAAAA,IAAI,EAAJA,IADiD;AAC5Cf,kBAAAA,IAAI,EAAJA,IAD4C;AAEjDE,kBAAAA,SAAS,EAATA,SAFiD;AAGjDgB,kBAAAA,IAAI,EAAJA,iBAHiD;AAIjDP,kBAAAA,QAAQ,EAARA,QAJiD;AAKjDH,kBAAAA,OAAO,EAAPA,OALiD;AAMjDM,kBAAAA,SAAS,EAATA;AANiD,iBAAnD;AAQD,eATD,MASO;AACLhB,gBAAAA,GAAG,CAACmB,MAAJ,CAAW,sCAAX,EAAmD;AACjDF,kBAAAA,IAAI,EAAJA,IADiD;AAC5Cf,kBAAAA,IAAI,EAAJA,IAD4C;AAEjDkB,kBAAAA,IAAI,EAAJA,iBAFiD;AAGjDhB,kBAAAA,SAAS,EAATA,SAHiD;AAIjDM,kBAAAA,OAAO,EAAPA,OAJiD;AAKjDM,kBAAAA,SAAS,EAATA,SALiD;AAMjDH,kBAAAA,QAAQ,EAARA,QANiD;AAOjDQ,kBAAAA,OAAO,EAAE;AAPwC,iBAAnD;AASD;;+CACM,C;;;;;;;;;;;;+CAKFrB,GAAG,CAACsB,QAAJ,CAAa,GAAb,C;;;;;;;;;;;4BAGUvB,G,EAAKC,G;;;;;;oBACpBD,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,OAA9B,IAAyCJ,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,W;;;;;;AAEjED,cAAAA,I,GAAOH,GAAG,CAACE,OAAJ,CAAYC,I;AACrBE,cAAAA,S,GAAYL,GAAG,CAACwB,MAAJ,CAAWnB,S;;mDACPC,0BAAcmB,OAAd,CAAsBpB,SAAtB,C;;;AAAdG,cAAAA,K;;mDACgBC,2BAAeF,MAAf,E;;;AAAhBI,cAAAA,O;;mDACiBC,4BAAgBC,SAAhB,E;;;AAAjBC,cAAAA,Q;;mDACkBC,6BAAiBC,QAAjB,E;;;AAAlBC,cAAAA,S;AACAC,cAAAA,I,GAAOV,KAAK,CAAC,CAAD,C;;AAClB,kBAAIU,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AACnBlB,gBAAAA,GAAG,CAACmB,MAAJ,CAAW,sCAAX,EAAmD;AACjDF,kBAAAA,IAAI,EAAJA,IADiD;AAC3Cf,kBAAAA,IAAI,EAAJA,IAD2C;AAEjDW,kBAAAA,QAAQ,EAARA,QAFiD;AAGjDT,kBAAAA,SAAS,EAATA,SAHiD;AAIjDgB,kBAAAA,IAAI,EAAJA,iBAJiD;AAKjDV,kBAAAA,OAAO,EAAPA,OALiD;AAMjDM,kBAAAA,SAAS,EAATA;AANiD,iBAAnD;AAQD,eATD,MASO;AACLhB,gBAAAA,GAAG,CAACmB,MAAJ,CAAW,sCAAX,EAAmD;AACjDF,kBAAAA,IAAI,EAAJA,IADiD;AAC3Cf,kBAAAA,IAAI,EAAJA,IAD2C;AAEjDkB,kBAAAA,IAAI,EAAJA,iBAFiD;AAGjDP,kBAAAA,QAAQ,EAARA,QAHiD;AAIjDT,kBAAAA,SAAS,EAATA,SAJiD;AAKjDM,kBAAAA,OAAO,EAAPA,OALiD;AAMjDM,kBAAAA,SAAS,EAATA,SANiD;AAOjDK,kBAAAA,OAAO,EAAE;AAPwC,iBAAnD;AASD;;gDACM,C;;;;;;;;;;;;gDAKFrB,GAAG,CAACsB,QAAJ,CAAa,GAAb,C;;;;;;;;;;;2BAISvB,G,EAAKC,G;;;;;;oBACnBD,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,OAA9B,IAAyCJ,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,W;;;;;AACnEsB,cAAAA,E,GAAO1B,GAAG,CAACwB,M,CAAXE,E;;AACN,kBAAI,CAACC,MAAM,CAACD,EAAD,CAAX,EAAiB;AACfE,gBAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA5B,gBAAAA,GAAG,CAACsB,QAAJ,CAAa,eAAb;AACD;;;;mDAEiBjB,oCAAqBoB,EAArB,C;;;AAAZI,cAAAA,G;;AACJ,kBAAIA,GAAJ,EAAS;AACP7B,gBAAAA,GAAG,CAAC8B,MAAJ,CAAW,GAAX,EAAgBR,QAAhB,CAAyB,eAAzB;AACD,eAFD,MAEO;AACLtB,gBAAAA,GAAG,CAACsB,QAAJ,CAAa,eAAb;AACD;;;;;;;;;;;;;;gDAMItB,GAAG,CAACsB,QAAJ,CAAa,GAAb,C;;;;;;;;;;;wBAIMvB,G,EAAKC,G;;;;;;AAChBI,cAAAA,S,GAAY,C;AACZa,cAAAA,I,qBAAYlB,GAAG,CAACgC,I;AAAM3B,gBAAAA,SAAS,EAATA;;;;mDAGFC,0BAAc2B,GAAd,CAAkBf,IAAlB,C;;;AAAhBgB,cAAAA,O;6BACCA,O;gDACA,C,wBAGA,C;;;;AAFHjC,cAAAA,GAAG,CAACsB,QAAJ,CAAa,6CAAb;;;;AAGAtB,cAAAA,GAAG,CAACsB,QAAJ,CAAa,gDAAb;;;;AAGAtB,cAAAA,GAAG,CAACsB,QAAJ,CAAa,gDAAb;;;;;;;;;;;;;;;;;;;;2BAQYvB,G,EAAKC,G;;;;;;AACjBkC,cAAAA,O,GAAUnC,GAAG,CAACgC,I;AACZN,cAAAA,E,GAAO1B,GAAG,CAACwB,M,CAAXE,E;;;mDAEepB,0BAAc8B,MAAd,CAAqBV,EAArB,EAAyBS,OAAzB,C;;;AAAfE,cAAAA,M;;AACN,kBAAI,CAACA,MAAL,EAAa;AACXpC,gBAAAA,GAAG,CAACsB,QAAJ,CAAa,sDAAb;AACD,eAFD,MAEO;AAELtB,gBAAAA,GAAG,CAACsB,QAAJ,CAAa,qCAAb;AACD;;;;;;;;;;;;;;;;;;kCAOsBvB,G,EAAKC,G;;;;;;oBAC1BD,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,OAA9B,IAAyCJ,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,W;;;;;;AAEjED,cAAAA,I,GAAOH,GAAG,CAACE,OAAJ,CAAYC,I;AACjBuB,cAAAA,E,GAAO1B,GAAG,CAACwB,M,CAAXE,E;;mDACWY,0BAAcC,UAAd,CAAyBb,EAAzB,C;;;AAAbR,cAAAA,I;;mDAGeZ,0BAAckC,OAAd,CAAsBd,EAAtB,C;;;AAAfe,cAAAA,M;;AACN,kBAAIvB,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AACnBlB,gBAAAA,GAAG,CAACmB,MAAJ,CAAW,sCAAX,EAAmD;AACjDF,kBAAAA,IAAI,EAAJA,IADiD;AAC3Cf,kBAAAA,IAAI,EAAJA,IAD2C;AAEjDkB,kBAAAA,IAAI,EAAJA,iBAFiD;AAGjDoB,kBAAAA,MAAM,EAANA;AAHiD,iBAAnD;AAKD,eAND,MAMO;AACLxC,gBAAAA,GAAG,CAACmB,MAAJ,CAAW,sCAAX,EAAmD;AACjDF,kBAAAA,IAAI,EAAJA,IADiD;AAC3Cf,kBAAAA,IAAI,EAAJA,IAD2C;AAEjDsC,kBAAAA,MAAM,EAANA,MAFiD;AAGjDpB,kBAAAA,IAAI,EAAJA,iBAHiD;AAIjDC,kBAAAA,OAAO,EAAE;AAJwC,iBAAnD;AAMD;;gDACM,C;;;;;;;;;;;;gDAKFrB,GAAG,CAACsB,QAAJ,CAAa,GAAb,C;;;;;;;;;;;;;eAKExB,gB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
      "sourcesContent": [
        "import date from \"s-date\";\r\nimport lopHocService from \"../services/lopHocService\";\r\nimport khoaHocService from \"../services/khoaHocService\";\r\nimport giangVienService from \"../services/giangVienService\";\r\nimport dangkyService from \"../services/dangkyService\";\r\nimport phongHocService from \"../services/phongHocService\";\r\n// trang thai 0 hoàn thành , 1 sáp khai giảng , 2 đang học , 3 đang chờ\r\nclass lophocController {\r\n  static async getAll(req, res) {\r\n    if (req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\") {\r\n      try {\r\n        const user = req.session.user\r\n        let trangthai = 1;\r\n        const data1 = await lopHocService.getAll(trangthai);\r\n        const khoahoc = await khoaHocService.getKH();\r\n        const phonghoc = await phongHocService.getsudung();\r\n        const giangvien = await giangVienService.getcolam();\r\n        const data = data1[0];\r\n        if (data.length > 0) {\r\n          res.render(\"../views/admin/lophoc/listlophoc.ejs\", {\r\n            data,user,\r\n            trangthai,\r\n            date,\r\n            phonghoc,\r\n            khoahoc,\r\n            giangvien\r\n          });\r\n        } else {\r\n          res.render(\"../views/admin/lophoc/listlophoc.ejs\", {\r\n            data,user,\r\n            date,\r\n            trangthai,\r\n            khoahoc,\r\n            giangvien,\r\n            phonghoc,\r\n            message: \"Khong co hoc vien nao\"\r\n          });\r\n        }\r\n        return 0;\r\n      } catch (error) {\r\n        return error;\r\n      }\r\n    } else {\r\n      return res.redirect(\"/\");\r\n    }\r\n  }\r\n  static async get1lop(req, res) {\r\n    if (req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\") {\r\n      try {\r\n        const user = req.session.user\r\n        let trangthai = req.params.trangthai;\r\n        const data1 = await lopHocService.get1lop(trangthai);\r\n        const khoahoc = await khoaHocService.getAll();\r\n        const phonghoc = await phongHocService.getsudung();\r\n        const giangvien = await giangVienService.getcolam();\r\n        const data = data1[0];\r\n        if (data.length > 0) {         \r\n          res.render(\"../views/admin/lophoc/listlophoc.ejs\", {\r\n            data, user,\r\n            phonghoc,\r\n            trangthai,\r\n            date,\r\n            khoahoc,\r\n            giangvien\r\n          });\r\n        } else {\r\n          res.render(\"../views/admin/lophoc/listlophoc.ejs\", {\r\n            data, user,\r\n            date,\r\n            phonghoc,\r\n            trangthai,\r\n            khoahoc,\r\n            giangvien,\r\n            message: \"Khong co hoc vien nao\"\r\n          });\r\n        }\r\n        return 0;\r\n      } catch (error) {\r\n        return error;\r\n      }\r\n    } else {\r\n      return res.redirect(\"/\");\r\n    }\r\n  }\r\n\r\n  static async Delete(req, res) {\r\n    if (req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\") {\r\n      let { id } = req.params;\r\n      if (!Number(id)) {\r\n        console.log(\"ID not Number !!!\");\r\n        res.redirect(\"/admin/lophoc\");\r\n      }\r\n      try {\r\n        let Xoa = await lopHocService.delete(id);\r\n        if (Xoa) {\r\n          res.status(204).redirect(\"/admin/lophoc\");\r\n        } else {\r\n          res.redirect(\"/admin/lophoc\");\r\n        }\r\n        return;\r\n      } catch (error) {\r\n        return error;\r\n      }\r\n    } else {\r\n      return res.redirect(\"/\");\r\n    }\r\n  }\r\n\r\n  static async add(req, res) {\r\n    let trangthai = 3;\r\n    let data = { ...req.body, trangthai };\r\n\r\n    try {\r\n      const created = await lopHocService.add(data);     \r\n      switch(created) {\r\n        case 0:\r\n          res.redirect(\"/admin/lophoc/dem/3?kq=0&mes=Bị trùng lớp !\")\r\n          break;\r\n        case 1:\r\n          res.redirect(\"/admin/lophoc/dem/3?kq=0&mes=Không thêm được !\")\r\n          break;\r\n        default:\r\n          res.redirect(\"/admin/lophoc/dem/3?kq=1&mes=Thêm thành công !\")\r\n      }\r\n      \r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  static async update(req, res) {\r\n    const altered = req.body;\r\n    const { id } = req.params;   \r\n    try {      \r\n      const update = await lopHocService.Update(id, altered);     \r\n      if (!update) {\r\n        res.redirect(\"/admin/lophoc?kq=0&mes=Cập nhật không thành công !!!\");\r\n      } else {\r\n       \r\n        res.redirect(\"/admin/lophoc?kq=1&mes=Thành công !\");\r\n      }\r\n      return;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  static async getAllhocvien(req, res) {\r\n    if (req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\") {\r\n      try {\r\n        const user = req.session.user\r\n        const { id } = req.params;\r\n        const data = await dangkyService.getByIDLop(id);\r\n        //  console.log(data);\r\n\r\n        const lophoc = await lopHocService.getByID(id);\r\n        if (data.length > 0) {\r\n          res.render(\"../views/admin/dangky/listdangky.ejs\", {\r\n            data, user,\r\n            date,\r\n            lophoc\r\n          });\r\n        } else {\r\n          res.render(\"../views/admin/dangky/listdangky.ejs\", {\r\n            data, user,\r\n            lophoc,\r\n            date,\r\n            message: \"Khong co hoc vien nao\"\r\n          });\r\n        }\r\n        return 0;\r\n      } catch (error) {\r\n        return error;\r\n      }\r\n    } else {\r\n      return res.redirect(\"/\");\r\n    }\r\n  }\r\n}\r\n\r\nexport default lophocController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585664450926
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\services\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\services\\\\phongHocService.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services\\phongHocService.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services\\phongHocService.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services\\phongHocService.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services",
        "sourceFileName": "phongHocService.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _models = _interopRequireDefault(require(\"../../Model/models\"));\n\nvar phonghocService =\n/*#__PURE__*/\nfunction () {\n  function phonghocService() {\n    (0, _classCallCheck2[\"default\"])(this, phonghocService);\n  }\n\n  (0, _createClass2[\"default\"])(phonghocService, null, [{\n    key: \"getAll\",\n    value: function getAll() {\n      return _regenerator[\"default\"].async(function getAll$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].phonghoc.findAll());\n\n            case 3:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              throw _context.t0;\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    } // = sd cho thoi khoa bieu ========\n\n  }, {\n    key: \"getsudung\",\n    value: function getsudung() {\n      return _regenerator[\"default\"].async(function getsudung$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].phonghoc.findAll({\n                where: {\n                  trangthai: 1\n                }\n              }));\n\n            case 3:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              throw _context2.t0;\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"getByID\",\n    value: function getByID(id) {\n      return _regenerator[\"default\"].async(function getByID$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].phonghoc.findAll({\n                where: {\n                  id: id\n                }\n              }));\n\n            case 3:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 6:\n              _context3.prev = 6;\n              _context3.t0 = _context3[\"catch\"](0);\n              throw _context3.t0;\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(id) {\n      return _regenerator[\"default\"].async(function _delete$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].phonghoc.destroy({\n                where: {\n                  id: id\n                }\n              }));\n\n            case 3:\n              return _context4.abrupt(\"return\", _context4.sent);\n\n            case 6:\n              _context4.prev = 6;\n              _context4.t0 = _context4[\"catch\"](0);\n              throw _context4.t0;\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"Save\",\n    value: function Save(data) {\n      return _regenerator[\"default\"].async(function Save$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].phonghoc.create(data));\n\n            case 3:\n              return _context5.abrupt(\"return\", _context5.sent);\n\n            case 6:\n              _context5.prev = 6;\n              _context5.t0 = _context5[\"catch\"](0);\n              throw _context5.t0;\n\n            case 9:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"Update\",\n    value: function Update(id, data) {\n      var tk;\n      return _regenerator[\"default\"].async(function Update$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].phonghoc.findOne({\n                where: {\n                  id: id\n                }\n              }));\n\n            case 3:\n              tk = _context6.sent;\n\n              if (!tk) {\n                _context6.next = 8;\n                break;\n              }\n\n              _context6.next = 7;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].phonghoc.update(data, {\n                where: {\n                  id: id\n                }\n              }));\n\n            case 7:\n              return _context6.abrupt(\"return\", data);\n\n            case 8:\n              return _context6.abrupt(\"return\", null);\n\n            case 11:\n              _context6.prev = 11;\n              _context6.t0 = _context6[\"catch\"](0);\n              throw _context6.t0;\n\n            case 14:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[0, 11]]);\n    }\n  }, {\n    key: \"add\",\n    value: function add(data) {\n      var tenphonghoc, tk;\n      return _regenerator[\"default\"].async(function add$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              tenphonghoc = data.tenphonghoc;\n              _context7.next = 4;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].phonghoc.findOne({\n                where: {\n                  tenphonghoc: tenphonghoc\n                }\n              }));\n\n            case 4:\n              tk = _context7.sent;\n\n              if (!tk) {\n                _context7.next = 9;\n                break;\n              }\n\n              return _context7.abrupt(\"return\", null);\n\n            case 9:\n              _context7.next = 11;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].phonghoc.create(data));\n\n            case 11:\n              return _context7.abrupt(\"return\", data);\n\n            case 12:\n              _context7.next = 17;\n              break;\n\n            case 14:\n              _context7.prev = 14;\n              _context7.t0 = _context7[\"catch\"](0);\n              throw _context7.t0;\n\n            case 17:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, [[0, 14]]);\n    }\n  }]);\n  return phonghocService;\n}();\n\nvar _default = phonghocService;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBob25nSG9jU2VydmljZS5qcyJdLCJuYW1lcyI6WyJwaG9uZ2hvY1NlcnZpY2UiLCJkYXRhYmFzZSIsInBob25naG9jIiwiZmluZEFsbCIsIndoZXJlIiwidHJhbmd0aGFpIiwiaWQiLCJkZXN0cm95IiwiZGF0YSIsImNyZWF0ZSIsImZpbmRPbmUiLCJ0ayIsInVwZGF0ZSIsInRlbnBob25naG9jIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFDQTs7SUFFTUEsZTs7Ozs7Ozs7Ozs7Ozs7OzttREFHYUMsbUJBQVNDLFFBQVQsQ0FBa0JDLE9BQWxCLEU7Ozs7Ozs7Ozs7Ozs7Ozs7TUFLakI7Ozs7Ozs7Ozs7O21EQUdpQkYsbUJBQVNDLFFBQVQsQ0FBa0JDLE9BQWxCLENBQTBCO0FBQ3JDQyxnQkFBQUEsS0FBSyxFQUFFO0FBQUNDLGtCQUFBQSxTQUFTLEVBQUU7QUFBWjtBQUQ4QixlQUExQixDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OzRCQU9JQyxFOzs7Ozs7O21EQUVBTCxtQkFBU0MsUUFBVCxDQUFrQkMsT0FBbEIsQ0FBMEI7QUFDbkNDLGdCQUFBQSxLQUFLLEVBQUU7QUFBRUUsa0JBQUFBLEVBQUUsRUFBRkE7QUFBRjtBQUQ0QixlQUExQixDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OzRCQVFEQSxFOzs7Ozs7O21EQUVDTCxtQkFBU0MsUUFBVCxDQUFrQkssT0FBbEIsQ0FBMEI7QUFDbkNILGdCQUFBQSxLQUFLLEVBQUM7QUFBRUUsa0JBQUFBLEVBQUUsRUFBRkE7QUFBRjtBQUQ2QixlQUExQixDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O3lCQU9IRSxJOzs7Ozs7O21EQUVHUCxtQkFBU0MsUUFBVCxDQUFrQk8sTUFBbEIsQ0FBeUJELElBQXpCLEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MkJBTURGLEUsRUFBSUUsSTs7Ozs7Ozs7bURBRURQLG1CQUFTQyxRQUFULENBQWtCUSxPQUFsQixDQUEwQjtBQUNyQ04sZ0JBQUFBLEtBQUssRUFBRTtBQUFFRSxrQkFBQUEsRUFBRSxFQUFGQTtBQUFGO0FBRDhCLGVBQTFCLEM7OztBQUFkSyxjQUFBQSxFOzttQkFHRUEsRTs7Ozs7O21EQUNPVixtQkFBU0MsUUFBVCxDQUFrQlUsTUFBbEIsQ0FBeUJKLElBQXpCLEVBQThCO0FBQ25DSixnQkFBQUEsS0FBSyxFQUFHO0FBQUVFLGtCQUFBQSxFQUFFLEVBQUZBO0FBQUY7QUFEMkIsZUFBOUIsQzs7O2dEQUdBRSxJOzs7Z0RBRUgsSTs7Ozs7Ozs7Ozs7Ozs7Ozt3QkFTRUEsSTs7Ozs7OztBQUVQSyxjQUFBQSxXLEdBQWVMLElBQUksQ0FBQ0ssVzs7bURBQ1haLG1CQUFTQyxRQUFULENBQWtCUSxPQUFsQixDQUEwQjtBQUN2Q04sZ0JBQUFBLEtBQUssRUFBRTtBQUFFUyxrQkFBQUEsV0FBVyxFQUFYQTtBQUFGO0FBRGdDLGVBQTFCLEM7OztBQUFYRixjQUFBQSxFOzttQkFHRkEsRTs7Ozs7Z0RBQ0ssSTs7OzttREFFQ1YsbUJBQVNDLFFBQVQsQ0FBa0JPLE1BQWxCLENBQXlCRCxJQUF6QixDOzs7Z0RBQ0NBLEk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7ZUFXQVIsZSIsInNvdXJjZVJvb3QiOiJEOlxcTHVhblZhblxcTHVhblZhbkQyXFx0cnVuZ3RhbV9sYW40XFxhcHBzXFxzZXJ2aWNlcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5pbXBvcnQgZGF0YWJhc2UgZnJvbSAnLi4vLi4vTW9kZWwvbW9kZWxzJztcclxuXHJcbmNsYXNzIHBob25naG9jU2VydmljZSB7XHJcbiAgc3RhdGljIGFzeW5jIGdldEFsbCgpIHtcclxuICAgIHRyeSB7ICAgICAgXHJcbiAgICAgIHJldHVybiBhd2FpdCBkYXRhYmFzZS5waG9uZ2hvYy5maW5kQWxsKCk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9XHJcbiAgLy8gPSBzZCBjaG8gdGhvaSBraG9hIGJpZXUgPT09PT09PT1cclxuICBzdGF0aWMgYXN5bmMgZ2V0c3VkdW5nKCkge1xyXG4gICAgdHJ5IHsgICAgICBcclxuICAgICAgcmV0dXJuIGF3YWl0IGRhdGFiYXNlLnBob25naG9jLmZpbmRBbGwoe1xyXG4gICAgICAgIHdoZXJlOiB7dHJhbmd0aGFpOiAxfVxyXG4gICAgICB9KTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG4gIH1cclxuICBzdGF0aWMgYXN5bmMgZ2V0QnlJRChpZCl7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgICByZXR1cm4gYXdhaXQgZGF0YWJhc2UucGhvbmdob2MuZmluZEFsbCh7XHJcbiAgICAgICAgICAgICAgd2hlcmU6IHsgaWQgfVxyXG4gICAgICAgICAgfSlcclxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgfVxyXG4gIH1cclxuXHJcbiAgc3RhdGljIGFzeW5jIGRlbGV0ZShpZCl7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgICByZXR1cm4gYXdhaXQgZGF0YWJhc2UucGhvbmdob2MuZGVzdHJveSh7XHJcbiAgICAgICAgICAgICAgd2hlcmU6eyBpZCB9XHJcbiAgICAgICAgICB9KVxyXG4gICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgIH1cclxuICB9XHJcbiAgc3RhdGljIGFzeW5jIFNhdmUoZGF0YSl7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgICByZXR1cm4gYXdhaXQgZGF0YWJhc2UucGhvbmdob2MuY3JlYXRlKGRhdGEpO1xyXG4gICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgdGhyb3cgZXJyb3JcclxuICAgICAgfVxyXG4gIH1cclxuXHJcbiAgc3RhdGljIGFzeW5jIFVwZGF0ZShpZCwgZGF0YSl7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICBsZXQgdGsgPSAgICBhd2FpdCBkYXRhYmFzZS5waG9uZ2hvYy5maW5kT25lKHtcclxuICAgICAgICAgICAgICB3aGVyZTogeyBpZCB9XHJcbiAgICAgICAgICB9KSAgICAgICAgIFxyXG4gICAgICAgICAgaWYodGspeyAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgYXdhaXQgZGF0YWJhc2UucGhvbmdob2MudXBkYXRlKGRhdGEse1xyXG4gICAgICAgICAgICAgICB3aGVyZSA6IHsgaWQgfVxyXG4gICAgICAgICAgICAgfSkgICAgICAgICAgICBcclxuICAgICAgICAgICAgIHJldHVybiBkYXRhXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICByZXR1cm4gbnVsbDtcclxuXHJcblxyXG4gICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgdGhyb3cgZXJyb3JcclxuICAgICAgfVxyXG4gIH1cclxuXHJcbiAgIFxyXG4gIHN0YXRpYyBhc3luYyBhZGQoZGF0YSkge1xyXG4gICAgdHJ5IHsgICAgXHJcbiAgICAgICAgbGV0IHRlbnBob25naG9jID0gIGRhdGEudGVucGhvbmdob2NcclxuICAgICAgbGV0IHRrID0gYXdhaXQgZGF0YWJhc2UucGhvbmdob2MuZmluZE9uZSh7XHJcbiAgICAgICAgd2hlcmU6IHsgdGVucGhvbmdob2MgfVxyXG4gICAgfSkgICAgICBcclxuICAgIGlmICh0aykge1xyXG4gICAgICByZXR1cm4gbnVsbFxyXG4gICAgfSBlbHNle1xyXG4gICAgICAgIGF3YWl0IGRhdGFiYXNlLnBob25naG9jLmNyZWF0ZShkYXRhKTtcclxuICAgICAgICByZXR1cm4gZGF0YVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAgXHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9XHJcbiBcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgcGhvbmdob2NTZXJ2aWNlOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "phongHocService.js"
      ],
      "names": [
        "phonghocService",
        "database",
        "phonghoc",
        "findAll",
        "where",
        "trangthai",
        "id",
        "destroy",
        "data",
        "create",
        "findOne",
        "tk",
        "update",
        "tenphonghoc"
      ],
      "mappings": ";;;;;;;;;;;;;;;AACA;;IAEMA,e;;;;;;;;;;;;;;;;mDAGaC,mBAASC,QAAT,CAAkBC,OAAlB,E;;;;;;;;;;;;;;;;MAKjB;;;;;;;;;;;mDAGiBF,mBAASC,QAAT,CAAkBC,OAAlB,CAA0B;AACrCC,gBAAAA,KAAK,EAAE;AAACC,kBAAAA,SAAS,EAAE;AAAZ;AAD8B,eAA1B,C;;;;;;;;;;;;;;;;;;;4BAOIC,E;;;;;;;mDAEAL,mBAASC,QAAT,CAAkBC,OAAlB,CAA0B;AACnCC,gBAAAA,KAAK,EAAE;AAAEE,kBAAAA,EAAE,EAAFA;AAAF;AAD4B,eAA1B,C;;;;;;;;;;;;;;;;;;;4BAQDA,E;;;;;;;mDAECL,mBAASC,QAAT,CAAkBK,OAAlB,CAA0B;AACnCH,gBAAAA,KAAK,EAAC;AAAEE,kBAAAA,EAAE,EAAFA;AAAF;AAD6B,eAA1B,C;;;;;;;;;;;;;;;;;;;yBAOHE,I;;;;;;;mDAEGP,mBAASC,QAAT,CAAkBO,MAAlB,CAAyBD,IAAzB,C;;;;;;;;;;;;;;;;;;;2BAMDF,E,EAAIE,I;;;;;;;;mDAEDP,mBAASC,QAAT,CAAkBQ,OAAlB,CAA0B;AACrCN,gBAAAA,KAAK,EAAE;AAAEE,kBAAAA,EAAE,EAAFA;AAAF;AAD8B,eAA1B,C;;;AAAdK,cAAAA,E;;mBAGEA,E;;;;;;mDACOV,mBAASC,QAAT,CAAkBU,MAAlB,CAAyBJ,IAAzB,EAA8B;AACnCJ,gBAAAA,KAAK,EAAG;AAAEE,kBAAAA,EAAE,EAAFA;AAAF;AAD2B,eAA9B,C;;;gDAGAE,I;;;gDAEH,I;;;;;;;;;;;;;;;;wBASEA,I;;;;;;;AAEPK,cAAAA,W,GAAeL,IAAI,CAACK,W;;mDACXZ,mBAASC,QAAT,CAAkBQ,OAAlB,CAA0B;AACvCN,gBAAAA,KAAK,EAAE;AAAES,kBAAAA,WAAW,EAAXA;AAAF;AADgC,eAA1B,C;;;AAAXF,cAAAA,E;;mBAGFA,E;;;;;gDACK,I;;;;mDAECV,mBAASC,QAAT,CAAkBO,MAAlB,CAAyBD,IAAzB,C;;;gDACCA,I;;;;;;;;;;;;;;;;;;;;;;eAWAR,e",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services",
      "sourcesContent": [
        "\r\nimport database from '../../Model/models';\r\n\r\nclass phonghocService {\r\n  static async getAll() {\r\n    try {      \r\n      return await database.phonghoc.findAll();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  // = sd cho thoi khoa bieu ========\r\n  static async getsudung() {\r\n    try {      \r\n      return await database.phonghoc.findAll({\r\n        where: {trangthai: 1}\r\n      });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  static async getByID(id){\r\n      try {\r\n          return await database.phonghoc.findAll({\r\n              where: { id }\r\n          })\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n  }\r\n\r\n  static async delete(id){\r\n      try {\r\n          return await database.phonghoc.destroy({\r\n              where:{ id }\r\n          })\r\n      } catch (error) {\r\n          throw error;\r\n      }\r\n  }\r\n  static async Save(data){\r\n      try {\r\n          return await database.phonghoc.create(data);\r\n      } catch (error) {\r\n          throw error\r\n      }\r\n  }\r\n\r\n  static async Update(id, data){\r\n      try {\r\n       let tk =    await database.phonghoc.findOne({\r\n              where: { id }\r\n          })         \r\n          if(tk){           \r\n              await database.phonghoc.update(data,{\r\n               where : { id }\r\n             })            \r\n             return data\r\n          }\r\n          return null;\r\n\r\n\r\n      } catch (error) {\r\n          throw error\r\n      }\r\n  }\r\n\r\n   \r\n  static async add(data) {\r\n    try {    \r\n        let tenphonghoc =  data.tenphonghoc\r\n      let tk = await database.phonghoc.findOne({\r\n        where: { tenphonghoc }\r\n    })      \r\n    if (tk) {\r\n      return null\r\n    } else{\r\n        await database.phonghoc.create(data);\r\n        return data\r\n    }\r\n    \r\n     \r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n \r\n}\r\n\r\nexport default phonghocService;"
      ]
    },
    "sourceType": "script",
    "mtime": 1581866293887
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\\\\phongHocRoute.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\phongHocRoute.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\phongHocRoute.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\phongHocRoute.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
        "sourceFileName": "phongHocRoute.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _express = require(\"express\");\n\nvar _phongHocController = _interopRequireDefault(require(\"../controllers/phongHocController\"));\n\nvar _require = require(\"express-validator\"),\n    check = _require.check;\n\nvar router = (0, _express.Router)();\nrouter.route(\"/\").get(_phongHocController[\"default\"].getAll).post(_phongHocController[\"default\"].add);\nrouter.route(\"/:id\").post(_phongHocController[\"default\"].update).get(_phongHocController[\"default\"].Delete);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBob25nSG9jUm91dGUuanMiXSwibmFtZXMiOlsicmVxdWlyZSIsImNoZWNrIiwicm91dGVyIiwicm91dGUiLCJnZXQiLCJwaG9uZ0hvY0NvbnRyb2xsZXIiLCJnZXRBbGwiLCJwb3N0IiwiYWRkIiwidXBkYXRlIiwiRGVsZXRlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUVBOztlQURrQkEsT0FBTyxDQUFDLG1CQUFELEM7SUFBakJDLEssWUFBQUEsSzs7QUFHUixJQUFNQyxNQUFNLEdBQUcsc0JBQWY7QUFFQUEsTUFBTSxDQUNIQyxLQURILENBQ1MsR0FEVCxFQUVHQyxHQUZILENBRU9DLCtCQUFtQkMsTUFGMUIsRUFHR0MsSUFISCxDQUdRRiwrQkFBbUJHLEdBSDNCO0FBSUFOLE1BQU0sQ0FDSEMsS0FESCxDQUNTLE1BRFQsRUFFR0ksSUFGSCxDQUVRRiwrQkFBbUJJLE1BRjNCLEVBR0dMLEdBSEgsQ0FHT0MsK0JBQW1CSyxNQUgxQjtBQUlBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJWLE1BQWpCIiwic291cmNlUm9vdCI6IkQ6XFxMdWFuVmFuXFxMdWFuVmFuRDJcXHRydW5ndGFtX2xhbjRcXGFwcHNcXHJvdXRlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb3V0ZXIgfSBmcm9tIFwiZXhwcmVzc1wiO1xyXG5jb25zdCB7IGNoZWNrIH0gPSByZXF1aXJlKFwiZXhwcmVzcy12YWxpZGF0b3JcIik7XHJcbmltcG9ydCBwaG9uZ0hvY0NvbnRyb2xsZXIgZnJvbSBcIi4uL2NvbnRyb2xsZXJzL3Bob25nSG9jQ29udHJvbGxlclwiO1xyXG5cclxuY29uc3Qgcm91dGVyID0gUm91dGVyKCk7XHJcblxyXG5yb3V0ZXJcclxuICAucm91dGUoXCIvXCIpXHJcbiAgLmdldChwaG9uZ0hvY0NvbnRyb2xsZXIuZ2V0QWxsKVxyXG4gIC5wb3N0KHBob25nSG9jQ29udHJvbGxlci5hZGQpO1xyXG5yb3V0ZXJcclxuICAucm91dGUoXCIvOmlkXCIpXHJcbiAgLnBvc3QocGhvbmdIb2NDb250cm9sbGVyLnVwZGF0ZSlcclxuICAuZ2V0KHBob25nSG9jQ29udHJvbGxlci5EZWxldGUpO1xyXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "phongHocRoute.js"
      ],
      "names": [
        "require",
        "check",
        "router",
        "route",
        "get",
        "phongHocController",
        "getAll",
        "post",
        "add",
        "update",
        "Delete",
        "module",
        "exports"
      ],
      "mappings": ";;;;AAAA;;AAEA;;eADkBA,OAAO,CAAC,mBAAD,C;IAAjBC,K,YAAAA,K;;AAGR,IAAMC,MAAM,GAAG,sBAAf;AAEAA,MAAM,CACHC,KADH,CACS,GADT,EAEGC,GAFH,CAEOC,+BAAmBC,MAF1B,EAGGC,IAHH,CAGQF,+BAAmBG,GAH3B;AAIAN,MAAM,CACHC,KADH,CACS,MADT,EAEGI,IAFH,CAEQF,+BAAmBI,MAF3B,EAGGL,GAHH,CAGOC,+BAAmBK,MAH1B;AAIAC,MAAM,CAACC,OAAP,GAAiBV,MAAjB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
      "sourcesContent": [
        "import { Router } from \"express\";\r\nconst { check } = require(\"express-validator\");\r\nimport phongHocController from \"../controllers/phongHocController\";\r\n\r\nconst router = Router();\r\n\r\nrouter\r\n  .route(\"/\")\r\n  .get(phongHocController.getAll)\r\n  .post(phongHocController.add);\r\nrouter\r\n  .route(\"/:id\")\r\n  .post(phongHocController.update)\r\n  .get(phongHocController.Delete);\r\nmodule.exports = router;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1578143446228
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\\\\phongHocController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\phongHocController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\phongHocController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\phongHocController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
        "sourceFileName": "phongHocController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _phongHocService = _interopRequireDefault(require(\"../services/phongHocService\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar phonghocController =\n/*#__PURE__*/\nfunction () {\n  function phonghocController() {\n    (0, _classCallCheck2[\"default\"])(this, phonghocController);\n  }\n\n  (0, _createClass2[\"default\"])(phonghocController, null, [{\n    key: \"getAll\",\n    value: function getAll(req, res) {\n      var user, data;\n      return _regenerator[\"default\"].async(function getAll$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\")) {\n                _context.next = 14;\n                break;\n              }\n\n              _context.prev = 1;\n              user = req.session.user;\n              _context.next = 5;\n              return _regenerator[\"default\"].awrap(_phongHocService[\"default\"].getAll());\n\n            case 5:\n              data = _context.sent;\n\n              if (data.length > 0) {\n                res.render(\"../views/admin/phonghoc/listphonghoc.ejs\", {\n                  data: data,\n                  user: user,\n                  message: 1\n                });\n              } else {\n                res.render(\"../views/admin/phonghoc/listphonghoc.ejs\", {\n                  data: data,\n                  user: user,\n                  message: 0\n                });\n              }\n\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              return _context.abrupt(\"return\", _context.t0);\n\n            case 12:\n              _context.next = 15;\n              break;\n\n            case 14:\n              return _context.abrupt(\"return\", res.redirect(\"/\"));\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 9]]);\n    }\n  }, {\n    key: \"Delete\",\n    value: function Delete(req, res) {\n      var id, Xoa;\n      return _regenerator[\"default\"].async(function Delete$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\")) {\n                _context2.next = 15;\n                break;\n              }\n\n              id = req.params.id;\n\n              if (!Number(id)) {\n                console.log(\"id not a number!!!\");\n              }\n\n              _context2.prev = 3;\n              _context2.next = 6;\n              return _regenerator[\"default\"].awrap(_phongHocService[\"default\"][\"delete\"](id));\n\n            case 6:\n              Xoa = _context2.sent;\n\n              if (Xoa) {\n                res.redirect(\"/admin/phonghoc\");\n              } else {\n                res.redirect(\"/admin/phonghoc\");\n              }\n\n              _context2.next = 13;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](3);\n              return _context2.abrupt(\"return\", _context2.t0);\n\n            case 13:\n              _context2.next = 16;\n              break;\n\n            case 15:\n              return _context2.abrupt(\"return\", res.redirect(\"/\"));\n\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[3, 10]]);\n    }\n  }, {\n    key: \"add\",\n    value: function add(req, res) {\n      var data, created;\n      return _regenerator[\"default\"].async(function add$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              data = _objectSpread({}, req.body);\n              _context3.prev = 1;\n              _context3.next = 4;\n              return _regenerator[\"default\"].awrap(_phongHocService[\"default\"].add(data));\n\n            case 4:\n              created = _context3.sent;\n\n              if (created == null) {\n                res.redirect(\"/admin/phonghoc\");\n              } else {\n                res.redirect(\"/admin/phonghoc\");\n              }\n\n              _context3.next = 11;\n              break;\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](1);\n              return _context3.abrupt(\"return\", _context3.t0);\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[1, 8]]);\n    }\n  }, {\n    key: \"update\",\n    value: function update(req, res) {\n      var altered, id, update;\n      return _regenerator[\"default\"].async(function update$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              altered = req.body;\n              id = req.params.id;\n\n              if (Number(id)) {\n                _context4.next = 4;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", res.redirect(\"/admin/phonghoc\"));\n\n            case 4:\n              _context4.prev = 4;\n              _context4.next = 7;\n              return _regenerator[\"default\"].awrap(_phongHocService[\"default\"].Update(id, altered));\n\n            case 7:\n              update = _context4.sent;\n\n              if (!update) {\n                res.redirect(\"/admin/phonghoc\");\n              } else {\n                res.redirect(\"/admin/phonghoc\");\n              }\n\n              _context4.next = 14;\n              break;\n\n            case 11:\n              _context4.prev = 11;\n              _context4.t0 = _context4[\"catch\"](4);\n              return _context4.abrupt(\"return\", _context4.t0);\n\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[4, 11]]);\n    }\n  }]);\n  return phonghocController;\n}();\n\nvar _default = phonghocController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBob25nSG9jQ29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJwaG9uZ2hvY0NvbnRyb2xsZXIiLCJyZXEiLCJyZXMiLCJzZXNzaW9uIiwidXNlciIsInF1eWVuaGFuZyIsInBob25naG9jU2VydmljZSIsImdldEFsbCIsImRhdGEiLCJsZW5ndGgiLCJyZW5kZXIiLCJtZXNzYWdlIiwicmVkaXJlY3QiLCJpZCIsInBhcmFtcyIsIk51bWJlciIsImNvbnNvbGUiLCJsb2ciLCJYb2EiLCJib2R5IiwiYWRkIiwiY3JlYXRlZCIsImFsdGVyZWQiLCJVcGRhdGUiLCJ1cGRhdGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7OztJQUVNQSxrQjs7Ozs7Ozs7OzJCQUNnQkMsRyxFQUFLQyxHOzs7Ozs7b0JBQ25CRCxHQUFHLENBQUNFLE9BQUosQ0FBWUMsSUFBWixDQUFpQkMsU0FBakIsSUFBOEIsT0FBOUIsSUFBeUNKLEdBQUcsQ0FBQ0UsT0FBSixDQUFZQyxJQUFaLENBQWlCQyxTQUFqQixJQUE4QixXOzs7Ozs7QUFFbkVELGNBQUFBLEksR0FBT0gsR0FBRyxDQUFDRSxPQUFKLENBQVlDLEk7O21EQUNORSw0QkFBZ0JDLE1BQWhCLEU7OztBQUFiQyxjQUFBQSxJOztBQUNOLGtCQUFJQSxJQUFJLENBQUNDLE1BQUwsR0FBYyxDQUFsQixFQUFxQjtBQUNuQlAsZ0JBQUFBLEdBQUcsQ0FBQ1EsTUFBSixDQUFXLDBDQUFYLEVBQXVEO0FBQUVGLGtCQUFBQSxJQUFJLEVBQUpBLElBQUY7QUFBUUosa0JBQUFBLElBQUksRUFBSkEsSUFBUjtBQUFjTyxrQkFBQUEsT0FBTyxFQUFHO0FBQXhCLGlCQUF2RDtBQUNELGVBRkQsTUFFTztBQUNMVCxnQkFBQUEsR0FBRyxDQUFDUSxNQUFKLENBQVcsMENBQVgsRUFBdUQ7QUFBRUYsa0JBQUFBLElBQUksRUFBSkEsSUFBRjtBQUFPSixrQkFBQUEsSUFBSSxFQUFKQSxJQUFQO0FBQWFPLGtCQUFBQSxPQUFPLEVBQUc7QUFBdkIsaUJBQXZEO0FBQ0Q7Ozs7Ozs7Ozs7Ozs7OzsrQ0FJTVQsR0FBRyxDQUFDVSxRQUFKLENBQWEsR0FBYixDOzs7Ozs7Ozs7OzsyQkFJU1gsRyxFQUFLQyxHOzs7Ozs7b0JBQ25CRCxHQUFHLENBQUNFLE9BQUosQ0FBWUMsSUFBWixDQUFpQkMsU0FBakIsSUFBOEIsT0FBOUIsSUFBeUNKLEdBQUcsQ0FBQ0UsT0FBSixDQUFZQyxJQUFaLENBQWlCQyxTQUFqQixJQUE4QixXOzs7OztBQUNyRVEsY0FBQUEsRSxHQUFPWixHQUFHLENBQUNhLE0sQ0FBWEQsRTs7QUFDTixrQkFBSSxDQUFDRSxNQUFNLENBQUNGLEVBQUQsQ0FBWCxFQUFpQjtBQUNmRyxnQkFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksb0JBQVo7QUFDRDs7OzttREFFaUJYLHNDQUF1Qk8sRUFBdkIsQzs7O0FBQVpLLGNBQUFBLEc7O0FBQ0osa0JBQUlBLEdBQUosRUFBUztBQUNQaEIsZ0JBQUFBLEdBQUcsQ0FBQ1UsUUFBSixDQUFhLGlCQUFiO0FBQ0QsZUFGRCxNQUVPO0FBQ0xWLGdCQUFBQSxHQUFHLENBQUNVLFFBQUosQ0FBYSxpQkFBYjtBQUNEOzs7Ozs7Ozs7Ozs7Ozs7Z0RBSU1WLEdBQUcsQ0FBQ1UsUUFBSixDQUFhLEdBQWIsQzs7Ozs7Ozs7Ozs7d0JBSU1YLEcsRUFBS0MsRzs7Ozs7O0FBQ2hCTSxjQUFBQSxJLHFCQUFZUCxHQUFHLENBQUNrQixJOzs7bURBRUliLDRCQUFnQmMsR0FBaEIsQ0FBb0JaLElBQXBCLEM7OztBQUFoQmEsY0FBQUEsTzs7QUFDTixrQkFBSUEsT0FBTyxJQUFJLElBQWYsRUFBcUI7QUFDbkJuQixnQkFBQUEsR0FBRyxDQUFDVSxRQUFKLENBQWEsaUJBQWI7QUFDRCxlQUZELE1BRU87QUFDTFYsZ0JBQUFBLEdBQUcsQ0FBQ1UsUUFBSixDQUFhLGlCQUFiO0FBQ0Q7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MkJBTWVYLEcsRUFBS0MsRzs7Ozs7O0FBQ2pCb0IsY0FBQUEsTyxHQUFVckIsR0FBRyxDQUFDa0IsSTtBQUNaTixjQUFBQSxFLEdBQU9aLEdBQUcsQ0FBQ2EsTSxDQUFYRCxFOztrQkFDSEUsTUFBTSxDQUFDRixFQUFELEM7Ozs7O2dEQUNGWCxHQUFHLENBQUNVLFFBQUosQ0FBYSxpQkFBYixDOzs7OzttREFHY04sNEJBQWdCaUIsTUFBaEIsQ0FBdUJWLEVBQXZCLEVBQTJCUyxPQUEzQixDOzs7QUFBZkUsY0FBQUEsTTs7QUFDTixrQkFBSSxDQUFDQSxNQUFMLEVBQWE7QUFDWHRCLGdCQUFBQSxHQUFHLENBQUNVLFFBQUosQ0FBYSxpQkFBYjtBQUNELGVBRkQsTUFFTztBQUNMVixnQkFBQUEsR0FBRyxDQUFDVSxRQUFKLENBQWEsaUJBQWI7QUFDRDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2VBT1FaLGtCIiwic291cmNlUm9vdCI6IkQ6XFxMdWFuVmFuXFxMdWFuVmFuRDJcXHRydW5ndGFtX2xhbjRcXGFwcHNcXGNvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHBob25naG9jU2VydmljZSBmcm9tIFwiLi4vc2VydmljZXMvcGhvbmdIb2NTZXJ2aWNlXCI7XHJcblxyXG5jbGFzcyBwaG9uZ2hvY0NvbnRyb2xsZXIge1xyXG4gIHN0YXRpYyBhc3luYyBnZXRBbGwocmVxLCByZXMpIHtcclxuICAgIGlmIChyZXEuc2Vzc2lvbi51c2VyLnF1eWVuaGFuZyA9PSBcIkFkbWluXCIgfHwgcmVxLnNlc3Npb24udXNlci5xdXllbmhhbmcgPT0gXCJOaMOibiBWacOqblwiKSB7IFxyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc3QgdXNlciA9IHJlcS5zZXNzaW9uLnVzZXJcclxuICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHBob25naG9jU2VydmljZS5nZXRBbGwoKTtcclxuICAgICAgaWYgKGRhdGEubGVuZ3RoID4gMCkge1xyXG4gICAgICAgIHJlcy5yZW5kZXIoXCIuLi92aWV3cy9hZG1pbi9waG9uZ2hvYy9saXN0cGhvbmdob2MuZWpzXCIsIHsgZGF0YSAsdXNlciwgbWVzc2FnZSA6IDF9KTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICByZXMucmVuZGVyKFwiLi4vdmlld3MvYWRtaW4vcGhvbmdob2MvbGlzdHBob25naG9jLmVqc1wiLCB7IGRhdGEsdXNlciwgbWVzc2FnZSA6IDB9KTtcclxuICAgICAgfVxyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgcmV0dXJuIGVycm9yO1xyXG4gICAgfX0gZWxzZSB7XHJcbiAgICAgIHJldHVybiByZXMucmVkaXJlY3QoXCIvXCIpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc3RhdGljIGFzeW5jIERlbGV0ZShyZXEsIHJlcykge1xyXG4gICAgaWYgKHJlcS5zZXNzaW9uLnVzZXIucXV5ZW5oYW5nID09IFwiQWRtaW5cIiB8fCByZXEuc2Vzc2lvbi51c2VyLnF1eWVuaGFuZyA9PSBcIk5ow6JuIFZpw6puXCIpIHsgXHJcbiAgICBsZXQgeyBpZCB9ID0gcmVxLnBhcmFtcztcclxuICAgIGlmICghTnVtYmVyKGlkKSkge1xyXG4gICAgICBjb25zb2xlLmxvZyhcImlkIG5vdCBhIG51bWJlciEhIVwiKTtcclxuICAgIH1cclxuICAgIHRyeSB7XHJcbiAgICAgIGxldCBYb2EgPSBhd2FpdCBwaG9uZ2hvY1NlcnZpY2UuZGVsZXRlKGlkKTtcclxuICAgICAgaWYgKFhvYSkge1xyXG4gICAgICAgIHJlcy5yZWRpcmVjdChcIi9hZG1pbi9waG9uZ2hvY1wiKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICByZXMucmVkaXJlY3QoXCIvYWRtaW4vcGhvbmdob2NcIik7XHJcbiAgICAgIH1cclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHJldHVybiBlcnJvcjtcclxuICAgIH19IGVsc2Uge1xyXG4gICAgICByZXR1cm4gcmVzLnJlZGlyZWN0KFwiL1wiKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHN0YXRpYyBhc3luYyBhZGQocmVxLCByZXMpIHtcclxuICAgIGxldCBkYXRhID0geyAuLi5yZXEuYm9keSB9O1xyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc3QgY3JlYXRlZCA9IGF3YWl0IHBob25naG9jU2VydmljZS5hZGQoZGF0YSk7XHJcbiAgICAgIGlmIChjcmVhdGVkID09IG51bGwpIHtcclxuICAgICAgICByZXMucmVkaXJlY3QoXCIvYWRtaW4vcGhvbmdob2NcIik7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmVzLnJlZGlyZWN0KFwiL2FkbWluL3Bob25naG9jXCIpO1xyXG4gICAgICB9XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICByZXR1cm4gZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgYXN5bmMgdXBkYXRlKHJlcSwgcmVzKSB7XHJcbiAgICBjb25zdCBhbHRlcmVkID0gcmVxLmJvZHk7XHJcbiAgICBjb25zdCB7IGlkIH0gPSByZXEucGFyYW1zO1xyXG4gICAgaWYgKCFOdW1iZXIoaWQpKSB7XHJcbiAgICAgIHJldHVybiByZXMucmVkaXJlY3QoXCIvYWRtaW4vcGhvbmdob2NcIik7XHJcbiAgICB9XHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCB1cGRhdGUgPSBhd2FpdCBwaG9uZ2hvY1NlcnZpY2UuVXBkYXRlKGlkLCBhbHRlcmVkKTtcclxuICAgICAgaWYgKCF1cGRhdGUpIHtcclxuICAgICAgICByZXMucmVkaXJlY3QoXCIvYWRtaW4vcGhvbmdob2NcIik7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmVzLnJlZGlyZWN0KFwiL2FkbWluL3Bob25naG9jXCIpO1xyXG4gICAgICB9XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICByZXR1cm4gZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBwaG9uZ2hvY0NvbnRyb2xsZXI7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "phongHocController.js"
      ],
      "names": [
        "phonghocController",
        "req",
        "res",
        "session",
        "user",
        "quyenhang",
        "phonghocService",
        "getAll",
        "data",
        "length",
        "render",
        "message",
        "redirect",
        "id",
        "params",
        "Number",
        "console",
        "log",
        "Xoa",
        "body",
        "add",
        "created",
        "altered",
        "Update",
        "update"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;AAAA;;;;;;IAEMA,kB;;;;;;;;;2BACgBC,G,EAAKC,G;;;;;;oBACnBD,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,OAA9B,IAAyCJ,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,W;;;;;;AAEnED,cAAAA,I,GAAOH,GAAG,CAACE,OAAJ,CAAYC,I;;mDACNE,4BAAgBC,MAAhB,E;;;AAAbC,cAAAA,I;;AACN,kBAAIA,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AACnBP,gBAAAA,GAAG,CAACQ,MAAJ,CAAW,0CAAX,EAAuD;AAAEF,kBAAAA,IAAI,EAAJA,IAAF;AAAQJ,kBAAAA,IAAI,EAAJA,IAAR;AAAcO,kBAAAA,OAAO,EAAG;AAAxB,iBAAvD;AACD,eAFD,MAEO;AACLT,gBAAAA,GAAG,CAACQ,MAAJ,CAAW,0CAAX,EAAuD;AAAEF,kBAAAA,IAAI,EAAJA,IAAF;AAAOJ,kBAAAA,IAAI,EAAJA,IAAP;AAAaO,kBAAAA,OAAO,EAAG;AAAvB,iBAAvD;AACD;;;;;;;;;;;;;;;+CAIMT,GAAG,CAACU,QAAJ,CAAa,GAAb,C;;;;;;;;;;;2BAISX,G,EAAKC,G;;;;;;oBACnBD,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,OAA9B,IAAyCJ,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,W;;;;;AACrEQ,cAAAA,E,GAAOZ,GAAG,CAACa,M,CAAXD,E;;AACN,kBAAI,CAACE,MAAM,CAACF,EAAD,CAAX,EAAiB;AACfG,gBAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD;;;;mDAEiBX,sCAAuBO,EAAvB,C;;;AAAZK,cAAAA,G;;AACJ,kBAAIA,GAAJ,EAAS;AACPhB,gBAAAA,GAAG,CAACU,QAAJ,CAAa,iBAAb;AACD,eAFD,MAEO;AACLV,gBAAAA,GAAG,CAACU,QAAJ,CAAa,iBAAb;AACD;;;;;;;;;;;;;;;gDAIMV,GAAG,CAACU,QAAJ,CAAa,GAAb,C;;;;;;;;;;;wBAIMX,G,EAAKC,G;;;;;;AAChBM,cAAAA,I,qBAAYP,GAAG,CAACkB,I;;;mDAEIb,4BAAgBc,GAAhB,CAAoBZ,IAApB,C;;;AAAhBa,cAAAA,O;;AACN,kBAAIA,OAAO,IAAI,IAAf,EAAqB;AACnBnB,gBAAAA,GAAG,CAACU,QAAJ,CAAa,iBAAb;AACD,eAFD,MAEO;AACLV,gBAAAA,GAAG,CAACU,QAAJ,CAAa,iBAAb;AACD;;;;;;;;;;;;;;;;;;;2BAMeX,G,EAAKC,G;;;;;;AACjBoB,cAAAA,O,GAAUrB,GAAG,CAACkB,I;AACZN,cAAAA,E,GAAOZ,GAAG,CAACa,M,CAAXD,E;;kBACHE,MAAM,CAACF,EAAD,C;;;;;gDACFX,GAAG,CAACU,QAAJ,CAAa,iBAAb,C;;;;;mDAGcN,4BAAgBiB,MAAhB,CAAuBV,EAAvB,EAA2BS,OAA3B,C;;;AAAfE,cAAAA,M;;AACN,kBAAI,CAACA,MAAL,EAAa;AACXtB,gBAAAA,GAAG,CAACU,QAAJ,CAAa,iBAAb;AACD,eAFD,MAEO;AACLV,gBAAAA,GAAG,CAACU,QAAJ,CAAa,iBAAb;AACD;;;;;;;;;;;;;;;;;;;;;eAOQZ,kB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
      "sourcesContent": [
        "import phonghocService from \"../services/phongHocService\";\r\n\r\nclass phonghocController {\r\n  static async getAll(req, res) {\r\n    if (req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\") { \r\n    try {\r\n      const user = req.session.user\r\n      const data = await phonghocService.getAll();\r\n      if (data.length > 0) {\r\n        res.render(\"../views/admin/phonghoc/listphonghoc.ejs\", { data ,user, message : 1});\r\n      } else {\r\n        res.render(\"../views/admin/phonghoc/listphonghoc.ejs\", { data,user, message : 0});\r\n      }\r\n    } catch (error) {\r\n      return error;\r\n    }} else {\r\n      return res.redirect(\"/\");\r\n    }\r\n  }\r\n\r\n  static async Delete(req, res) {\r\n    if (req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\") { \r\n    let { id } = req.params;\r\n    if (!Number(id)) {\r\n      console.log(\"id not a number!!!\");\r\n    }\r\n    try {\r\n      let Xoa = await phonghocService.delete(id);\r\n      if (Xoa) {\r\n        res.redirect(\"/admin/phonghoc\");\r\n      } else {\r\n        res.redirect(\"/admin/phonghoc\");\r\n      }\r\n    } catch (error) {\r\n      return error;\r\n    }} else {\r\n      return res.redirect(\"/\");\r\n    }\r\n  }\r\n\r\n  static async add(req, res) {\r\n    let data = { ...req.body };\r\n    try {\r\n      const created = await phonghocService.add(data);\r\n      if (created == null) {\r\n        res.redirect(\"/admin/phonghoc\");\r\n      } else {\r\n        res.redirect(\"/admin/phonghoc\");\r\n      }\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  static async update(req, res) {\r\n    const altered = req.body;\r\n    const { id } = req.params;\r\n    if (!Number(id)) {\r\n      return res.redirect(\"/admin/phonghoc\");\r\n    }\r\n    try {\r\n      const update = await phonghocService.Update(id, altered);\r\n      if (!update) {\r\n        res.redirect(\"/admin/phonghoc\");\r\n      } else {\r\n        res.redirect(\"/admin/phonghoc\");\r\n      }\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default phonghocController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1584458458471
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\\\\phanquyenRoute.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\phanquyenRoute.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\phanquyenRoute.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\phanquyenRoute.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
        "sourceFileName": "phanquyenRoute.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _express = require(\"express\");\n\nvar _phanquyenController = _interopRequireDefault(require(\"../controllers/phanquyenController\"));\n\nvar _require = require(\"express-validator\"),\n    check = _require.check;\n\nvar router = (0, _express.Router)();\nrouter.route(\"/\").get(_phanquyenController[\"default\"].getAll).post(_phanquyenController[\"default\"].add);\nrouter.route(\"/:id\").post(_phanquyenController[\"default\"].update).get(_phanquyenController[\"default\"].Delete);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBoYW5xdXllblJvdXRlLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJjaGVjayIsInJvdXRlciIsInJvdXRlIiwiZ2V0IiwicGhhbnF1eWVuQ29udHJvbGxlciIsImdldEFsbCIsInBvc3QiLCJhZGQiLCJ1cGRhdGUiLCJEZWxldGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUE7O0FBRUE7O2VBRGtCQSxPQUFPLENBQUMsbUJBQUQsQztJQUFqQkMsSyxZQUFBQSxLOztBQUdSLElBQU1DLE1BQU0sR0FBRyxzQkFBZjtBQUVBQSxNQUFNLENBQ0hDLEtBREgsQ0FDUyxHQURULEVBRUdDLEdBRkgsQ0FFT0MsZ0NBQW9CQyxNQUYzQixFQUdHQyxJQUhILENBR1FGLGdDQUFvQkcsR0FINUI7QUFJQU4sTUFBTSxDQUNIQyxLQURILENBQ1MsTUFEVCxFQUVHSSxJQUZILENBRVFGLGdDQUFvQkksTUFGNUIsRUFHR0wsR0FISCxDQUdPQyxnQ0FBb0JLLE1BSDNCO0FBSUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlYsTUFBakIiLCJzb3VyY2VSb290IjoiRDpcXEx1YW5WYW5cXEx1YW5WYW5EMlxcdHJ1bmd0YW1fbGFuNFxcYXBwc1xccm91dGVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gXCJleHByZXNzXCI7XHJcbmNvbnN0IHsgY2hlY2sgfSA9IHJlcXVpcmUoXCJleHByZXNzLXZhbGlkYXRvclwiKTtcclxuaW1wb3J0IHBoYW5xdXllbkNvbnRyb2xsZXIgZnJvbSBcIi4uL2NvbnRyb2xsZXJzL3BoYW5xdXllbkNvbnRyb2xsZXJcIjtcclxuXHJcbmNvbnN0IHJvdXRlciA9IFJvdXRlcigpO1xyXG5cclxucm91dGVyXHJcbiAgLnJvdXRlKFwiL1wiKVxyXG4gIC5nZXQocGhhbnF1eWVuQ29udHJvbGxlci5nZXRBbGwpXHJcbiAgLnBvc3QocGhhbnF1eWVuQ29udHJvbGxlci5hZGQpO1xyXG5yb3V0ZXJcclxuICAucm91dGUoXCIvOmlkXCIpXHJcbiAgLnBvc3QocGhhbnF1eWVuQ29udHJvbGxlci51cGRhdGUpXHJcbiAgLmdldChwaGFucXV5ZW5Db250cm9sbGVyLkRlbGV0ZSk7XHJcbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "phanquyenRoute.js"
      ],
      "names": [
        "require",
        "check",
        "router",
        "route",
        "get",
        "phanquyenController",
        "getAll",
        "post",
        "add",
        "update",
        "Delete",
        "module",
        "exports"
      ],
      "mappings": ";;;;AAAA;;AAEA;;eADkBA,OAAO,CAAC,mBAAD,C;IAAjBC,K,YAAAA,K;;AAGR,IAAMC,MAAM,GAAG,sBAAf;AAEAA,MAAM,CACHC,KADH,CACS,GADT,EAEGC,GAFH,CAEOC,gCAAoBC,MAF3B,EAGGC,IAHH,CAGQF,gCAAoBG,GAH5B;AAIAN,MAAM,CACHC,KADH,CACS,MADT,EAEGI,IAFH,CAEQF,gCAAoBI,MAF5B,EAGGL,GAHH,CAGOC,gCAAoBK,MAH3B;AAIAC,MAAM,CAACC,OAAP,GAAiBV,MAAjB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
      "sourcesContent": [
        "import { Router } from \"express\";\r\nconst { check } = require(\"express-validator\");\r\nimport phanquyenController from \"../controllers/phanquyenController\";\r\n\r\nconst router = Router();\r\n\r\nrouter\r\n  .route(\"/\")\r\n  .get(phanquyenController.getAll)\r\n  .post(phanquyenController.add);\r\nrouter\r\n  .route(\"/:id\")\r\n  .post(phanquyenController.update)\r\n  .get(phanquyenController.Delete);\r\nmodule.exports = router;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1578150306976
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\\\\phanquyenController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\phanquyenController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\phanquyenController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\phanquyenController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
        "sourceFileName": "phanquyenController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _phanquyenService = _interopRequireDefault(require(\"../services/phanquyenService\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar phanquyenController =\n/*#__PURE__*/\nfunction () {\n  function phanquyenController() {\n    (0, _classCallCheck2[\"default\"])(this, phanquyenController);\n  }\n\n  (0, _createClass2[\"default\"])(phanquyenController, null, [{\n    key: \"getAll\",\n    value: function getAll(req, res) {\n      var user, data;\n      return _regenerator[\"default\"].async(function getAll$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(req.session.user.quyenhang == \"Admin\")) {\n                _context.next = 14;\n                break;\n              }\n\n              _context.prev = 1;\n              user = req.session.user;\n              _context.next = 5;\n              return _regenerator[\"default\"].awrap(_phanquyenService[\"default\"].getAll());\n\n            case 5:\n              data = _context.sent;\n\n              if (data.length > 0) {\n                res.render(\"../views/admin/phanquyen/listphanquyen.ejs\", {\n                  data: data,\n                  user: user,\n                  message: 1\n                });\n              } else {\n                res.render(\"../views/admin/phanquyen/listphanquyen.ejs\", {\n                  data: data,\n                  user: user,\n                  message: 0\n                });\n              }\n\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              return _context.abrupt(\"return\", _context.t0);\n\n            case 12:\n              _context.next = 15;\n              break;\n\n            case 14:\n              return _context.abrupt(\"return\", res.redirect(\"/\"));\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 9]]);\n    }\n  }, {\n    key: \"Delete\",\n    value: function Delete(req, res) {\n      var id, Xoa;\n      return _regenerator[\"default\"].async(function Delete$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(req.session.user.quyenhang == \"Admin\")) {\n                _context2.next = 15;\n                break;\n              }\n\n              id = req.params.id;\n\n              if (!Number(id)) {\n                console.log(\"id not a number!!!\");\n              }\n\n              _context2.prev = 3;\n              _context2.next = 6;\n              return _regenerator[\"default\"].awrap(_phanquyenService[\"default\"][\"delete\"](id));\n\n            case 6:\n              Xoa = _context2.sent;\n\n              if (Xoa) {\n                res.redirect(\"/admin/phanquyen?kq=1&mes='Xóa Thành Công'\");\n              } else {\n                res.redirect(\"/admin/phanquyen?kq=0\");\n              }\n\n              _context2.next = 13;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](3);\n              return _context2.abrupt(\"return\", _context2.t0);\n\n            case 13:\n              _context2.next = 16;\n              break;\n\n            case 15:\n              return _context2.abrupt(\"return\", res.redirect(\"/\"));\n\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[3, 10]]);\n    }\n  }, {\n    key: \"add\",\n    value: function add(req, res) {\n      var data, created;\n      return _regenerator[\"default\"].async(function add$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              data = _objectSpread({}, req.body);\n              _context3.prev = 1;\n              _context3.next = 4;\n              return _regenerator[\"default\"].awrap(_phanquyenService[\"default\"].add(data));\n\n            case 4:\n              created = _context3.sent;\n\n              if (created == null) {\n                res.redirect(\"/admin/phanquyen?kq=0\");\n              } else {\n                res.redirect(\"/admin/phanquyen?kq=1&mes='Thêm thành công'\");\n              }\n\n              _context3.next = 11;\n              break;\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](1);\n              return _context3.abrupt(\"return\", _context3.t0);\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[1, 8]]);\n    }\n  }, {\n    key: \"update\",\n    value: function update(req, res) {\n      var altered, id, update;\n      return _regenerator[\"default\"].async(function update$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              altered = req.body;\n              id = req.params.id;\n\n              if (Number(id)) {\n                _context4.next = 4;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", res.redirect(\"/admin/phanquyen?kq=0&mes='Id not a number!!!'\"));\n\n            case 4:\n              _context4.prev = 4;\n              _context4.next = 7;\n              return _regenerator[\"default\"].awrap(_phanquyenService[\"default\"].Update(id, altered));\n\n            case 7:\n              update = _context4.sent;\n\n              if (!update) {\n                res.redirect(\"/admin/phanquyen?kq=0\");\n              } else {\n                res.redirect(\"/admin/phanquyen?kq=1\");\n              }\n\n              _context4.next = 14;\n              break;\n\n            case 11:\n              _context4.prev = 11;\n              _context4.t0 = _context4[\"catch\"](4);\n              return _context4.abrupt(\"return\", _context4.t0);\n\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[4, 11]]);\n    }\n  }]);\n  return phanquyenController;\n}();\n\nvar _default = phanquyenController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBoYW5xdXllbkNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsicGhhbnF1eWVuQ29udHJvbGxlciIsInJlcSIsInJlcyIsInNlc3Npb24iLCJ1c2VyIiwicXV5ZW5oYW5nIiwicGhhbnF1eWVuU2VydmljZSIsImdldEFsbCIsImRhdGEiLCJsZW5ndGgiLCJyZW5kZXIiLCJtZXNzYWdlIiwicmVkaXJlY3QiLCJpZCIsInBhcmFtcyIsIk51bWJlciIsImNvbnNvbGUiLCJsb2ciLCJYb2EiLCJib2R5IiwiYWRkIiwiY3JlYXRlZCIsImFsdGVyZWQiLCJVcGRhdGUiLCJ1cGRhdGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7OztJQUVNQSxtQjs7Ozs7Ozs7OzJCQUNnQkMsRyxFQUFLQyxHOzs7Ozs7b0JBQ25CRCxHQUFHLENBQUNFLE9BQUosQ0FBWUMsSUFBWixDQUFpQkMsU0FBakIsSUFBNkIsTzs7Ozs7O0FBRXpCRCxjQUFBQSxJLEdBQU9ILEdBQUcsQ0FBQ0UsT0FBSixDQUFZQyxJOzttREFDTkUsNkJBQWlCQyxNQUFqQixFOzs7QUFBYkMsY0FBQUEsSTs7QUFDTixrQkFBSUEsSUFBSSxDQUFDQyxNQUFMLEdBQWMsQ0FBbEIsRUFBcUI7QUFDbkJQLGdCQUFBQSxHQUFHLENBQUNRLE1BQUosQ0FBVyw0Q0FBWCxFQUF5RDtBQUN2REYsa0JBQUFBLElBQUksRUFBSkEsSUFEdUQ7QUFDbERKLGtCQUFBQSxJQUFJLEVBQUpBLElBRGtEO0FBRXZETyxrQkFBQUEsT0FBTyxFQUFFO0FBRjhDLGlCQUF6RDtBQUlELGVBTEQsTUFLTztBQUNMVCxnQkFBQUEsR0FBRyxDQUFDUSxNQUFKLENBQVcsNENBQVgsRUFBeUQ7QUFDdkRGLGtCQUFBQSxJQUFJLEVBQUpBLElBRHVEO0FBQ2pESixrQkFBQUEsSUFBSSxFQUFKQSxJQURpRDtBQUV2RE8sa0JBQUFBLE9BQU8sRUFBRTtBQUY4QyxpQkFBekQ7QUFJRDs7Ozs7Ozs7Ozs7Ozs7OytDQUlNVCxHQUFHLENBQUNVLFFBQUosQ0FBYSxHQUFiLEM7Ozs7Ozs7Ozs7OzJCQUlTWCxHLEVBQUtDLEc7Ozs7OztvQkFDbkJELEdBQUcsQ0FBQ0UsT0FBSixDQUFZQyxJQUFaLENBQWlCQyxTQUFqQixJQUE4QixPOzs7OztBQUM1QlEsY0FBQUEsRSxHQUFPWixHQUFHLENBQUNhLE0sQ0FBWEQsRTs7QUFDTixrQkFBSSxDQUFDRSxNQUFNLENBQUNGLEVBQUQsQ0FBWCxFQUFpQjtBQUNmRyxnQkFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksb0JBQVo7QUFDRDs7OzttREFFaUJYLHVDQUF3Qk8sRUFBeEIsQzs7O0FBQVpLLGNBQUFBLEc7O0FBQ0osa0JBQUlBLEdBQUosRUFBUztBQUNQaEIsZ0JBQUFBLEdBQUcsQ0FBQ1UsUUFBSixDQUFhLDRDQUFiO0FBQ0QsZUFGRCxNQUVPO0FBQ0xWLGdCQUFBQSxHQUFHLENBQUNVLFFBQUosQ0FBYSx1QkFBYjtBQUNEOzs7Ozs7Ozs7Ozs7Ozs7Z0RBSU1WLEdBQUcsQ0FBQ1UsUUFBSixDQUFhLEdBQWIsQzs7Ozs7Ozs7Ozs7d0JBSU1YLEcsRUFBS0MsRzs7Ozs7O0FBQ2hCTSxjQUFBQSxJLHFCQUFZUCxHQUFHLENBQUNrQixJOzs7bURBRUliLDZCQUFpQmMsR0FBakIsQ0FBcUJaLElBQXJCLEM7OztBQUFoQmEsY0FBQUEsTzs7QUFDTixrQkFBSUEsT0FBTyxJQUFJLElBQWYsRUFBcUI7QUFDbkJuQixnQkFBQUEsR0FBRyxDQUFDVSxRQUFKLENBQWEsdUJBQWI7QUFDRCxlQUZELE1BRU87QUFDTFYsZ0JBQUFBLEdBQUcsQ0FBQ1UsUUFBSixDQUFhLDZDQUFiO0FBQ0Q7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MkJBTWVYLEcsRUFBS0MsRzs7Ozs7O0FBQ2pCb0IsY0FBQUEsTyxHQUFVckIsR0FBRyxDQUFDa0IsSTtBQUNaTixjQUFBQSxFLEdBQU9aLEdBQUcsQ0FBQ2EsTSxDQUFYRCxFOztrQkFDSEUsTUFBTSxDQUFDRixFQUFELEM7Ozs7O2dEQUNGWCxHQUFHLENBQUNVLFFBQUosQ0FBYSxnREFBYixDOzs7OzttREFHY04sNkJBQWlCaUIsTUFBakIsQ0FBd0JWLEVBQXhCLEVBQTRCUyxPQUE1QixDOzs7QUFBZkUsY0FBQUEsTTs7QUFDTixrQkFBSSxDQUFDQSxNQUFMLEVBQWE7QUFDWHRCLGdCQUFBQSxHQUFHLENBQUNVLFFBQUosQ0FBYSx1QkFBYjtBQUNELGVBRkQsTUFFTztBQUNMVixnQkFBQUEsR0FBRyxDQUFDVSxRQUFKLENBQWEsdUJBQWI7QUFDRDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2VBT1FaLG1CIiwic291cmNlUm9vdCI6IkQ6XFxMdWFuVmFuXFxMdWFuVmFuRDJcXHRydW5ndGFtX2xhbjRcXGFwcHNcXGNvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHBoYW5xdXllblNlcnZpY2UgZnJvbSBcIi4uL3NlcnZpY2VzL3BoYW5xdXllblNlcnZpY2VcIjtcclxuXHJcbmNsYXNzIHBoYW5xdXllbkNvbnRyb2xsZXIge1xyXG4gIHN0YXRpYyBhc3luYyBnZXRBbGwocmVxLCByZXMpIHtcclxuICAgIGlmIChyZXEuc2Vzc2lvbi51c2VyLnF1eWVuaGFuZyA9PVwiQWRtaW5cIikgeyBcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IHVzZXIgPSByZXEuc2Vzc2lvbi51c2VyXHJcbiAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBwaGFucXV5ZW5TZXJ2aWNlLmdldEFsbCgpO1xyXG4gICAgICBpZiAoZGF0YS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgcmVzLnJlbmRlcihcIi4uL3ZpZXdzL2FkbWluL3BoYW5xdXllbi9saXN0cGhhbnF1eWVuLmVqc1wiLCB7XHJcbiAgICAgICAgICBkYXRhLHVzZXIsXHJcbiAgICAgICAgICBtZXNzYWdlOiAxXHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmVzLnJlbmRlcihcIi4uL3ZpZXdzL2FkbWluL3BoYW5xdXllbi9saXN0cGhhbnF1eWVuLmVqc1wiLCB7XHJcbiAgICAgICAgICBkYXRhLCB1c2VyLFxyXG4gICAgICAgICAgbWVzc2FnZTogMFxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICByZXR1cm4gZXJyb3I7XHJcbiAgICB9fSBlbHNlIHtcclxuICAgICAgcmV0dXJuIHJlcy5yZWRpcmVjdChcIi9cIik7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgYXN5bmMgRGVsZXRlKHJlcSwgcmVzKSB7XHJcbiAgICBpZiAocmVxLnNlc3Npb24udXNlci5xdXllbmhhbmcgPT0gXCJBZG1pblwiKSB7IFxyXG4gICAgbGV0IHsgaWQgfSA9IHJlcS5wYXJhbXM7XHJcbiAgICBpZiAoIU51bWJlcihpZCkpIHtcclxuICAgICAgY29uc29sZS5sb2coXCJpZCBub3QgYSBudW1iZXIhISFcIik7XHJcbiAgICB9XHJcbiAgICB0cnkge1xyXG4gICAgICBsZXQgWG9hID0gYXdhaXQgcGhhbnF1eWVuU2VydmljZS5kZWxldGUoaWQpO1xyXG4gICAgICBpZiAoWG9hKSB7XHJcbiAgICAgICAgcmVzLnJlZGlyZWN0KFwiL2FkbWluL3BoYW5xdXllbj9rcT0xJm1lcz0nWMOzYSBUaMOgbmggQ8O0bmcnXCIpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJlcy5yZWRpcmVjdChcIi9hZG1pbi9waGFucXV5ZW4/a3E9MFwiKTtcclxuICAgICAgfVxyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgcmV0dXJuIGVycm9yO1xyXG4gICAgfX0gZWxzZSB7XHJcbiAgICAgIHJldHVybiByZXMucmVkaXJlY3QoXCIvXCIpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc3RhdGljIGFzeW5jIGFkZChyZXEsIHJlcykge1xyXG4gICAgbGV0IGRhdGEgPSB7IC4uLnJlcS5ib2R5IH07XHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCBjcmVhdGVkID0gYXdhaXQgcGhhbnF1eWVuU2VydmljZS5hZGQoZGF0YSk7XHJcbiAgICAgIGlmIChjcmVhdGVkID09IG51bGwpIHtcclxuICAgICAgICByZXMucmVkaXJlY3QoXCIvYWRtaW4vcGhhbnF1eWVuP2txPTBcIik7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmVzLnJlZGlyZWN0KFwiL2FkbWluL3BoYW5xdXllbj9rcT0xJm1lcz0nVGjDqm0gdGjDoG5oIGPDtG5nJ1wiKTtcclxuICAgICAgfVxyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgcmV0dXJuIGVycm9yO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc3RhdGljIGFzeW5jIHVwZGF0ZShyZXEsIHJlcykge1xyXG4gICAgY29uc3QgYWx0ZXJlZCA9IHJlcS5ib2R5O1xyXG4gICAgY29uc3QgeyBpZCB9ID0gcmVxLnBhcmFtcztcclxuICAgIGlmICghTnVtYmVyKGlkKSkge1xyXG4gICAgICByZXR1cm4gcmVzLnJlZGlyZWN0KFwiL2FkbWluL3BoYW5xdXllbj9rcT0wJm1lcz0nSWQgbm90IGEgbnVtYmVyISEhJ1wiKTtcclxuICAgIH1cclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IHVwZGF0ZSA9IGF3YWl0IHBoYW5xdXllblNlcnZpY2UuVXBkYXRlKGlkLCBhbHRlcmVkKTtcclxuICAgICAgaWYgKCF1cGRhdGUpIHtcclxuICAgICAgICByZXMucmVkaXJlY3QoXCIvYWRtaW4vcGhhbnF1eWVuP2txPTBcIik7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmVzLnJlZGlyZWN0KFwiL2FkbWluL3BoYW5xdXllbj9rcT0xXCIpO1xyXG4gICAgICB9XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICByZXR1cm4gZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBwaGFucXV5ZW5Db250cm9sbGVyO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "phanquyenController.js"
      ],
      "names": [
        "phanquyenController",
        "req",
        "res",
        "session",
        "user",
        "quyenhang",
        "phanquyenService",
        "getAll",
        "data",
        "length",
        "render",
        "message",
        "redirect",
        "id",
        "params",
        "Number",
        "console",
        "log",
        "Xoa",
        "body",
        "add",
        "created",
        "altered",
        "Update",
        "update"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;AAAA;;;;;;IAEMA,mB;;;;;;;;;2BACgBC,G,EAAKC,G;;;;;;oBACnBD,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA6B,O;;;;;;AAEzBD,cAAAA,I,GAAOH,GAAG,CAACE,OAAJ,CAAYC,I;;mDACNE,6BAAiBC,MAAjB,E;;;AAAbC,cAAAA,I;;AACN,kBAAIA,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AACnBP,gBAAAA,GAAG,CAACQ,MAAJ,CAAW,4CAAX,EAAyD;AACvDF,kBAAAA,IAAI,EAAJA,IADuD;AAClDJ,kBAAAA,IAAI,EAAJA,IADkD;AAEvDO,kBAAAA,OAAO,EAAE;AAF8C,iBAAzD;AAID,eALD,MAKO;AACLT,gBAAAA,GAAG,CAACQ,MAAJ,CAAW,4CAAX,EAAyD;AACvDF,kBAAAA,IAAI,EAAJA,IADuD;AACjDJ,kBAAAA,IAAI,EAAJA,IADiD;AAEvDO,kBAAAA,OAAO,EAAE;AAF8C,iBAAzD;AAID;;;;;;;;;;;;;;;+CAIMT,GAAG,CAACU,QAAJ,CAAa,GAAb,C;;;;;;;;;;;2BAISX,G,EAAKC,G;;;;;;oBACnBD,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,O;;;;;AAC5BQ,cAAAA,E,GAAOZ,GAAG,CAACa,M,CAAXD,E;;AACN,kBAAI,CAACE,MAAM,CAACF,EAAD,CAAX,EAAiB;AACfG,gBAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD;;;;mDAEiBX,uCAAwBO,EAAxB,C;;;AAAZK,cAAAA,G;;AACJ,kBAAIA,GAAJ,EAAS;AACPhB,gBAAAA,GAAG,CAACU,QAAJ,CAAa,4CAAb;AACD,eAFD,MAEO;AACLV,gBAAAA,GAAG,CAACU,QAAJ,CAAa,uBAAb;AACD;;;;;;;;;;;;;;;gDAIMV,GAAG,CAACU,QAAJ,CAAa,GAAb,C;;;;;;;;;;;wBAIMX,G,EAAKC,G;;;;;;AAChBM,cAAAA,I,qBAAYP,GAAG,CAACkB,I;;;mDAEIb,6BAAiBc,GAAjB,CAAqBZ,IAArB,C;;;AAAhBa,cAAAA,O;;AACN,kBAAIA,OAAO,IAAI,IAAf,EAAqB;AACnBnB,gBAAAA,GAAG,CAACU,QAAJ,CAAa,uBAAb;AACD,eAFD,MAEO;AACLV,gBAAAA,GAAG,CAACU,QAAJ,CAAa,6CAAb;AACD;;;;;;;;;;;;;;;;;;;2BAMeX,G,EAAKC,G;;;;;;AACjBoB,cAAAA,O,GAAUrB,GAAG,CAACkB,I;AACZN,cAAAA,E,GAAOZ,GAAG,CAACa,M,CAAXD,E;;kBACHE,MAAM,CAACF,EAAD,C;;;;;gDACFX,GAAG,CAACU,QAAJ,CAAa,gDAAb,C;;;;;mDAGcN,6BAAiBiB,MAAjB,CAAwBV,EAAxB,EAA4BS,OAA5B,C;;;AAAfE,cAAAA,M;;AACN,kBAAI,CAACA,MAAL,EAAa;AACXtB,gBAAAA,GAAG,CAACU,QAAJ,CAAa,uBAAb;AACD,eAFD,MAEO;AACLV,gBAAAA,GAAG,CAACU,QAAJ,CAAa,uBAAb;AACD;;;;;;;;;;;;;;;;;;;;;eAOQZ,mB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
      "sourcesContent": [
        "import phanquyenService from \"../services/phanquyenService\";\r\n\r\nclass phanquyenController {\r\n  static async getAll(req, res) {\r\n    if (req.session.user.quyenhang ==\"Admin\") { \r\n    try {\r\n      const user = req.session.user\r\n      const data = await phanquyenService.getAll();\r\n      if (data.length > 0) {\r\n        res.render(\"../views/admin/phanquyen/listphanquyen.ejs\", {\r\n          data,user,\r\n          message: 1\r\n        });\r\n      } else {\r\n        res.render(\"../views/admin/phanquyen/listphanquyen.ejs\", {\r\n          data, user,\r\n          message: 0\r\n        });\r\n      }\r\n    } catch (error) {\r\n      return error;\r\n    }} else {\r\n      return res.redirect(\"/\");\r\n    }\r\n  }\r\n\r\n  static async Delete(req, res) {\r\n    if (req.session.user.quyenhang == \"Admin\") { \r\n    let { id } = req.params;\r\n    if (!Number(id)) {\r\n      console.log(\"id not a number!!!\");\r\n    }\r\n    try {\r\n      let Xoa = await phanquyenService.delete(id);\r\n      if (Xoa) {\r\n        res.redirect(\"/admin/phanquyen?kq=1&mes='Xóa Thành Công'\");\r\n      } else {\r\n        res.redirect(\"/admin/phanquyen?kq=0\");\r\n      }\r\n    } catch (error) {\r\n      return error;\r\n    }} else {\r\n      return res.redirect(\"/\");\r\n    }\r\n  }\r\n\r\n  static async add(req, res) {\r\n    let data = { ...req.body };\r\n    try {\r\n      const created = await phanquyenService.add(data);\r\n      if (created == null) {\r\n        res.redirect(\"/admin/phanquyen?kq=0\");\r\n      } else {\r\n        res.redirect(\"/admin/phanquyen?kq=1&mes='Thêm thành công'\");\r\n      }\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  static async update(req, res) {\r\n    const altered = req.body;\r\n    const { id } = req.params;\r\n    if (!Number(id)) {\r\n      return res.redirect(\"/admin/phanquyen?kq=0&mes='Id not a number!!!'\");\r\n    }\r\n    try {\r\n      const update = await phanquyenService.Update(id, altered);\r\n      if (!update) {\r\n        res.redirect(\"/admin/phanquyen?kq=0\");\r\n      } else {\r\n        res.redirect(\"/admin/phanquyen?kq=1\");\r\n      }\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default phanquyenController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1584458437399
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\services\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\services\\\\phanquyenService.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services\\phanquyenService.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services\\phanquyenService.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services\\phanquyenService.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services",
        "sourceFileName": "phanquyenService.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _models = _interopRequireDefault(require(\"../../Model/models\"));\n\nvar phanquyenService =\n/*#__PURE__*/\nfunction () {\n  function phanquyenService() {\n    (0, _classCallCheck2[\"default\"])(this, phanquyenService);\n  }\n\n  (0, _createClass2[\"default\"])(phanquyenService, null, [{\n    key: \"getAll\",\n    value: function getAll() {\n      return _regenerator[\"default\"].async(function getAll$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].phanquyen.findAll());\n\n            case 3:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              throw _context.t0;\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"getByID\",\n    value: function getByID(id) {\n      return _regenerator[\"default\"].async(function getByID$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].phanquyen.findAll({\n                where: {\n                  id: id\n                }\n              }));\n\n            case 3:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              throw _context2.t0;\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(id) {\n      return _regenerator[\"default\"].async(function _delete$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].phanquyen.destroy({\n                where: {\n                  id: id\n                }\n              }));\n\n            case 3:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 6:\n              _context3.prev = 6;\n              _context3.t0 = _context3[\"catch\"](0);\n              throw _context3.t0;\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"Save\",\n    value: function Save(data) {\n      return _regenerator[\"default\"].async(function Save$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].phanquyen.create(data));\n\n            case 3:\n              return _context4.abrupt(\"return\", _context4.sent);\n\n            case 6:\n              _context4.prev = 6;\n              _context4.t0 = _context4[\"catch\"](0);\n              throw _context4.t0;\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"Update\",\n    value: function Update(id, data) {\n      var tk;\n      return _regenerator[\"default\"].async(function Update$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].phanquyen.findOne({\n                where: {\n                  id: id\n                }\n              }));\n\n            case 3:\n              tk = _context5.sent;\n\n              if (!tk) {\n                _context5.next = 8;\n                break;\n              }\n\n              _context5.next = 7;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].phanquyen.update(data, {\n                where: {\n                  id: id\n                }\n              }));\n\n            case 7:\n              return _context5.abrupt(\"return\", data);\n\n            case 8:\n              return _context5.abrupt(\"return\", null);\n\n            case 11:\n              _context5.prev = 11;\n              _context5.t0 = _context5[\"catch\"](0);\n              throw _context5.t0;\n\n            case 14:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 11]]);\n    }\n  }, {\n    key: \"add\",\n    value: function add(data) {\n      var quyenhang, tk;\n      return _regenerator[\"default\"].async(function add$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              quyenhang = data.quyenhang;\n              _context6.next = 4;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].phanquyen.findOne({\n                where: {\n                  quyenhang: quyenhang\n                }\n              }));\n\n            case 4:\n              tk = _context6.sent;\n\n              if (!tk) {\n                _context6.next = 9;\n                break;\n              }\n\n              return _context6.abrupt(\"return\", null);\n\n            case 9:\n              _context6.next = 11;\n              return _regenerator[\"default\"].awrap(_models[\"default\"].phanquyen.create(data));\n\n            case 11:\n              return _context6.abrupt(\"return\", data);\n\n            case 12:\n              _context6.next = 17;\n              break;\n\n            case 14:\n              _context6.prev = 14;\n              _context6.t0 = _context6[\"catch\"](0);\n              throw _context6.t0;\n\n            case 17:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[0, 14]]);\n    }\n  }]);\n  return phanquyenService;\n}();\n\nvar _default = phanquyenService;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBoYW5xdXllblNlcnZpY2UuanMiXSwibmFtZXMiOlsicGhhbnF1eWVuU2VydmljZSIsImRhdGFiYXNlIiwicGhhbnF1eWVuIiwiZmluZEFsbCIsImlkIiwid2hlcmUiLCJkZXN0cm95IiwiZGF0YSIsImNyZWF0ZSIsImZpbmRPbmUiLCJ0ayIsInVwZGF0ZSIsInF1eWVuaGFuZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0lBRU1BLGdCOzs7Ozs7Ozs7Ozs7Ozs7O21EQUdhQyxtQkFBU0MsU0FBVCxDQUFtQkMsT0FBbkIsRTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs0QkFLSUMsRTs7Ozs7OzttREFFSkgsbUJBQVNDLFNBQVQsQ0FBbUJDLE9BQW5CLENBQTJCO0FBQ3RDRSxnQkFBQUEsS0FBSyxFQUFFO0FBQUVELGtCQUFBQSxFQUFFLEVBQUZBO0FBQUY7QUFEK0IsZUFBM0IsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs0QkFRR0EsRTs7Ozs7OzttREFFSEgsbUJBQVNDLFNBQVQsQ0FBbUJJLE9BQW5CLENBQTJCO0FBQ3RDRCxnQkFBQUEsS0FBSyxFQUFFO0FBQUVELGtCQUFBQSxFQUFFLEVBQUZBO0FBQUY7QUFEK0IsZUFBM0IsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt5QkFPQ0csSTs7Ozs7OzttREFFRE4sbUJBQVNDLFNBQVQsQ0FBbUJNLE1BQW5CLENBQTBCRCxJQUExQixDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OzJCQU1HSCxFLEVBQUlHLEk7Ozs7Ozs7O21EQUVMTixtQkFBU0MsU0FBVCxDQUFtQk8sT0FBbkIsQ0FBMkI7QUFDeENKLGdCQUFBQSxLQUFLLEVBQUU7QUFBRUQsa0JBQUFBLEVBQUUsRUFBRkE7QUFBRjtBQURpQyxlQUEzQixDOzs7QUFBWE0sY0FBQUEsRTs7bUJBR0FBLEU7Ozs7OzttREFDSVQsbUJBQVNDLFNBQVQsQ0FBbUJTLE1BQW5CLENBQTBCSixJQUExQixFQUFnQztBQUNwQ0YsZ0JBQUFBLEtBQUssRUFBRTtBQUFFRCxrQkFBQUEsRUFBRSxFQUFGQTtBQUFGO0FBRDZCLGVBQWhDLEM7OztnREFHQ0csSTs7O2dEQUVGLEk7Ozs7Ozs7Ozs7Ozs7Ozs7d0JBTU1BLEk7Ozs7Ozs7QUFFVEssY0FBQUEsUyxHQUFZTCxJQUFJLENBQUNLLFM7O21EQUNOWCxtQkFBU0MsU0FBVCxDQUFtQk8sT0FBbkIsQ0FBMkI7QUFDeENKLGdCQUFBQSxLQUFLLEVBQUU7QUFBRU8sa0JBQUFBLFNBQVMsRUFBVEE7QUFBRjtBQURpQyxlQUEzQixDOzs7QUFBWEYsY0FBQUEsRTs7bUJBR0FBLEU7Ozs7O2dEQUNLLEk7Ozs7bURBRURULG1CQUFTQyxTQUFULENBQW1CTSxNQUFuQixDQUEwQkQsSUFBMUIsQzs7O2dEQUNDQSxJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2VBUUFQLGdCIiwic291cmNlUm9vdCI6IkQ6XFxMdWFuVmFuXFxMdWFuVmFuRDJcXHRydW5ndGFtX2xhbjRcXGFwcHNcXHNlcnZpY2VzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGRhdGFiYXNlIGZyb20gXCIuLi8uLi9Nb2RlbC9tb2RlbHNcIjtcclxuXHJcbmNsYXNzIHBoYW5xdXllblNlcnZpY2Uge1xyXG4gIHN0YXRpYyBhc3luYyBnZXRBbGwoKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICByZXR1cm4gYXdhaXQgZGF0YWJhc2UucGhhbnF1eWVuLmZpbmRBbGwoKTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG4gIH1cclxuICBzdGF0aWMgYXN5bmMgZ2V0QnlJRChpZCkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgcmV0dXJuIGF3YWl0IGRhdGFiYXNlLnBoYW5xdXllbi5maW5kQWxsKHtcclxuICAgICAgICB3aGVyZTogeyBpZCB9XHJcbiAgICAgIH0pO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgYXN5bmMgZGVsZXRlKGlkKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICByZXR1cm4gYXdhaXQgZGF0YWJhc2UucGhhbnF1eWVuLmRlc3Ryb3koe1xyXG4gICAgICAgIHdoZXJlOiB7IGlkIH1cclxuICAgICAgfSk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9XHJcbiAgc3RhdGljIGFzeW5jIFNhdmUoZGF0YSkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgcmV0dXJuIGF3YWl0IGRhdGFiYXNlLnBoYW5xdXllbi5jcmVhdGUoZGF0YSk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHN0YXRpYyBhc3luYyBVcGRhdGUoaWQsIGRhdGEpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGxldCB0ayA9IGF3YWl0IGRhdGFiYXNlLnBoYW5xdXllbi5maW5kT25lKHtcclxuICAgICAgICB3aGVyZTogeyBpZCB9XHJcbiAgICAgIH0pO1xyXG4gICAgICBpZiAodGspIHtcclxuICAgICAgICBhd2FpdCBkYXRhYmFzZS5waGFucXV5ZW4udXBkYXRlKGRhdGEsIHtcclxuICAgICAgICAgIHdoZXJlOiB7IGlkIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4gZGF0YTtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gbnVsbDtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc3RhdGljIGFzeW5jIGFkZChkYXRhKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICBsZXQgcXV5ZW5oYW5nID0gZGF0YS5xdXllbmhhbmc7XHJcbiAgICAgIGxldCB0ayA9IGF3YWl0IGRhdGFiYXNlLnBoYW5xdXllbi5maW5kT25lKHtcclxuICAgICAgICB3aGVyZTogeyBxdXllbmhhbmcgfVxyXG4gICAgICB9KTtcclxuICAgICAgaWYgKHRrKSB7XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgYXdhaXQgZGF0YWJhc2UucGhhbnF1eWVuLmNyZWF0ZShkYXRhKTtcclxuICAgICAgICByZXR1cm4gZGF0YTtcclxuICAgICAgfVxyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBwaGFucXV5ZW5TZXJ2aWNlO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "phanquyenService.js"
      ],
      "names": [
        "phanquyenService",
        "database",
        "phanquyen",
        "findAll",
        "id",
        "where",
        "destroy",
        "data",
        "create",
        "findOne",
        "tk",
        "update",
        "quyenhang"
      ],
      "mappings": ";;;;;;;;;;;;;;;AAAA;;IAEMA,gB;;;;;;;;;;;;;;;;mDAGaC,mBAASC,SAAT,CAAmBC,OAAnB,E;;;;;;;;;;;;;;;;;;;4BAKIC,E;;;;;;;mDAEJH,mBAASC,SAAT,CAAmBC,OAAnB,CAA2B;AACtCE,gBAAAA,KAAK,EAAE;AAAED,kBAAAA,EAAE,EAAFA;AAAF;AAD+B,eAA3B,C;;;;;;;;;;;;;;;;;;;4BAQGA,E;;;;;;;mDAEHH,mBAASC,SAAT,CAAmBI,OAAnB,CAA2B;AACtCD,gBAAAA,KAAK,EAAE;AAAED,kBAAAA,EAAE,EAAFA;AAAF;AAD+B,eAA3B,C;;;;;;;;;;;;;;;;;;;yBAOCG,I;;;;;;;mDAEDN,mBAASC,SAAT,CAAmBM,MAAnB,CAA0BD,IAA1B,C;;;;;;;;;;;;;;;;;;;2BAMGH,E,EAAIG,I;;;;;;;;mDAELN,mBAASC,SAAT,CAAmBO,OAAnB,CAA2B;AACxCJ,gBAAAA,KAAK,EAAE;AAAED,kBAAAA,EAAE,EAAFA;AAAF;AADiC,eAA3B,C;;;AAAXM,cAAAA,E;;mBAGAA,E;;;;;;mDACIT,mBAASC,SAAT,CAAmBS,MAAnB,CAA0BJ,IAA1B,EAAgC;AACpCF,gBAAAA,KAAK,EAAE;AAAED,kBAAAA,EAAE,EAAFA;AAAF;AAD6B,eAAhC,C;;;gDAGCG,I;;;gDAEF,I;;;;;;;;;;;;;;;;wBAMMA,I;;;;;;;AAETK,cAAAA,S,GAAYL,IAAI,CAACK,S;;mDACNX,mBAASC,SAAT,CAAmBO,OAAnB,CAA2B;AACxCJ,gBAAAA,KAAK,EAAE;AAAEO,kBAAAA,SAAS,EAATA;AAAF;AADiC,eAA3B,C;;;AAAXF,cAAAA,E;;mBAGAA,E;;;;;gDACK,I;;;;mDAEDT,mBAASC,SAAT,CAAmBM,MAAnB,CAA0BD,IAA1B,C;;;gDACCA,I;;;;;;;;;;;;;;;;;;;;;;eAQAP,gB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\services",
      "sourcesContent": [
        "import database from \"../../Model/models\";\r\n\r\nclass phanquyenService {\r\n  static async getAll() {\r\n    try {\r\n      return await database.phanquyen.findAll();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  static async getByID(id) {\r\n    try {\r\n      return await database.phanquyen.findAll({\r\n        where: { id }\r\n      });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async delete(id) {\r\n    try {\r\n      return await database.phanquyen.destroy({\r\n        where: { id }\r\n      });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  static async Save(data) {\r\n    try {\r\n      return await database.phanquyen.create(data);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async Update(id, data) {\r\n    try {\r\n      let tk = await database.phanquyen.findOne({\r\n        where: { id }\r\n      });\r\n      if (tk) {\r\n        await database.phanquyen.update(data, {\r\n          where: { id }\r\n        });\r\n        return data;\r\n      }\r\n      return null;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async add(data) {\r\n    try {\r\n      let quyenhang = data.quyenhang;\r\n      let tk = await database.phanquyen.findOne({\r\n        where: { quyenhang }\r\n      });\r\n      if (tk) {\r\n        return null;\r\n      } else {\r\n        await database.phanquyen.create(data);\r\n        return data;\r\n      }\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default phanquyenService;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1578151594635
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\\\\dienDanroute.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\dienDanroute.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\dienDanroute.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\dienDanroute.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
        "sourceFileName": "dienDanroute.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _express = require(\"express\");\n\nvar _dienDanController = _interopRequireDefault(require(\"../controllers/dienDanController\"));\n\nvar router = (0, _express.Router)();\nrouter.route(\"/\").get(_dienDanController[\"default\"].getAll);\nrouter.route(\"/:id\").get(_dienDanController[\"default\"].Delete);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRpZW5EYW5yb3V0ZS5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJyb3V0ZSIsImdldCIsImRpZW5kYW5Db250cm9sbGVyIiwiZ2V0QWxsIiwiRGVsZXRlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUNBOztBQUVBLElBQU1BLE1BQU0sR0FBRyxzQkFBZjtBQUVBQSxNQUFNLENBQ0hDLEtBREgsQ0FDUyxHQURULEVBRUdDLEdBRkgsQ0FFT0MsOEJBQWtCQyxNQUZ6QjtBQUdBSixNQUFNLENBQ0hDLEtBREgsQ0FDUyxNQURULEVBRUdDLEdBRkgsQ0FFT0MsOEJBQWtCRSxNQUZ6QjtBQUdBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJQLE1BQWpCIiwic291cmNlUm9vdCI6IkQ6XFxMdWFuVmFuXFxMdWFuVmFuRDJcXHRydW5ndGFtX2xhbjRcXGFwcHNcXHJvdXRlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb3V0ZXIgfSBmcm9tIFwiZXhwcmVzc1wiO1xyXG5pbXBvcnQgZGllbmRhbkNvbnRyb2xsZXIgZnJvbSBcIi4uL2NvbnRyb2xsZXJzL2RpZW5EYW5Db250cm9sbGVyXCI7XHJcblxyXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKTtcclxuXHJcbnJvdXRlclxyXG4gIC5yb3V0ZShcIi9cIilcclxuICAuZ2V0KGRpZW5kYW5Db250cm9sbGVyLmdldEFsbCkgIFxyXG5yb3V0ZXJcclxuICAucm91dGUoXCIvOmlkXCIpIFxyXG4gIC5nZXQoZGllbmRhbkNvbnRyb2xsZXIuRGVsZXRlKTtcclxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "dienDanroute.js"
      ],
      "names": [
        "router",
        "route",
        "get",
        "diendanController",
        "getAll",
        "Delete",
        "module",
        "exports"
      ],
      "mappings": ";;;;AAAA;;AACA;;AAEA,IAAMA,MAAM,GAAG,sBAAf;AAEAA,MAAM,CACHC,KADH,CACS,GADT,EAEGC,GAFH,CAEOC,8BAAkBC,MAFzB;AAGAJ,MAAM,CACHC,KADH,CACS,MADT,EAEGC,GAFH,CAEOC,8BAAkBE,MAFzB;AAGAC,MAAM,CAACC,OAAP,GAAiBP,MAAjB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
      "sourcesContent": [
        "import { Router } from \"express\";\r\nimport diendanController from \"../controllers/dienDanController\";\r\n\r\nconst router = Router();\r\n\r\nrouter\r\n  .route(\"/\")\r\n  .get(diendanController.getAll)  \r\nrouter\r\n  .route(\"/:id\") \r\n  .get(diendanController.Delete);\r\nmodule.exports = router;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1583594715215
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\\\\dienDanController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\dienDanController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\dienDanController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\dienDanController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
        "sourceFileName": "dienDanController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _expressValidator = require(\"express-validator\");\n\nvar _dienDanService = _interopRequireDefault(require(\"../services/dienDanService\"));\n\nvar diendanController =\n/*#__PURE__*/\nfunction () {\n  function diendanController() {\n    (0, _classCallCheck2[\"default\"])(this, diendanController);\n  }\n\n  (0, _createClass2[\"default\"])(diendanController, null, [{\n    key: \"getAll\",\n    value: function getAll(req, res) {\n      var user, data1, data;\n      return _regenerator[\"default\"].async(function getAll$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\")) {\n                _context.next = 16;\n                break;\n              }\n\n              _context.prev = 1;\n              user = req.session.user;\n              _context.next = 5;\n              return _regenerator[\"default\"].awrap(_dienDanService[\"default\"].getAllAd());\n\n            case 5:\n              data1 = _context.sent;\n              data = data1[0];\n\n              if (data.length > 0) {\n                res.render(\"../views/admin/forum/listforum.ejs\", {\n                  data: data,\n                  user: user\n                });\n              } else {\n                res.render(\"../views/admin/forum/listforum.ejs\", {\n                  data: data,\n                  user: user,\n                  message: \"Khong co hoc vien nao\"\n                });\n              }\n\n              return _context.abrupt(\"return\", 0);\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](1);\n              return _context.abrupt(\"return\", _context.t0);\n\n            case 14:\n              _context.next = 17;\n              break;\n\n            case 16:\n              return _context.abrupt(\"return\", res.redirect(\"/\"));\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 11]]);\n    }\n  }, {\n    key: \"Delete\",\n    value: function Delete(req, res) {\n      var id, Xoa;\n      return _regenerator[\"default\"].async(function Delete$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\")) {\n                _context2.next = 16;\n                break;\n              }\n\n              id = req.params.id;\n\n              if (!Number(id)) {\n                res.redirect(\"/admin/diendan?kq=0&mes=Lỗi dữ liệu !!!\");\n              }\n\n              _context2.prev = 3;\n              _context2.next = 6;\n              return _regenerator[\"default\"].awrap(_dienDanService[\"default\"][\"delete\"](id));\n\n            case 6:\n              Xoa = _context2.sent;\n\n              if (Xoa) {\n                res.redirect(\"/admin/diendan?kq=1&mes=Thành Công!!\");\n              } else {\n                res.redirect(\"/admin/diendan?kq=0&mes=Thất Bại!!!\");\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](3);\n              return _context2.abrupt(\"return\", _context2.t0);\n\n            case 14:\n              _context2.next = 17;\n              break;\n\n            case 16:\n              return _context2.abrupt(\"return\", res.redirect(\"/\"));\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[3, 11]]);\n    }\n  }]);\n  return diendanController;\n}();\n\nvar _default = diendanController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRpZW5EYW5Db250cm9sbGVyLmpzIl0sIm5hbWVzIjpbImRpZW5kYW5Db250cm9sbGVyIiwicmVxIiwicmVzIiwic2Vzc2lvbiIsInVzZXIiLCJxdXllbmhhbmciLCJkaWVuZGFuU2VydmljZSIsImdldEFsbEFkIiwiZGF0YTEiLCJkYXRhIiwibGVuZ3RoIiwicmVuZGVyIiwibWVzc2FnZSIsInJlZGlyZWN0IiwiaWQiLCJwYXJhbXMiLCJOdW1iZXIiLCJYb2EiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztBQUVBOztJQUVNQSxpQjs7Ozs7Ozs7OzJCQUNnQkMsRyxFQUFLQyxHOzs7Ozs7b0JBQ25CRCxHQUFHLENBQUNFLE9BQUosQ0FBWUMsSUFBWixDQUFpQkMsU0FBakIsSUFBOEIsT0FBOUIsSUFBeUNKLEdBQUcsQ0FBQ0UsT0FBSixDQUFZQyxJQUFaLENBQWlCQyxTQUFqQixJQUE4QixXOzs7Ozs7QUFFakVELGNBQUFBLEksR0FBT0gsR0FBRyxDQUFDRSxPQUFKLENBQVlDLEk7O21EQUNMRSwyQkFBZUMsUUFBZixFOzs7QUFBZEMsY0FBQUEsSztBQUNGQyxjQUFBQSxJLEdBQU9ELEtBQUssQ0FBQyxDQUFELEM7O0FBQ2hCLGtCQUFJQyxJQUFJLENBQUNDLE1BQUwsR0FBYyxDQUFsQixFQUFxQjtBQUNuQlIsZ0JBQUFBLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLG9DQUFYLEVBQWlEO0FBQUVGLGtCQUFBQSxJQUFJLEVBQUpBLElBQUY7QUFBU0wsa0JBQUFBLElBQUksRUFBSkE7QUFBVCxpQkFBakQ7QUFDRCxlQUZELE1BRU87QUFDTEYsZ0JBQUFBLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLG9DQUFYLEVBQWlEO0FBQy9DRixrQkFBQUEsSUFBSSxFQUFKQSxJQUQrQztBQUN6Q0wsa0JBQUFBLElBQUksRUFBSkEsSUFEeUM7QUFFL0NRLGtCQUFBQSxPQUFPLEVBQUU7QUFGc0MsaUJBQWpEO0FBSUQ7OytDQUNNLEM7Ozs7Ozs7Ozs7OzsrQ0FLRlYsR0FBRyxDQUFDVyxRQUFKLENBQWEsR0FBYixDOzs7Ozs7Ozs7OzsyQkFJU1osRyxFQUFLQyxHOzs7Ozs7b0JBQ25CRCxHQUFHLENBQUNFLE9BQUosQ0FBWUMsSUFBWixDQUFpQkMsU0FBakIsSUFBOEIsT0FBOUIsSUFBeUNKLEdBQUcsQ0FBQ0UsT0FBSixDQUFZQyxJQUFaLENBQWlCQyxTQUFqQixJQUE4QixXOzs7OztBQUNuRVMsY0FBQUEsRSxHQUFPYixHQUFHLENBQUNjLE0sQ0FBWEQsRTs7QUFDTixrQkFBSSxDQUFDRSxNQUFNLENBQUNGLEVBQUQsQ0FBWCxFQUFpQjtBQUNmWixnQkFBQUEsR0FBRyxDQUFDVyxRQUFKLENBQWEseUNBQWI7QUFDRDs7OzttREFFaUJQLHFDQUFzQlEsRUFBdEIsQzs7O0FBQVpHLGNBQUFBLEc7O0FBQ0osa0JBQUlBLEdBQUosRUFBUztBQUNQZixnQkFBQUEsR0FBRyxDQUFDVyxRQUFKLENBQWEsc0NBQWI7QUFDRCxlQUZELE1BRU87QUFDTFgsZ0JBQUFBLEdBQUcsQ0FBQ1csUUFBSixDQUFhLHFDQUFiO0FBQ0Q7Ozs7Ozs7Ozs7Ozs7O2dEQU1JWCxHQUFHLENBQUNXLFFBQUosQ0FBYSxHQUFiLEM7Ozs7Ozs7Ozs7Ozs7ZUFNRWIsaUIiLCJzb3VyY2VSb290IjoiRDpcXEx1YW5WYW5cXEx1YW5WYW5EMlxcdHJ1bmd0YW1fbGFuNFxcYXBwc1xcY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB2YWxpZGF0aW9uUmVzdWx0IH0gZnJvbSBcImV4cHJlc3MtdmFsaWRhdG9yXCI7XHJcblxyXG5pbXBvcnQgZGllbmRhblNlcnZpY2UgZnJvbSBcIi4uL3NlcnZpY2VzL2RpZW5EYW5TZXJ2aWNlXCI7XHJcblxyXG5jbGFzcyBkaWVuZGFuQ29udHJvbGxlciB7XHJcbiAgc3RhdGljIGFzeW5jIGdldEFsbChyZXEsIHJlcykge1xyXG4gICAgaWYgKHJlcS5zZXNzaW9uLnVzZXIucXV5ZW5oYW5nID09IFwiQWRtaW5cIiB8fCByZXEuc2Vzc2lvbi51c2VyLnF1eWVuaGFuZyA9PSBcIk5ow6JuIFZpw6puXCIpIHtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCB1c2VyID0gcmVxLnNlc3Npb24udXNlclxyXG4gICAgICAgIGNvbnN0IGRhdGExID0gYXdhaXQgZGllbmRhblNlcnZpY2UuZ2V0QWxsQWQoKTtcclxuICAgICAgICBsZXQgZGF0YSA9IGRhdGExWzBdO1xyXG4gICAgICAgIGlmIChkYXRhLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgIHJlcy5yZW5kZXIoXCIuLi92aWV3cy9hZG1pbi9mb3J1bS9saXN0Zm9ydW0uZWpzXCIsIHsgZGF0YSAsIHVzZXJ9KTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgcmVzLnJlbmRlcihcIi4uL3ZpZXdzL2FkbWluL2ZvcnVtL2xpc3Rmb3J1bS5lanNcIiwge1xyXG4gICAgICAgICAgICBkYXRhLCB1c2VyLFxyXG4gICAgICAgICAgICBtZXNzYWdlOiBcIktob25nIGNvIGhvYyB2aWVuIG5hb1wiXHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIDA7XHJcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgcmV0dXJuIGVycm9yO1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gcmVzLnJlZGlyZWN0KFwiL1wiKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHN0YXRpYyBhc3luYyBEZWxldGUocmVxLCByZXMpIHtcclxuICAgIGlmIChyZXEuc2Vzc2lvbi51c2VyLnF1eWVuaGFuZyA9PSBcIkFkbWluXCIgfHwgcmVxLnNlc3Npb24udXNlci5xdXllbmhhbmcgPT0gXCJOaMOibiBWacOqblwiKSB7XHJcbiAgICAgIGxldCB7IGlkIH0gPSByZXEucGFyYW1zO1xyXG4gICAgICBpZiAoIU51bWJlcihpZCkpIHsgICAgICAgIFxyXG4gICAgICAgIHJlcy5yZWRpcmVjdChcIi9hZG1pbi9kaWVuZGFuP2txPTAmbWVzPUzhu5dpIGThu68gbGnhu4d1ICEhIVwiKTtcclxuICAgICAgfVxyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGxldCBYb2EgPSBhd2FpdCBkaWVuZGFuU2VydmljZS5kZWxldGUoaWQpO1xyXG4gICAgICAgIGlmIChYb2EpIHtcclxuICAgICAgICAgIHJlcy5yZWRpcmVjdChcIi9hZG1pbi9kaWVuZGFuP2txPTEmbWVzPVRow6BuaCBDw7RuZyEhXCIpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICByZXMucmVkaXJlY3QoXCIvYWRtaW4vZGllbmRhbj9rcT0wJm1lcz1UaOG6pXQgQuG6oWkhISFcIik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICByZXR1cm4gZXJyb3I7XHJcbiAgICAgIH1cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiByZXMucmVkaXJlY3QoXCIvXCIpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGRpZW5kYW5Db250cm9sbGVyO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "dienDanController.js"
      ],
      "names": [
        "diendanController",
        "req",
        "res",
        "session",
        "user",
        "quyenhang",
        "diendanService",
        "getAllAd",
        "data1",
        "data",
        "length",
        "render",
        "message",
        "redirect",
        "id",
        "params",
        "Number",
        "Xoa"
      ],
      "mappings": ";;;;;;;;;;;;;;;AAAA;;AAEA;;IAEMA,iB;;;;;;;;;2BACgBC,G,EAAKC,G;;;;;;oBACnBD,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,OAA9B,IAAyCJ,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,W;;;;;;AAEjED,cAAAA,I,GAAOH,GAAG,CAACE,OAAJ,CAAYC,I;;mDACLE,2BAAeC,QAAf,E;;;AAAdC,cAAAA,K;AACFC,cAAAA,I,GAAOD,KAAK,CAAC,CAAD,C;;AAChB,kBAAIC,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AACnBR,gBAAAA,GAAG,CAACS,MAAJ,CAAW,oCAAX,EAAiD;AAAEF,kBAAAA,IAAI,EAAJA,IAAF;AAASL,kBAAAA,IAAI,EAAJA;AAAT,iBAAjD;AACD,eAFD,MAEO;AACLF,gBAAAA,GAAG,CAACS,MAAJ,CAAW,oCAAX,EAAiD;AAC/CF,kBAAAA,IAAI,EAAJA,IAD+C;AACzCL,kBAAAA,IAAI,EAAJA,IADyC;AAE/CQ,kBAAAA,OAAO,EAAE;AAFsC,iBAAjD;AAID;;+CACM,C;;;;;;;;;;;;+CAKFV,GAAG,CAACW,QAAJ,CAAa,GAAb,C;;;;;;;;;;;2BAISZ,G,EAAKC,G;;;;;;oBACnBD,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,OAA9B,IAAyCJ,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,W;;;;;AACnES,cAAAA,E,GAAOb,GAAG,CAACc,M,CAAXD,E;;AACN,kBAAI,CAACE,MAAM,CAACF,EAAD,CAAX,EAAiB;AACfZ,gBAAAA,GAAG,CAACW,QAAJ,CAAa,yCAAb;AACD;;;;mDAEiBP,qCAAsBQ,EAAtB,C;;;AAAZG,cAAAA,G;;AACJ,kBAAIA,GAAJ,EAAS;AACPf,gBAAAA,GAAG,CAACW,QAAJ,CAAa,sCAAb;AACD,eAFD,MAEO;AACLX,gBAAAA,GAAG,CAACW,QAAJ,CAAa,qCAAb;AACD;;;;;;;;;;;;;;gDAMIX,GAAG,CAACW,QAAJ,CAAa,GAAb,C;;;;;;;;;;;;;eAMEb,iB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
      "sourcesContent": [
        "import { validationResult } from \"express-validator\";\r\n\r\nimport diendanService from \"../services/dienDanService\";\r\n\r\nclass diendanController {\r\n  static async getAll(req, res) {\r\n    if (req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\") {\r\n      try {\r\n        const user = req.session.user\r\n        const data1 = await diendanService.getAllAd();\r\n        let data = data1[0];\r\n        if (data.length > 0) {\r\n          res.render(\"../views/admin/forum/listforum.ejs\", { data , user});\r\n        } else {\r\n          res.render(\"../views/admin/forum/listforum.ejs\", {\r\n            data, user,\r\n            message: \"Khong co hoc vien nao\"\r\n          });\r\n        }\r\n        return 0;\r\n      } catch (error) {\r\n        return error;\r\n      }\r\n    } else {\r\n      return res.redirect(\"/\");\r\n    }\r\n  }\r\n\r\n  static async Delete(req, res) {\r\n    if (req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\") {\r\n      let { id } = req.params;\r\n      if (!Number(id)) {        \r\n        res.redirect(\"/admin/diendan?kq=0&mes=Lỗi dữ liệu !!!\");\r\n      }\r\n      try {\r\n        let Xoa = await diendanService.delete(id);\r\n        if (Xoa) {\r\n          res.redirect(\"/admin/diendan?kq=1&mes=Thành Công!!\");\r\n        } else {\r\n          res.redirect(\"/admin/diendan?kq=0&mes=Thất Bại!!!\");\r\n        }\r\n        return;\r\n      } catch (error) {\r\n        return error;\r\n      }\r\n    } else {\r\n      return res.redirect(\"/\");\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default diendanController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1584458328879
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\\\\taiKhoanroute.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\taiKhoanroute.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\taiKhoanroute.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\taiKhoanroute.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
        "sourceFileName": "taiKhoanroute.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _express = require(\"express\");\n\nvar _taiKhoanController = _interopRequireDefault(require(\"../controllers/taiKhoanController\"));\n\nvar router = (0, _express.Router)();\nrouter.route(\"/:quyenhang\").get(_taiKhoanController[\"default\"].getAllTK);\nrouter.route(\"/\").post(_taiKhoanController[\"default\"].addTK);\nrouter.route(\"/:quyenhang/:id\").post(_taiKhoanController[\"default\"].updatedtk).get(_taiKhoanController[\"default\"].DeleteTK); //router.get(\"/log\", middleware.checkToken);\n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhaUtob2Fucm91dGUuanMiXSwibmFtZXMiOlsicm91dGVyIiwicm91dGUiLCJnZXQiLCJ0YWlLaG9hbkNvbnRyb2xsZXIiLCJnZXRBbGxUSyIsInBvc3QiLCJhZGRUSyIsInVwZGF0ZWR0ayIsIkRlbGV0ZVRLIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUVBOztBQUVBLElBQU1BLE1BQU0sR0FBRyxzQkFBZjtBQUVBQSxNQUFNLENBQUNDLEtBQVAsQ0FBYSxhQUFiLEVBQTRCQyxHQUE1QixDQUFnQ0MsK0JBQW1CQyxRQUFuRDtBQUVBSixNQUFNLENBQUNDLEtBQVAsQ0FBYSxHQUFiLEVBQWtCSSxJQUFsQixDQUF1QkYsK0JBQW1CRyxLQUExQztBQUNBTixNQUFNLENBQ0hDLEtBREgsQ0FDUyxpQkFEVCxFQUVHSSxJQUZILENBRVFGLCtCQUFtQkksU0FGM0IsRUFHR0wsR0FISCxDQUdPQywrQkFBbUJLLFFBSDFCLEUsQ0FLQTs7QUFDQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCVixNQUFqQiIsInNvdXJjZVJvb3QiOiJEOlxcTHVhblZhblxcTHVhblZhbkQyXFx0cnVuZ3RhbV9sYW40XFxhcHBzXFxyb3V0ZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyIH0gZnJvbSBcImV4cHJlc3NcIjtcclxuXHJcbmltcG9ydCB0YWlLaG9hbkNvbnRyb2xsZXIgZnJvbSBcIi4uL2NvbnRyb2xsZXJzL3RhaUtob2FuQ29udHJvbGxlclwiO1xyXG5cclxuY29uc3Qgcm91dGVyID0gUm91dGVyKCk7XHJcblxyXG5yb3V0ZXIucm91dGUoXCIvOnF1eWVuaGFuZ1wiKS5nZXQodGFpS2hvYW5Db250cm9sbGVyLmdldEFsbFRLKTtcclxuXHJcbnJvdXRlci5yb3V0ZShcIi9cIikucG9zdCh0YWlLaG9hbkNvbnRyb2xsZXIuYWRkVEspO1xyXG5yb3V0ZXJcclxuICAucm91dGUoXCIvOnF1eWVuaGFuZy86aWRcIilcclxuICAucG9zdCh0YWlLaG9hbkNvbnRyb2xsZXIudXBkYXRlZHRrKVxyXG4gIC5nZXQodGFpS2hvYW5Db250cm9sbGVyLkRlbGV0ZVRLKTtcclxuXHJcbi8vcm91dGVyLmdldChcIi9sb2dcIiwgbWlkZGxld2FyZS5jaGVja1Rva2VuKTtcclxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "taiKhoanroute.js"
      ],
      "names": [
        "router",
        "route",
        "get",
        "taiKhoanController",
        "getAllTK",
        "post",
        "addTK",
        "updatedtk",
        "DeleteTK",
        "module",
        "exports"
      ],
      "mappings": ";;;;AAAA;;AAEA;;AAEA,IAAMA,MAAM,GAAG,sBAAf;AAEAA,MAAM,CAACC,KAAP,CAAa,aAAb,EAA4BC,GAA5B,CAAgCC,+BAAmBC,QAAnD;AAEAJ,MAAM,CAACC,KAAP,CAAa,GAAb,EAAkBI,IAAlB,CAAuBF,+BAAmBG,KAA1C;AACAN,MAAM,CACHC,KADH,CACS,iBADT,EAEGI,IAFH,CAEQF,+BAAmBI,SAF3B,EAGGL,GAHH,CAGOC,+BAAmBK,QAH1B,E,CAKA;;AACAC,MAAM,CAACC,OAAP,GAAiBV,MAAjB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
      "sourcesContent": [
        "import { Router } from \"express\";\r\n\r\nimport taiKhoanController from \"../controllers/taiKhoanController\";\r\n\r\nconst router = Router();\r\n\r\nrouter.route(\"/:quyenhang\").get(taiKhoanController.getAllTK);\r\n\r\nrouter.route(\"/\").post(taiKhoanController.addTK);\r\nrouter\r\n  .route(\"/:quyenhang/:id\")\r\n  .post(taiKhoanController.updatedtk)\r\n  .get(taiKhoanController.DeleteTK);\r\n\r\n//router.get(\"/log\", middleware.checkToken);\r\nmodule.exports = router;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1580915850518
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\\\\taiKhoanController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\taiKhoanController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\taiKhoanController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\taiKhoanController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
        "sourceFileName": "taiKhoanController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _bcryptjs = _interopRequireDefault(require(\"bcryptjs\"));\n\nvar _taiKhoanService = _interopRequireDefault(require(\"../services/taiKhoanService\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar taiKhoanController =\n/*#__PURE__*/\nfunction () {\n  function taiKhoanController() {\n    (0, _classCallCheck2[\"default\"])(this, taiKhoanController);\n  }\n\n  (0, _createClass2[\"default\"])(taiKhoanController, null, [{\n    key: \"getAllTK\",\n    value: function getAllTK(req, res) {\n      var user, quyenhang, data, _phanquyen;\n\n      return _regenerator[\"default\"].async(function getAllTK$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(req.session.user.quyenhang == \"Admin\")) {\n                _context.next = 18;\n                break;\n              }\n\n              _context.prev = 1;\n              user = req.session.user;\n              quyenhang = req.params.quyenhang;\n              _context.next = 6;\n              return _regenerator[\"default\"].awrap(_taiKhoanService[\"default\"].getAllTaiKhoan(quyenhang));\n\n            case 6:\n              data = _context.sent;\n              _context.next = 9;\n              return _regenerator[\"default\"].awrap(_taiKhoanService[\"default\"].getAllquyen(quyenhang));\n\n            case 9:\n              _phanquyen = _context.sent;\n\n              if (data.length > 0) {\n                res.render(\"../views/admin/taikhoan/listtaikhoan.ejs\", {\n                  data: data,\n                  user: user,\n                  phanquyen: _phanquyen,\n                  message: 1\n                });\n              } else {\n                res.render(\"../views/admin/taikhoan/listtaikhoan.ejs\", {\n                  data: data,\n                  user: user,\n                  phanquyen: _phanquyen,\n                  message: 0\n                });\n              }\n\n              _context.next = 16;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](1);\n              return _context.abrupt(\"return\", _context.t0);\n\n            case 16:\n              _context.next = 19;\n              break;\n\n            case 18:\n              return _context.abrupt(\"return\", res.redirect(\"/\"));\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 13]]);\n    }\n  }, {\n    key: \"DeleteTK\",\n    value: function DeleteTK(req, res) {\n      var _req$params, id, quyenhang, XoaTK;\n\n      return _regenerator[\"default\"].async(function DeleteTK$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(req.session.user.quyenhang == \"Admin\")) {\n                _context2.next = 15;\n                break;\n              }\n\n              _req$params = req.params, id = _req$params.id, quyenhang = _req$params.quyenhang;\n\n              if (!Number(id)) {\n                console.log(\"id Not a Number!!!\");\n              }\n\n              _context2.prev = 3;\n              _context2.next = 6;\n              return _regenerator[\"default\"].awrap(_taiKhoanService[\"default\"].deleteTK(id));\n\n            case 6:\n              XoaTK = _context2.sent;\n\n              if (XoaTK) {\n                res.redirect(\"/admin/taikhoan/\".concat(quyenhang));\n              } else {\n                res.redirect(\"/admin/taikhoan/\".concat(quyenhang));\n              }\n\n              _context2.next = 13;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](3);\n              return _context2.abrupt(\"return\", _context2.t0);\n\n            case 13:\n              _context2.next = 16;\n              break;\n\n            case 15:\n              return _context2.abrupt(\"return\", res.redirect(\"/\"));\n\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[3, 10]]);\n    }\n  }, {\n    key: \"addTK\",\n    value: function addTK(req, res) {\n      var salt, hash, _req$body, quyenhang, data, createdTK;\n\n      return _regenerator[\"default\"].async(function addTK$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              salt = _bcryptjs[\"default\"].genSaltSync(10);\n              hash = _bcryptjs[\"default\"].hashSync(req.body.matkhau, salt);\n              _req$body = _objectSpread({}, req.body), quyenhang = _req$body.quyenhang;\n              data = _objectSpread({}, req.body, {\n                matkhau: hash\n              });\n              _context3.prev = 4;\n              _context3.next = 7;\n              return _regenerator[\"default\"].awrap(_taiKhoanService[\"default\"].add(data));\n\n            case 7:\n              createdTK = _context3.sent;\n\n              if (createdTK) {\n                res.redirect(\"/admin/taikhoan/\" + quyenhang + \"?kq=1\");\n              } else {\n                res.redirect(\"/admin/taikhoan/\" + quyenhang + \"?kq=0\");\n              }\n\n              _context3.next = 14;\n              break;\n\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](4);\n              return _context3.abrupt(\"return\", _context3.t0);\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[4, 11]]);\n    }\n  }, {\n    key: \"updatedtk\",\n    value: function updatedtk(req, res) {\n      var alteredtk, _req$body2, quyenhang, id, updatetk;\n\n      return _regenerator[\"default\"].async(function updatedtk$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              alteredtk = req.body;\n              _req$body2 = _objectSpread({}, req.body), quyenhang = _req$body2.quyenhang;\n              id = req.params.id;\n\n              if (!Number(id)) {\n                console.log(\"ID Not a Number!!!\");\n              }\n\n              _context4.prev = 4;\n              _context4.next = 7;\n              return _regenerator[\"default\"].awrap(_taiKhoanService[\"default\"].UpdateTK(id, alteredtk));\n\n            case 7:\n              updatetk = _context4.sent;\n\n              if (!updatetk) {\n                res.redirect(\"/admin/taikhoan/\" + quyenhang + \"?kq=0\");\n              } else {\n                res.redirect(\"/admin/taikhoan/\" + quyenhang + \"?kq=1\");\n              }\n\n              _context4.next = 14;\n              break;\n\n            case 11:\n              _context4.prev = 11;\n              _context4.t0 = _context4[\"catch\"](4);\n              return _context4.abrupt(\"return\", _context4.t0);\n\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[4, 11]]);\n    }\n  }, {\n    key: \"getATk\",\n    value: function getATk(req, res) {\n      var user, id, data, thetk;\n      return _regenerator[\"default\"].async(function getATk$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              if (!(req.session.user.quyenhang == \"Admin\")) {\n                _context5.next = 16;\n                break;\n              }\n\n              _context5.prev = 1;\n              user = req.session.user;\n              id = req.session.user.id;\n              data = req.session.user;\n              _context5.next = 7;\n              return _regenerator[\"default\"].awrap(_taiKhoanService[\"default\"].getByID(id));\n\n            case 7:\n              thetk = _context5.sent;\n\n              if (!thetk) {\n                res.render(\"../views/admin/taikhoan/trangcanhan.ejs\", {\n                  data: data,\n                  user: user,\n                  phanquyen: phanquyen,\n                  message: 0\n                });\n              } else {\n                res.render(\"../views/admin/taikhoan/trangcanhan.ejs\", {\n                  data: data,\n                  user: user,\n                  message: 1\n                });\n              }\n\n              _context5.next = 14;\n              break;\n\n            case 11:\n              _context5.prev = 11;\n              _context5.t0 = _context5[\"catch\"](1);\n              return _context5.abrupt(\"return\", _context5.t0);\n\n            case 14:\n              _context5.next = 17;\n              break;\n\n            case 16:\n              return _context5.abrupt(\"return\", res.redirect(\"/\"));\n\n            case 17:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[1, 11]]);\n    }\n  }]);\n  return taiKhoanController;\n}();\n\nvar _default = taiKhoanController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "taiKhoanController.js"
      ],
      "names": [
        "taiKhoanController",
        "req",
        "res",
        "session",
        "user",
        "quyenhang",
        "params",
        "taiKhoanService",
        "getAllTaiKhoan",
        "data",
        "getAllquyen",
        "phanquyen",
        "length",
        "render",
        "message",
        "redirect",
        "id",
        "Number",
        "console",
        "log",
        "deleteTK",
        "XoaTK",
        "salt",
        "bcrypt",
        "genSaltSync",
        "hash",
        "hashSync",
        "body",
        "matkhau",
        "add",
        "createdTK",
        "alteredtk",
        "UpdateTK",
        "updatetk",
        "getByID",
        "thetk"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;AAAA;;AAEA;;;;;;IAEMA,kB;;;;;;;;;6BACkBC,G,EAAKC,G;;;;;;;oBACrBD,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,O;;;;;;AAE1BD,cAAAA,I,GAAOH,GAAG,CAACE,OAAJ,CAAYC,I;AACnBC,cAAAA,S,GAAcJ,GAAG,CAACK,M,CAAlBD,S;;mDACaE,4BAAgBC,cAAhB,CAA+BH,SAA/B,C;;;AAAbI,cAAAA,I;;mDACkBF,4BAAgBG,WAAhB,CAA4BL,SAA5B,C;;;AAAlBM,cAAAA,U;;AACN,kBAAIF,IAAI,CAACG,MAAL,GAAc,CAAlB,EAAqB;AACnBV,gBAAAA,GAAG,CAACW,MAAJ,CAAW,0CAAX,EAAuD;AACrDJ,kBAAAA,IAAI,EAAJA,IADqD;AAC/CL,kBAAAA,IAAI,EAAJA,IAD+C;AAErDO,kBAAAA,SAAS,EAATA,UAFqD;AAGrDG,kBAAAA,OAAO,EAAE;AAH4C,iBAAvD;AAKD,eAND,MAMO;AACLZ,gBAAAA,GAAG,CAACW,MAAJ,CAAW,0CAAX,EAAuD;AACrDJ,kBAAAA,IAAI,EAAJA,IADqD;AAC/CL,kBAAAA,IAAI,EAAJA,IAD+C;AAErDO,kBAAAA,SAAS,EAATA,UAFqD;AAGrDG,kBAAAA,OAAO,EAAE;AAH4C,iBAAvD;AAKD;;;;;;;;;;;;;;;+CAIMZ,GAAG,CAACa,QAAJ,CAAa,GAAb,C;;;;;;;;;;;6BAIWd,G,EAAKC,G;;;;;;;oBACtBD,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,O;;;;;4BACVJ,GAAG,CAACK,M,EAArBU,E,eAAAA,E,EAAGX,S,eAAAA,S;;AACT,kBAAI,CAACY,MAAM,CAACD,EAAD,CAAX,EAAiB;AACfE,gBAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD;;;;mDAEmBZ,4BAAgBa,QAAhB,CAAyBJ,EAAzB,C;;;AAAdK,cAAAA,K;;AACJ,kBAAIA,KAAJ,EAAW;AACTnB,gBAAAA,GAAG,CAACa,QAAJ,2BAAgCV,SAAhC;AACD,eAFD,MAEO;AACLH,gBAAAA,GAAG,CAACa,QAAJ,2BAAgCV,SAAhC;AACD;;;;;;;;;;;;;;;gDAIMH,GAAG,CAACa,QAAJ,CAAa,GAAb,C;;;;;;;;;;;0BAIQd,G,EAAKC,G;;;;;;;AAClBoB,cAAAA,I,GAAOC,qBAAOC,WAAP,CAAmB,EAAnB,C;AACPC,cAAAA,I,GAAOF,qBAAOG,QAAP,CAAgBzB,GAAG,CAAC0B,IAAJ,CAASC,OAAzB,EAAkCN,IAAlC,C;4CACcrB,GAAG,CAAC0B,I,GAAvBtB,S,aAAAA,S;AACFI,cAAAA,I,qBAAYR,GAAG,CAAC0B,I;AAAMC,gBAAAA,OAAO,EAAEH;;;;mDAETlB,4BAAgBsB,GAAhB,CAAoBpB,IAApB,C;;;AAAlBqB,cAAAA,S;;AACN,kBAAIA,SAAJ,EAAe;AACb5B,gBAAAA,GAAG,CAACa,QAAJ,CAAa,qBAAmBV,SAAnB,UAAb;AACD,eAFD,MAEO;AACLH,gBAAAA,GAAG,CAACa,QAAJ,CAAa,qBAAmBV,SAAnB,UAAb;AACD;;;;;;;;;;;;;;;;;;;8BAMkBJ,G,EAAKC,G;;;;;;;AAEpB6B,cAAAA,S,GAAY9B,GAAG,CAAC0B,I;6CACG1B,GAAG,CAAC0B,I,GAAvBtB,S,cAAAA,S;AACEW,cAAAA,E,GAAOf,GAAG,CAACK,M,CAAXU,E;;AACR,kBAAI,CAACC,MAAM,CAACD,EAAD,CAAX,EAAiB;AACfE,gBAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD;;;;mDAEwBZ,4BAAgByB,QAAhB,CAAyBhB,EAAzB,EAA6Be,SAA7B,C;;;AAAjBE,cAAAA,Q;;AACN,kBAAI,CAACA,QAAL,EAAe;AACb/B,gBAAAA,GAAG,CAACa,QAAJ,CAAa,qBAAmBV,SAAnB,UAAb;AACD,eAFD,MAEO;AACLH,gBAAAA,GAAG,CAACa,QAAJ,CAAa,qBAAmBV,SAAnB,UAAb;AACD;;;;;;;;;;;;;;;;;;;2BAMeJ,G,EAAKC,G;;;;;;oBACnBD,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,O;;;;;;AAE1BD,cAAAA,I,GAAOH,GAAG,CAACE,OAAJ,CAAYC,I;AACnBY,cAAAA,E,GAAKf,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBY,E;AACvBP,cAAAA,I,GAAOR,GAAG,CAACE,OAAJ,CAAYC,I;;mDACJG,4BAAgB2B,OAAhB,CAAwBlB,EAAxB,C;;;AAAdmB,cAAAA,K;;AACN,kBAAI,CAACA,KAAL,EAAY;AACVjC,gBAAAA,GAAG,CAACW,MAAJ,CAAW,yCAAX,EAAsD;AACpDJ,kBAAAA,IAAI,EAAJA,IADoD;AAC9CL,kBAAAA,IAAI,EAAJA,IAD8C;AAEpDO,kBAAAA,SAAS,EAATA,SAFoD;AAGpDG,kBAAAA,OAAO,EAAE;AAH2C,iBAAtD;AAKD,eAND,MAMO;AACLZ,gBAAAA,GAAG,CAACW,MAAJ,CAAW,yCAAX,EAAsD;AACpDJ,kBAAAA,IAAI,EAAJA,IADoD;AAC9CL,kBAAAA,IAAI,EAAJA,IAD8C;AAEpDU,kBAAAA,OAAO,EAAE;AAF2C,iBAAtD;AAID;;;;;;;;;;;;;;;gDAIMZ,GAAG,CAACa,QAAJ,CAAa,GAAb,C;;;;;;;;;;;;;eAQEf,kB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
      "sourcesContent": [
        "import bcrypt from \"bcryptjs\";\r\n\r\nimport taiKhoanService from \"../services/taiKhoanService\";\r\n\r\nclass taiKhoanController {\r\n  static async getAllTK(req, res) {\r\n    if (req.session.user.quyenhang == \"Admin\") { \r\n    try {\r\n      const user = req.session.user\r\n      let { quyenhang } = req.params;\r\n      const data = await taiKhoanService.getAllTaiKhoan(quyenhang);\r\n      const phanquyen = await taiKhoanService.getAllquyen(quyenhang);\r\n      if (data.length > 0) {\r\n        res.render(\"../views/admin/taikhoan/listtaikhoan.ejs\", {\r\n          data, user,\r\n          phanquyen,\r\n          message: 1\r\n        });\r\n      } else {\r\n        res.render(\"../views/admin/taikhoan/listtaikhoan.ejs\", {\r\n          data, user,\r\n          phanquyen,\r\n          message: 0\r\n        });\r\n      }\r\n    } catch (error) {\r\n      return error;\r\n    }} else {\r\n      return res.redirect(\"/\");\r\n   }\r\n  }\r\n\r\n  static async DeleteTK(req, res) {\r\n   if (req.session.user.quyenhang == \"Admin\") {       \r\n    let { id,quyenhang } = req.params;  \r\n    if (!Number(id)) {\r\n      console.log(\"id Not a Number!!!\");\r\n    }\r\n    try {\r\n      let XoaTK = await taiKhoanService.deleteTK(id);\r\n      if (XoaTK) {\r\n        res.redirect(`/admin/taikhoan/${quyenhang}`);\r\n      } else {\r\n        res.redirect(`/admin/taikhoan/${quyenhang}`);\r\n      }\r\n    } catch (error) {\r\n      return error;\r\n    }} else {\r\n      return res.redirect(\"/\");\r\n    }\r\n  }\r\n\r\n  static async addTK(req, res) {\r\n    let salt = bcrypt.genSaltSync(10);\r\n    let hash = bcrypt.hashSync(req.body.matkhau, salt);\r\n    let { quyenhang } = { ...req.body };    \r\n    let data = { ...req.body, matkhau: hash };    \r\n    try {\r\n      const createdTK = await taiKhoanService.add(data);\r\n      if (createdTK) {\r\n        res.redirect(`/admin/taikhoan/`+quyenhang+`?kq=1`);\r\n      } else {\r\n        res.redirect(`/admin/taikhoan/`+quyenhang+`?kq=0`);\r\n      }\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  static async updatedtk(req, res) {\r\n    \r\n    const alteredtk = req.body;\r\n    let { quyenhang } = { ...req.body };\r\n    const { id } = req.params;\r\n    if (!Number(id)) {\r\n      console.log(\"ID Not a Number!!!\");\r\n    }\r\n    try {    \r\n      const updatetk = await taiKhoanService.UpdateTK(id, alteredtk);\r\n      if (!updatetk) {\r\n        res.redirect(`/admin/taikhoan/`+quyenhang+`?kq=0`);\r\n      } else {\r\n        res.redirect(`/admin/taikhoan/`+quyenhang+`?kq=1`);\r\n      }\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  static async getATk(req, res) {\r\n    if (req.session.user.quyenhang == \"Admin\") {       \r\n    try {\r\n      const user = req.session.user\r\n      const id = req.session.user.id \r\n     const data = req.session.user\r\n      const thetk = await taiKhoanService.getByID(id);\r\n      if (!thetk) {\r\n        res.render(\"../views/admin/taikhoan/trangcanhan.ejs\", {\r\n          data, user,\r\n          phanquyen,\r\n          message: 0\r\n        });\r\n      } else {\r\n        res.render(\"../views/admin/taikhoan/trangcanhan.ejs\", {\r\n          data, user,\r\n          message: 1\r\n        });\r\n      }\r\n    } catch (error) {\r\n      return error;\r\n    }} else {\r\n      return res.redirect(\"/\");\r\n    }\r\n  }\r\n\r\n  \r\n\r\n}\r\n\r\nexport default taiKhoanController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1584458535515
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\\\\thoiKhoaBieuRoute.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\thoiKhoaBieuRoute.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\thoiKhoaBieuRoute.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\thoiKhoaBieuRoute.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
        "sourceFileName": "thoiKhoaBieuRoute.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _express = require(\"express\");\n\nvar _thoiKhoaBieuController = _interopRequireDefault(require(\"../controllers/thoiKhoaBieuController\"));\n\nvar router = (0, _express.Router)();\nrouter.route(\"/:id\").get(_thoiKhoaBieuController[\"default\"].getAll);\nrouter.route(\"/danghoc/:id\").get(_thoiKhoaBieuController[\"default\"].getAll);\nrouter.route('/hanhdong/:id').post(_thoiKhoaBieuController[\"default\"].update);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRob2lLaG9hQmlldVJvdXRlLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsInJvdXRlIiwiZ2V0IiwidGhvaUtob2FCaWV1Q29udHJvbGxlciIsImdldEFsbCIsInBvc3QiLCJ1cGRhdGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUE7O0FBQ0E7O0FBRUEsSUFBTUEsTUFBTSxHQUFHLHNCQUFmO0FBRUFBLE1BQU0sQ0FDSEMsS0FESCxDQUNTLE1BRFQsRUFFR0MsR0FGSCxDQUVPQyxtQ0FBdUJDLE1BRjlCO0FBR0VKLE1BQU0sQ0FDTEMsS0FERCxDQUNPLGNBRFAsRUFFQ0MsR0FGRCxDQUVLQyxtQ0FBdUJDLE1BRjVCO0FBSUZKLE1BQU0sQ0FBQ0MsS0FBUCxDQUFhLGVBQWIsRUFDQ0ksSUFERCxDQUNNRixtQ0FBdUJHLE1BRDdCO0FBR0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlIsTUFBakIiLCJzb3VyY2VSb290IjoiRDpcXEx1YW5WYW5cXEx1YW5WYW5EMlxcdHJ1bmd0YW1fbGFuNFxcYXBwc1xccm91dGVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gXCJleHByZXNzXCI7XHJcbmltcG9ydCB0aG9pS2hvYUJpZXVDb250cm9sbGVyIGZyb20gXCIuLi9jb250cm9sbGVycy90aG9pS2hvYUJpZXVDb250cm9sbGVyXCI7XHJcblxyXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKTtcclxuXHJcbnJvdXRlclxyXG4gIC5yb3V0ZShcIi86aWRcIilcclxuICAuZ2V0KHRob2lLaG9hQmlldUNvbnRyb2xsZXIuZ2V0QWxsKSBcclxuICByb3V0ZXJcclxuICAucm91dGUoXCIvZGFuZ2hvYy86aWRcIilcclxuICAuZ2V0KHRob2lLaG9hQmlldUNvbnRyb2xsZXIuZ2V0QWxsKSBcclxuXHJcbnJvdXRlci5yb3V0ZSgnL2hhbmhkb25nLzppZCcpXHJcbi5wb3N0KHRob2lLaG9hQmlldUNvbnRyb2xsZXIudXBkYXRlKVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "thoiKhoaBieuRoute.js"
      ],
      "names": [
        "router",
        "route",
        "get",
        "thoiKhoaBieuController",
        "getAll",
        "post",
        "update",
        "module",
        "exports"
      ],
      "mappings": ";;;;AAAA;;AACA;;AAEA,IAAMA,MAAM,GAAG,sBAAf;AAEAA,MAAM,CACHC,KADH,CACS,MADT,EAEGC,GAFH,CAEOC,mCAAuBC,MAF9B;AAGEJ,MAAM,CACLC,KADD,CACO,cADP,EAECC,GAFD,CAEKC,mCAAuBC,MAF5B;AAIFJ,MAAM,CAACC,KAAP,CAAa,eAAb,EACCI,IADD,CACMF,mCAAuBG,MAD7B;AAGAC,MAAM,CAACC,OAAP,GAAiBR,MAAjB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
      "sourcesContent": [
        "import { Router } from \"express\";\r\nimport thoiKhoaBieuController from \"../controllers/thoiKhoaBieuController\";\r\n\r\nconst router = Router();\r\n\r\nrouter\r\n  .route(\"/:id\")\r\n  .get(thoiKhoaBieuController.getAll) \r\n  router\r\n  .route(\"/danghoc/:id\")\r\n  .get(thoiKhoaBieuController.getAll) \r\n\r\nrouter.route('/hanhdong/:id')\r\n.post(thoiKhoaBieuController.update)\r\n\r\nmodule.exports = router;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1583589095312
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\\\\thoiKhoaBieuController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\thoiKhoaBieuController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\thoiKhoaBieuController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\thoiKhoaBieuController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
        "sourceFileName": "thoiKhoaBieuController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _sDate = _interopRequireDefault(require(\"s-date\"));\n\nvar _lopHocService = _interopRequireDefault(require(\"../services/lopHocService\"));\n\nvar _khoaHocService = _interopRequireDefault(require(\"../services/khoaHocService\"));\n\nvar _giangVienService = _interopRequireDefault(require(\"../services/giangVienService\"));\n\nvar _dangkyService = _interopRequireDefault(require(\"../services/dangkyService\"));\n\nvar _phongHocService = _interopRequireDefault(require(\"../services/phongHocService\"));\n\nvar lophocController =\n/*#__PURE__*/\nfunction () {\n  function lophocController() {\n    (0, _classCallCheck2[\"default\"])(this, lophocController);\n  }\n\n  (0, _createClass2[\"default\"])(lophocController, null, [{\n    key: \"getAll\",\n    value: function getAll(req, res) {\n      var user, trangthai, data1, phonghoc, data;\n      return _regenerator[\"default\"].async(function getAll$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\")) {\n                _context.next = 20;\n                break;\n              }\n\n              _context.prev = 1;\n              user = req.session.user;\n              trangthai = req.params.id;\n              _context.next = 6;\n              return _regenerator[\"default\"].awrap(_lopHocService[\"default\"].getAll(trangthai));\n\n            case 6:\n              data1 = _context.sent;\n              _context.next = 9;\n              return _regenerator[\"default\"].awrap(_phongHocService[\"default\"].getsudung());\n\n            case 9:\n              phonghoc = _context.sent;\n              data = data1[0];\n\n              if (data.length > 0) {\n                res.render(\"../views/admin/thoikhoabieu/listthiukhoabieu.ejs\", {\n                  data: data,\n                  user: user,\n                  trangthai: trangthai,\n                  date: _sDate[\"default\"],\n                  phonghoc: phonghoc\n                });\n              } else {\n                res.render(\"../views/admin//thoikhoabieu/listthiukhoabieu.ejs\", {\n                  data: data,\n                  user: user,\n                  date: _sDate[\"default\"],\n                  trangthai: trangthai,\n                  phonghoc: phonghoc,\n                  message: \"Khong co hoc vien nao\"\n                });\n              }\n\n              return _context.abrupt(\"return\", 0);\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](1);\n              return _context.abrupt(\"return\", _context.t0);\n\n            case 18:\n              _context.next = 21;\n              break;\n\n            case 20:\n              return _context.abrupt(\"return\", res.redirect(\"/\"));\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 15]]);\n    }\n  }, {\n    key: \"getDanghoc\",\n    value: function getDanghoc(req, res) {\n      var user, trangthai, data1, phonghoc, data;\n      return _regenerator[\"default\"].async(function getDanghoc$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\")) {\n                _context2.next = 20;\n                break;\n              }\n\n              _context2.prev = 1;\n              user = req.session.user;\n              trangthai = req.params.id;\n              _context2.next = 6;\n              return _regenerator[\"default\"].awrap(_lopHocService[\"default\"].get1lop(trangthai));\n\n            case 6:\n              data1 = _context2.sent;\n              _context2.next = 9;\n              return _regenerator[\"default\"].awrap(_phongHocService[\"default\"].getsudung());\n\n            case 9:\n              phonghoc = _context2.sent;\n              data = data1[0];\n\n              if (data.length > 0) {\n                res.render(\"../views/admin/thoikhoabieu/listthiukhoabieu.ejs\", {\n                  data: data,\n                  user: user,\n                  trangthai: trangthai,\n                  date: _sDate[\"default\"],\n                  phonghoc: phonghoc\n                });\n              } else {\n                res.render(\"../views/admin//thoikhoabieu/listthiukhoabieu.ejs\", {\n                  data: data,\n                  user: user,\n                  date: _sDate[\"default\"],\n                  trangthai: trangthai,\n                  phonghoc: phonghoc,\n                  message: \"Khong co hoc vien nao\"\n                });\n              }\n\n              return _context2.abrupt(\"return\", 0);\n\n            case 15:\n              _context2.prev = 15;\n              _context2.t0 = _context2[\"catch\"](1);\n              return _context2.abrupt(\"return\", _context2.t0);\n\n            case 18:\n              _context2.next = 21;\n              break;\n\n            case 20:\n              return _context2.abrupt(\"return\", res.redirect(\"/\"));\n\n            case 21:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[1, 15]]);\n    }\n  }, {\n    key: \"update\",\n    value: function update(req, res) {\n      var altered, id, update;\n      return _regenerator[\"default\"].async(function update$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              altered = req.body;\n              id = req.params.id;\n\n              if (!Number(id)) {\n                res.redirect(\"/admin/thoikhoabieu/1?kq=1&mes=Lỗi lấy dữ liệu!!!\");\n              }\n\n              _context3.prev = 3;\n              _context3.next = 6;\n              return _regenerator[\"default\"].awrap(_lopHocService[\"default\"].Update(id, altered));\n\n            case 6:\n              update = _context3.sent;\n\n              if (!update) {\n                res.redirect(\"/admin/thoikhoabieu/1?kq=0&mes=Lỗi cập nhật!!!\");\n              } else {\n                res.redirect(\"/admin/thoikhoabieu/1?kq=1&mes=Thành Công !!!\");\n              }\n\n              return _context3.abrupt(\"return\");\n\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](3);\n              return _context3.abrupt(\"return\", _context3.t0);\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[3, 11]]);\n    }\n  }]);\n  return lophocController;\n}();\n\nvar _default = lophocController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "thoiKhoaBieuController.js"
      ],
      "names": [
        "lophocController",
        "req",
        "res",
        "session",
        "user",
        "quyenhang",
        "trangthai",
        "params",
        "id",
        "lopHocService",
        "getAll",
        "data1",
        "phongHocService",
        "getsudung",
        "phonghoc",
        "data",
        "length",
        "render",
        "date",
        "message",
        "redirect",
        "get1lop",
        "altered",
        "body",
        "Number",
        "Update",
        "update"
      ],
      "mappings": ";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;IACMA,gB;;;;;;;;;2BACgBC,G,EAAKC,G;;;;;;oBACnBD,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,OAA9B,IAAyCJ,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,W;;;;;;AAEjED,cAAAA,I,GAAOH,GAAG,CAACE,OAAJ,CAAYC,I;AACrBE,cAAAA,S,GAAYL,GAAG,CAACM,MAAJ,CAAWC,E;;mDACPC,0BAAcC,MAAd,CAAqBJ,SAArB,C;;;AAAdK,cAAAA,K;;mDACiBC,4BAAgBC,SAAhB,E;;;AAAjBC,cAAAA,Q;AACAC,cAAAA,I,GAAOJ,KAAK,CAAC,CAAD,C;;AAClB,kBAAII,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AACnBd,gBAAAA,GAAG,CAACe,MAAJ,CAAW,kDAAX,EAA+D;AAC7DF,kBAAAA,IAAI,EAAJA,IAD6D;AACvDX,kBAAAA,IAAI,EAAJA,IADuD;AAE7DE,kBAAAA,SAAS,EAATA,SAF6D;AAG7DY,kBAAAA,IAAI,EAAJA,iBAH6D;AAI7DJ,kBAAAA,QAAQ,EAARA;AAJ6D,iBAA/D;AAMD,eAPD,MAOO;AACLZ,gBAAAA,GAAG,CAACe,MAAJ,CAAW,mDAAX,EAAgE;AAC9DF,kBAAAA,IAAI,EAAJA,IAD8D;AACxDX,kBAAAA,IAAI,EAAJA,IADwD;AAE9Dc,kBAAAA,IAAI,EAAJA,iBAF8D;AAG9DZ,kBAAAA,SAAS,EAATA,SAH8D;AAI9DQ,kBAAAA,QAAQ,EAARA,QAJ8D;AAK9DK,kBAAAA,OAAO,EAAE;AALqD,iBAAhE;AAOD;;+CACM,C;;;;;;;;;;;;+CAKFjB,GAAG,CAACkB,QAAJ,CAAa,GAAb,C;;;;;;;;;;;+BAIanB,G,EAAKC,G;;;;;;oBACvBD,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,OAA9B,IAAyCJ,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,W;;;;;;AAEjED,cAAAA,I,GAAOH,GAAG,CAACE,OAAJ,CAAYC,I;AACrBE,cAAAA,S,GAAYL,GAAG,CAACM,MAAJ,CAAWC,E;;mDACPC,0BAAcY,OAAd,CAAsBf,SAAtB,C;;;AAAdK,cAAAA,K;;mDACiBC,4BAAgBC,SAAhB,E;;;AAAjBC,cAAAA,Q;AACAC,cAAAA,I,GAAOJ,KAAK,CAAC,CAAD,C;;AAClB,kBAAII,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AACnBd,gBAAAA,GAAG,CAACe,MAAJ,CAAW,kDAAX,EAA+D;AAC7DF,kBAAAA,IAAI,EAAJA,IAD6D;AACvDX,kBAAAA,IAAI,EAAJA,IADuD;AAE7DE,kBAAAA,SAAS,EAATA,SAF6D;AAG7DY,kBAAAA,IAAI,EAAJA,iBAH6D;AAI7DJ,kBAAAA,QAAQ,EAARA;AAJ6D,iBAA/D;AAMD,eAPD,MAOO;AACLZ,gBAAAA,GAAG,CAACe,MAAJ,CAAW,mDAAX,EAAgE;AAC9DF,kBAAAA,IAAI,EAAJA,IAD8D;AACxDX,kBAAAA,IAAI,EAAJA,IADwD;AAE9Dc,kBAAAA,IAAI,EAAJA,iBAF8D;AAG9DZ,kBAAAA,SAAS,EAATA,SAH8D;AAI9DQ,kBAAAA,QAAQ,EAARA,QAJ8D;AAK9DK,kBAAAA,OAAO,EAAE;AALqD,iBAAhE;AAOD;;gDACM,C;;;;;;;;;;;;gDAKFjB,GAAG,CAACkB,QAAJ,CAAa,GAAb,C;;;;;;;;;;;2BAISnB,G,EAAKC,G;;;;;;AACjBoB,cAAAA,O,GAAUrB,GAAG,CAACsB,I;AACZf,cAAAA,E,GAAOP,GAAG,CAACM,M,CAAXC,E;;AACR,kBAAI,CAACgB,MAAM,CAAChB,EAAD,CAAX,EAAiB;AACfN,gBAAAA,GAAG,CAACkB,QAAJ,CAAa,mDAAb;AACD;;;;mDAEsBX,0BAAcgB,MAAd,CAAqBjB,EAArB,EAAyBc,OAAzB,C;;;AAAfI,cAAAA,M;;AACN,kBAAI,CAACA,MAAL,EAAa;AACXxB,gBAAAA,GAAG,CAACkB,QAAJ,CAAa,gDAAb;AACD,eAFD,MAEO;AACLlB,gBAAAA,GAAG,CAACkB,QAAJ,CAAa,+CAAb;AACD;;;;;;;;;;;;;;;;;;;;eASQpB,gB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
      "sourcesContent": [
        "import date from \"s-date\";\r\nimport lopHocService from \"../services/lopHocService\";\r\nimport khoaHocService from \"../services/khoaHocService\";\r\nimport giangVienService from \"../services/giangVienService\";\r\nimport dangkyService from \"../services/dangkyService\";\r\nimport phongHocService from \"../services/phongHocService\";\r\nclass lophocController {\r\n  static async getAll(req, res) {\r\n    if (req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\") {\r\n      try {\r\n        const user = req.session.user\r\n        let trangthai = req.params.id    \r\n        const data1 = await lopHocService.getAll(trangthai);      \r\n        const phonghoc = await phongHocService.getsudung(); \r\n        const data = data1[0];\r\n        if (data.length > 0) {\r\n          res.render(\"../views/admin/thoikhoabieu/listthiukhoabieu.ejs\", {\r\n            data, user,\r\n            trangthai,\r\n            date,\r\n            phonghoc         \r\n          });\r\n        } else {\r\n          res.render(\"../views/admin//thoikhoabieu/listthiukhoabieu.ejs\", {\r\n            data, user,\r\n            date,\r\n            trangthai,        \r\n            phonghoc,\r\n            message: \"Khong co hoc vien nao\"\r\n          });\r\n        }\r\n        return 0;\r\n      } catch (error) {\r\n        return error;\r\n      }\r\n    } else {\r\n      return res.redirect(\"/\");\r\n    }\r\n  }\r\n\r\n  static async getDanghoc(req, res) {\r\n    if (req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\") {\r\n      try {\r\n        const user = req.session.user\r\n        let trangthai = req.params.id    \r\n        const data1 = await lopHocService.get1lop(trangthai);      \r\n        const phonghoc = await phongHocService.getsudung(); \r\n        const data = data1[0];\r\n        if (data.length > 0) {\r\n          res.render(\"../views/admin/thoikhoabieu/listthiukhoabieu.ejs\", {\r\n            data, user,\r\n            trangthai,\r\n            date,\r\n            phonghoc         \r\n          });\r\n        } else {\r\n          res.render(\"../views/admin//thoikhoabieu/listthiukhoabieu.ejs\", {\r\n            data, user,\r\n            date,\r\n            trangthai,        \r\n            phonghoc,\r\n            message: \"Khong co hoc vien nao\"\r\n          });\r\n        }\r\n        return 0;\r\n      } catch (error) {\r\n        return error;\r\n      }\r\n    } else {\r\n      return res.redirect(\"/\");\r\n    }\r\n  }\r\n\r\n  static async update(req, res) {\r\n    const altered = req.body;\r\n    const { id } = req.params;\r\n    if (!Number(id)) {    \r\n      res.redirect(\"/admin/thoikhoabieu/1?kq=1&mes=Lỗi lấy dữ liệu!!!\");\r\n    }\r\n    try {\r\n      const update = await lopHocService.Update(id, altered);     \r\n      if (!update) {       \r\n        res.redirect(\"/admin/thoikhoabieu/1?kq=0&mes=Lỗi cập nhật!!!\");\r\n      } else {        \r\n        res.redirect(\"/admin/thoikhoabieu/1?kq=1&mes=Thành Công !!!\");\r\n      }\r\n      return;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n \r\n}\r\n\r\nexport default lophocController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1584458568032
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\\\\baiVietRouter.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\baiVietRouter.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\baiVietRouter.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\baiVietRouter.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
        "sourceFileName": "baiVietRouter.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar Router = require(\"express\");\n\nvar baiVietController = require(\"../controllers/baiVietController\");\n\nvar upload = require(\"../../helpers/uploadfile\");\n\nvar router = Router();\nvar single = upload.single(\"hinhanh\");\nrouter.route(\"/update/:id\").get(baiVietController.getUpdate);\nrouter.route(\"/them\").get(baiVietController.getAdd);\nrouter.route(\"/\").get(baiVietController.getAll).post(single, baiVietController.add);\nrouter.route(\"/:id\").get(baiVietController.Delete).post(single, baiVietController.update);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhaVZpZXRSb3V0ZXIuanMiXSwibmFtZXMiOlsiUm91dGVyIiwicmVxdWlyZSIsImJhaVZpZXRDb250cm9sbGVyIiwidXBsb2FkIiwicm91dGVyIiwic2luZ2xlIiwicm91dGUiLCJnZXQiLCJnZXRVcGRhdGUiLCJnZXRBZGQiLCJnZXRBbGwiLCJwb3N0IiwiYWRkIiwiRGVsZXRlIiwidXBkYXRlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFLQSxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXJCOztBQUNBLElBQUlDLGlCQUFpQixHQUFFRCxPQUFPLENBQUMsa0NBQUQsQ0FBOUI7O0FBQ0EsSUFBSUUsTUFBTSxHQUFFRixPQUFPLENBQUMsMEJBQUQsQ0FBbkI7O0FBQ0EsSUFBTUcsTUFBTSxHQUFHSixNQUFNLEVBQXJCO0FBQ0EsSUFBSUssTUFBTSxHQUFHRixNQUFNLENBQUNFLE1BQVAsQ0FBYyxTQUFkLENBQWI7QUFFQUQsTUFBTSxDQUFDRSxLQUFQLENBQWEsYUFBYixFQUE0QkMsR0FBNUIsQ0FBZ0NMLGlCQUFpQixDQUFDTSxTQUFsRDtBQUNBSixNQUFNLENBQUNFLEtBQVAsQ0FBYSxPQUFiLEVBQXNCQyxHQUF0QixDQUEwQkwsaUJBQWlCLENBQUNPLE1BQTVDO0FBQ0FMLE1BQU0sQ0FDSEUsS0FESCxDQUNTLEdBRFQsRUFFR0MsR0FGSCxDQUVPTCxpQkFBaUIsQ0FBQ1EsTUFGekIsRUFHR0MsSUFISCxDQUdRTixNQUhSLEVBR2dCSCxpQkFBaUIsQ0FBQ1UsR0FIbEM7QUFLQVIsTUFBTSxDQUNIRSxLQURILENBQ1MsTUFEVCxFQUVHQyxHQUZILENBRU9MLGlCQUFpQixDQUFDVyxNQUZ6QixFQUdHRixJQUhILENBR1FOLE1BSFIsRUFHZ0JILGlCQUFpQixDQUFDWSxNQUhsQztBQUtBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJaLE1BQWpCIiwic291cmNlUm9vdCI6IkQ6XFxMdWFuVmFuXFxMdWFuVmFuRDJcXHRydW5ndGFtX2xhbjRcXGFwcHNcXHJvdXRlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgIFJvdXRlciAgPXJlcXVpcmUoXCJleHByZXNzXCIpO1xyXG52YXIgYmFpVmlldENvbnRyb2xsZXIgPXJlcXVpcmUoXCIuLi9jb250cm9sbGVycy9iYWlWaWV0Q29udHJvbGxlclwiKTtcclxudmFyIHVwbG9hZCA9cmVxdWlyZShcIi4uLy4uL2hlbHBlcnMvdXBsb2FkZmlsZVwiKTtcclxuY29uc3Qgcm91dGVyID0gUm91dGVyKCk7XHJcbnZhciBzaW5nbGUgPSB1cGxvYWQuc2luZ2xlKFwiaGluaGFuaFwiKTtcclxuXHJcbnJvdXRlci5yb3V0ZShcIi91cGRhdGUvOmlkXCIpLmdldChiYWlWaWV0Q29udHJvbGxlci5nZXRVcGRhdGUpO1xyXG5yb3V0ZXIucm91dGUoXCIvdGhlbVwiKS5nZXQoYmFpVmlldENvbnRyb2xsZXIuZ2V0QWRkKTtcclxucm91dGVyXHJcbiAgLnJvdXRlKFwiL1wiKVxyXG4gIC5nZXQoYmFpVmlldENvbnRyb2xsZXIuZ2V0QWxsKVxyXG4gIC5wb3N0KHNpbmdsZSwgYmFpVmlldENvbnRyb2xsZXIuYWRkKTtcclxuXHJcbnJvdXRlclxyXG4gIC5yb3V0ZShcIi86aWRcIilcclxuICAuZ2V0KGJhaVZpZXRDb250cm9sbGVyLkRlbGV0ZSlcclxuICAucG9zdChzaW5nbGUsIGJhaVZpZXRDb250cm9sbGVyLnVwZGF0ZSk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "baiVietRouter.js"
      ],
      "names": [
        "Router",
        "require",
        "baiVietController",
        "upload",
        "router",
        "single",
        "route",
        "get",
        "getUpdate",
        "getAdd",
        "getAll",
        "post",
        "add",
        "Delete",
        "update",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAKA,MAAM,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,iBAAiB,GAAED,OAAO,CAAC,kCAAD,CAA9B;;AACA,IAAIE,MAAM,GAAEF,OAAO,CAAC,0BAAD,CAAnB;;AACA,IAAMG,MAAM,GAAGJ,MAAM,EAArB;AACA,IAAIK,MAAM,GAAGF,MAAM,CAACE,MAAP,CAAc,SAAd,CAAb;AAEAD,MAAM,CAACE,KAAP,CAAa,aAAb,EAA4BC,GAA5B,CAAgCL,iBAAiB,CAACM,SAAlD;AACAJ,MAAM,CAACE,KAAP,CAAa,OAAb,EAAsBC,GAAtB,CAA0BL,iBAAiB,CAACO,MAA5C;AACAL,MAAM,CACHE,KADH,CACS,GADT,EAEGC,GAFH,CAEOL,iBAAiB,CAACQ,MAFzB,EAGGC,IAHH,CAGQN,MAHR,EAGgBH,iBAAiB,CAACU,GAHlC;AAKAR,MAAM,CACHE,KADH,CACS,MADT,EAEGC,GAFH,CAEOL,iBAAiB,CAACW,MAFzB,EAGGF,IAHH,CAGQN,MAHR,EAGgBH,iBAAiB,CAACY,MAHlC;AAKAC,MAAM,CAACC,OAAP,GAAiBZ,MAAjB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
      "sourcesContent": [
        "var  Router  =require(\"express\");\r\nvar baiVietController =require(\"../controllers/baiVietController\");\r\nvar upload =require(\"../../helpers/uploadfile\");\r\nconst router = Router();\r\nvar single = upload.single(\"hinhanh\");\r\n\r\nrouter.route(\"/update/:id\").get(baiVietController.getUpdate);\r\nrouter.route(\"/them\").get(baiVietController.getAdd);\r\nrouter\r\n  .route(\"/\")\r\n  .get(baiVietController.getAll)\r\n  .post(single, baiVietController.add);\r\n\r\nrouter\r\n  .route(\"/:id\")\r\n  .get(baiVietController.Delete)\r\n  .post(single, baiVietController.update);\r\n\r\nmodule.exports = router;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1586164429295
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\\\\baiVietController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\baiVietController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\baiVietController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\baiVietController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
        "sourceFileName": "baiVietController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar baiVietService = require(\"../services/baivietService\");\n\nvar chuyenmucService = require(\"../services/chuyenmucService\");\n\nvar d = new Date();\nd.getDate();\nd.getMonth();\nd.getFullYear();\nvar n = d.getDate() + d.getMonth() + d.getFullYear();\n\nvar baiVietController =\n/*#__PURE__*/\nfunction () {\n  function baiVietController() {\n    (0, _classCallCheck2[\"default\"])(this, baiVietController);\n  }\n\n  (0, _createClass2[\"default\"])(baiVietController, null, [{\n    key: \"getAll\",\n    value: function getAll(req, res) {\n      var user, data1, chuyenmuc, data;\n      return _regenerator[\"default\"].async(function getAll$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\")) {\n                _context.next = 19;\n                break;\n              }\n\n              _context.prev = 1;\n              user = req.session.user;\n              _context.next = 5;\n              return _regenerator[\"default\"].awrap(baiVietService.getAll());\n\n            case 5:\n              data1 = _context.sent;\n              _context.next = 8;\n              return _regenerator[\"default\"].awrap(chuyenmucService.getAll());\n\n            case 8:\n              chuyenmuc = _context.sent;\n              data = data1[0];\n\n              if (data.length > 0) {\n                res.render(\"../apps/views/admin/baiviet/listBaiViet.ejs\", {\n                  data: data,\n                  user: user,\n                  chuyenmuc: chuyenmuc\n                });\n              } else {\n                res.render(\"../apps/views/admin/baiviet/listBaiViet.ejs\", {\n                  data: data,\n                  user: user,\n                  chuyenmuc: chuyenmuc\n                });\n              }\n\n              return _context.abrupt(\"return\", 0);\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](1);\n              return _context.abrupt(\"return\", _context.t0);\n\n            case 17:\n              _context.next = 20;\n              break;\n\n            case 19:\n              return _context.abrupt(\"return\", res.redirect(\"/\"));\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 14]]);\n    }\n  }, {\n    key: \"getAdd\",\n    value: function getAdd(req, res) {\n      var user, chuyenmuc;\n      return _regenerator[\"default\"].async(function getAdd$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\")) {\n                _context2.next = 15;\n                break;\n              }\n\n              _context2.prev = 1;\n              user = req.session.user;\n              _context2.next = 5;\n              return _regenerator[\"default\"].awrap(chuyenmucService.getAll());\n\n            case 5:\n              chuyenmuc = _context2.sent;\n\n              if (chuyenmuc.length > 0) {\n                res.render(\"../apps/views/admin/baiviet/addbaiviet.ejs\", {\n                  user: user,\n                  chuyenmuc: chuyenmuc\n                });\n              } else {\n                res.render(\"../apps/views/admin/baiviet/addbaiviet.ejs\", {\n                  user: user,\n                  chuyenmuc: chuyenmuc\n                });\n              }\n\n              return _context2.abrupt(\"return\", 0);\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](1);\n              return _context2.abrupt(\"return\", _context2.t0);\n\n            case 13:\n              _context2.next = 16;\n              break;\n\n            case 15:\n              return _context2.abrupt(\"return\", res.redirect(\"/\"));\n\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[1, 10]]);\n    }\n  }, {\n    key: \"getUpdate\",\n    value: function getUpdate(req, res) {\n      var user, id, data1, chuyenmuc, data;\n      return _regenerator[\"default\"].async(function getUpdate$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\")) {\n                _context3.next = 20;\n                break;\n              }\n\n              _context3.prev = 1;\n              user = req.session.user;\n              id = req.params.id;\n              _context3.next = 6;\n              return _regenerator[\"default\"].awrap(baiVietService.getA(id));\n\n            case 6:\n              data1 = _context3.sent;\n              _context3.next = 9;\n              return _regenerator[\"default\"].awrap(chuyenmucService.getAll());\n\n            case 9:\n              chuyenmuc = _context3.sent;\n              data = data1[0][0];\n\n              if (data.length > 0) {\n                res.render(\"../apps/views/admin/baiviet/updateBV.ejs\", {\n                  data: data,\n                  chuyenmuc: chuyenmuc,\n                  user: user\n                });\n              } else {\n                res.render(\"../apps/views/admin/baiviet/updateBV.ejs\", {\n                  data: data,\n                  chuyenmuc: chuyenmuc,\n                  user: user\n                });\n              }\n\n              return _context3.abrupt(\"return\", 0);\n\n            case 15:\n              _context3.prev = 15;\n              _context3.t0 = _context3[\"catch\"](1);\n              return _context3.abrupt(\"return\", _context3.t0);\n\n            case 18:\n              _context3.next = 21;\n              break;\n\n            case 20:\n              return _context3.abrupt(\"return\", res.redirect(\"/\"));\n\n            case 21:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[1, 15]]);\n    }\n  }, {\n    key: \"Delete\",\n    value: function Delete(req, res) {\n      var id, Xoa;\n      return _regenerator[\"default\"].async(function Delete$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!(req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\")) {\n                _context4.next = 16;\n                break;\n              }\n\n              id = req.params.id;\n\n              if (!Number(id)) {\n                res.redirect(\"/admin/baiviet?kq=0&mes=Lỗi dữ liệu!!!\");\n              }\n\n              _context4.prev = 3;\n              _context4.next = 6;\n              return _regenerator[\"default\"].awrap(baiVietService[\"delete\"](id));\n\n            case 6:\n              Xoa = _context4.sent;\n\n              if (Xoa) {\n                res.redirect(\"/admin/baiviet?kq=1&mes=Thành Công!!\");\n              } else {\n                res.redirect(\"/admin/baiviet?kq=0&mes=Thất Bại!!!\");\n              }\n\n              return _context4.abrupt(\"return\");\n\n            case 11:\n              _context4.prev = 11;\n              _context4.t0 = _context4[\"catch\"](3);\n              return _context4.abrupt(\"return\", _context4.t0);\n\n            case 14:\n              _context4.next = 17;\n              break;\n\n            case 16:\n              return _context4.abrupt(\"return\", res.redirect(\"/\"));\n\n            case 17:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[3, 11]]);\n    }\n  }, {\n    key: \"update\",\n    value: function update(req, res) {\n      var id, hinhanh, altered, update;\n      return _regenerator[\"default\"].async(function update$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              id = req.params.id;\n              hinhanh = req.body.hinhanh;\n\n              if (req.file) {\n                hinhanh = n + \"-\" + req.file.originalname;\n              }\n\n              altered = _objectSpread({}, req.body, {\n                hinhanh: hinhanh\n              });\n              _context5.next = 7;\n              return _regenerator[\"default\"].awrap(baiVietService.Update(parseInt(id), altered));\n\n            case 7:\n              update = _context5.sent;\n\n              if (!update) {\n                res.redirect(\"/admin/baiviet?kq=0\");\n              } else {\n                res.redirect(\"/admin/baiviet?kq=1\");\n              }\n\n              _context5.next = 14;\n              break;\n\n            case 11:\n              _context5.prev = 11;\n              _context5.t0 = _context5[\"catch\"](0);\n              return _context5.abrupt(\"return\", res.redirect(\"/admin/baiviet\"));\n\n            case 14:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 11]]);\n    }\n  }, {\n    key: \"add\",\n    value: function add(req, res) {\n      var hinhanh, id_taikhoan, data, created;\n      return _regenerator[\"default\"].async(function add$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              hinhanh = \"\";\n\n              if (req.file) {\n                hinhanh = n + \"-\" + req.file.originalname;\n              }\n\n              id_taikhoan = req.session.user.id;\n              data = _objectSpread({}, req.body, {\n                hinhanh: hinhanh,\n                id_taikhoan: id_taikhoan\n              });\n              console.log(data);\n              _context6.prev = 5;\n              _context6.next = 8;\n              return _regenerator[\"default\"].awrap(baiVietService.Save(data));\n\n            case 8:\n              created = _context6.sent;\n\n              if (created !== 0) {\n                res.redirect(\"/admin/baiviet?kq=1&mes=Thêm thành công !!!\");\n              } else res.redirect(\"/admin/baiviet?kq=0&mes=Thêm không thành công !!!\");\n\n              _context6.next = 15;\n              break;\n\n            case 12:\n              _context6.prev = 12;\n              _context6.t0 = _context6[\"catch\"](5);\n              return _context6.abrupt(\"return\", _context6.t0);\n\n            case 15:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[5, 12]]);\n    }\n  }]);\n  return baiVietController;\n}();\n\nmodule.exports = baiVietController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "baiVietController.js"
      ],
      "names": [
        "baiVietService",
        "require",
        "chuyenmucService",
        "d",
        "Date",
        "getDate",
        "getMonth",
        "getFullYear",
        "n",
        "baiVietController",
        "req",
        "res",
        "session",
        "user",
        "quyenhang",
        "getAll",
        "data1",
        "chuyenmuc",
        "data",
        "length",
        "render",
        "redirect",
        "id",
        "params",
        "getA",
        "Number",
        "Xoa",
        "hinhanh",
        "body",
        "file",
        "originalname",
        "altered",
        "Update",
        "parseInt",
        "update",
        "id_taikhoan",
        "console",
        "log",
        "Save",
        "created",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;;;;;;;AAAA,IAAIA,cAAc,GAAGC,OAAO,CAAC,4BAAD,CAA5B;;AACA,IAAIC,gBAAgB,GAAED,OAAO,CAAC,8BAAD,CAA7B;;AAEA,IAAIE,CAAC,GAAG,IAAIC,IAAJ,EAAR;AACAD,CAAC,CAACE,OAAF;AACAF,CAAC,CAACG,QAAF;AACAH,CAAC,CAACI,WAAF;AACA,IAAIC,CAAC,GAAGL,CAAC,CAACE,OAAF,KAAcF,CAAC,CAACG,QAAF,EAAd,GAA6BH,CAAC,CAACI,WAAF,EAArC;;IAEME,iB;;;;;;;;;2BACgBC,G,EAAKC,G;;;;;;oBAErBD,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,OAA9B,IACAJ,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,W;;;;;;AAGtBD,cAAAA,I,GAAOH,GAAG,CAACE,OAAJ,CAAYC,I;;mDACLb,cAAc,CAACe,MAAf,E;;;AAAdC,cAAAA,K;;mDACkBd,gBAAgB,CAACa,MAAjB,E;;;AAAlBE,cAAAA,S;AACFC,cAAAA,I,GAAOF,KAAK,CAAC,CAAD,C;;AAChB,kBAAIE,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AACnBR,gBAAAA,GAAG,CAACS,MAAJ,CAAW,6CAAX,EAA0D;AACxDF,kBAAAA,IAAI,EAAJA,IADwD;AAExDL,kBAAAA,IAAI,EAAJA,IAFwD;AAGxDI,kBAAAA,SAAS,EAATA;AAHwD,iBAA1D;AAKD,eAND,MAMO;AACLN,gBAAAA,GAAG,CAACS,MAAJ,CAAW,6CAAX,EAA0D;AACxDF,kBAAAA,IAAI,EAAJA,IADwD;AAExDL,kBAAAA,IAAI,EAAJA,IAFwD;AAGxDI,kBAAAA,SAAS,EAATA;AAHwD,iBAA1D;AAKD;;+CACM,C;;;;;;;;;;;;+CAKFN,GAAG,CAACU,QAAJ,CAAa,GAAb,C;;;;;;;;;;;2BAISX,G,EAAKC,G;;;;;;oBAErBD,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,OAA9B,IACAJ,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,W;;;;;;AAGtBD,cAAAA,I,GAAOH,GAAG,CAACE,OAAJ,CAAYC,I;;mDACDX,gBAAgB,CAACa,MAAjB,E;;;AAAlBE,cAAAA,S;;AACN,kBAAIA,SAAS,CAACE,MAAV,GAAmB,CAAvB,EAA0B;AACxBR,gBAAAA,GAAG,CAACS,MAAJ,CAAW,4CAAX,EAAyD;AACvDP,kBAAAA,IAAI,EAAJA,IADuD;AAEvDI,kBAAAA,SAAS,EAATA;AAFuD,iBAAzD;AAID,eALD,MAKO;AACLN,gBAAAA,GAAG,CAACS,MAAJ,CAAW,4CAAX,EAAyD;AACvDP,kBAAAA,IAAI,EAAJA,IADuD;AAEvDI,kBAAAA,SAAS,EAATA;AAFuD,iBAAzD;AAID;;gDACM,C;;;;;;;;;;;;gDAKFN,GAAG,CAACU,QAAJ,CAAa,GAAb,C;;;;;;;;;;;8BAGYX,G,EAAKC,G;;;;;;oBAExBD,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,OAA9B,IACAJ,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,W;;;;;;AAGtBD,cAAAA,I,GAAOH,GAAG,CAACE,OAAJ,CAAYC,I;AACnBS,cAAAA,E,GAAKZ,GAAG,CAACa,MAAJ,CAAWD,E;;mDACFtB,cAAc,CAACwB,IAAf,CAAoBF,EAApB,C;;;AAAdN,cAAAA,K;;mDACkBd,gBAAgB,CAACa,MAAjB,E;;;AAAlBE,cAAAA,S;AACAC,cAAAA,I,GAAOF,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,C;;AACb,kBAAIE,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AACnBR,gBAAAA,GAAG,CAACS,MAAJ,CAAW,0CAAX,EAAuD;AACrDF,kBAAAA,IAAI,EAAJA,IADqD;AAErDD,kBAAAA,SAAS,EAATA,SAFqD;AAGrDJ,kBAAAA,IAAI,EAAJA;AAHqD,iBAAvD;AAKD,eAND,MAMO;AACLF,gBAAAA,GAAG,CAACS,MAAJ,CAAW,0CAAX,EAAuD;AACrDF,kBAAAA,IAAI,EAAJA,IADqD;AAErDD,kBAAAA,SAAS,EAATA,SAFqD;AAGrDJ,kBAAAA,IAAI,EAAJA;AAHqD,iBAAvD;AAKD;;gDACM,C;;;;;;;;;;;;gDAKFF,GAAG,CAACU,QAAJ,CAAa,GAAb,C;;;;;;;;;;;2BAISX,G,EAAKC,G;;;;;;oBAErBD,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,OAA9B,IACAJ,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,W;;;;;AAExBQ,cAAAA,E,GAAOZ,GAAG,CAACa,M,CAAXD,E;;AACN,kBAAI,CAACG,MAAM,CAACH,EAAD,CAAX,EAAiB;AACfX,gBAAAA,GAAG,CAACU,QAAJ,CAAa,wCAAb;AACD;;;;mDAEiBrB,cAAc,UAAd,CAAsBsB,EAAtB,C;;;AAAZI,cAAAA,G;;AACJ,kBAAIA,GAAJ,EAAS;AACPf,gBAAAA,GAAG,CAACU,QAAJ,CAAa,sCAAb;AACD,eAFD,MAEO;AACLV,gBAAAA,GAAG,CAACU,QAAJ,CAAa,qCAAb;AACD;;;;;;;;;;;;;;gDAMIV,GAAG,CAACU,QAAJ,CAAa,GAAb,C;;;;;;;;;;;2BAGSX,G,EAAKC,G;;;;;;;AAEjBW,cAAAA,E,GAAKZ,GAAG,CAACa,MAAJ,CAAWD,E;AAChBK,cAAAA,O,GAAUjB,GAAG,CAACkB,IAAJ,CAASD,O;;AACvB,kBAAIjB,GAAG,CAACmB,IAAR,EAAc;AACZF,gBAAAA,OAAO,GAAGnB,CAAC,GAAG,GAAJ,GAAUE,GAAG,CAACmB,IAAJ,CAASC,YAA7B;AACD;;AACGC,cAAAA,O,qBAAerB,GAAG,CAACkB,I;AAAMD,gBAAAA,OAAO,EAAPA;;;mDACR3B,cAAc,CAACgC,MAAf,CAAsBC,QAAQ,CAACX,EAAD,CAA9B,EAAoCS,OAApC,C;;;AAAfG,cAAAA,M;;AACN,kBAAI,CAACA,MAAL,EAAa;AACXvB,gBAAAA,GAAG,CAACU,QAAJ,CAAa,qBAAb;AACD,eAFD,MAEO;AACLV,gBAAAA,GAAG,CAACU,QAAJ,CAAa,qBAAb;AACD;;;;;;;;gDAEMV,GAAG,CAACU,QAAJ,CAAa,gBAAb,C;;;;;;;;;;;wBAIMX,G,EAAKC,G;;;;;;AAChBgB,cAAAA,O,GAAU,E;;AACd,kBAAIjB,GAAG,CAACmB,IAAR,EAAc;AACZF,gBAAAA,OAAO,GAAGnB,CAAC,GAAG,GAAJ,GAAUE,GAAG,CAACmB,IAAJ,CAASC,YAA7B;AACD;;AACGK,cAAAA,W,GAAczB,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBS,E;AAC/BJ,cAAAA,I,qBAAYR,GAAG,CAACkB,I;AAAMD,gBAAAA,OAAO,EAAPA,O;AAASQ,gBAAAA,WAAW,EAAXA;;AACnCC,cAAAA,OAAO,CAACC,GAAR,CAAYnB,IAAZ;;;mDAEwBlB,cAAc,CAACsC,IAAf,CAAoBpB,IAApB,C;;;AAAhBqB,cAAAA,O;;AACN,kBAAIA,OAAO,KAAK,CAAhB,EAAmB;AACjB5B,gBAAAA,GAAG,CAACU,QAAJ,CAAa,6CAAb;AACD,eAFD,MAEOV,GAAG,CAACU,QAAJ,CAAa,mDAAb;;;;;;;;;;;;;;;;;;;;;AAObmB,MAAM,CAACC,OAAP,GAAiBhC,iBAAjB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
      "sourcesContent": [
        "var baiVietService = require(\"../services/baivietService\");\r\nvar chuyenmucService =require(\"../services/chuyenmucService\");\r\n\r\nlet d = new Date();\r\nd.getDate();\r\nd.getMonth();\r\nd.getFullYear();\r\nlet n = d.getDate() + d.getMonth() + d.getFullYear();\r\n\r\nclass baiVietController {\r\n  static async getAll(req, res) {\r\n    if (\r\n      req.session.user.quyenhang == \"Admin\" ||\r\n      req.session.user.quyenhang == \"Nhân Viên\"\r\n    ) {\r\n      try {\r\n        const user = req.session.user;\r\n        const data1 = await baiVietService.getAll();\r\n        const chuyenmuc = await chuyenmucService.getAll();\r\n        let data = data1[0];\r\n        if (data.length > 0) {\r\n          res.render(\"../apps/views/admin/baiviet/listBaiViet.ejs\", {\r\n            data,\r\n            user,\r\n            chuyenmuc\r\n          });\r\n        } else {\r\n          res.render(\"../apps/views/admin/baiviet/listBaiViet.ejs\", {\r\n            data,\r\n            user,\r\n            chuyenmuc\r\n          });\r\n        }\r\n        return 0;\r\n      } catch (error) {\r\n        return error;\r\n      }\r\n    } else {\r\n      return res.redirect(\"/\");\r\n    }\r\n  }\r\n\r\n  static async getAdd(req, res) {\r\n    if (\r\n      req.session.user.quyenhang == \"Admin\" ||\r\n      req.session.user.quyenhang == \"Nhân Viên\"\r\n    ) {\r\n      try {\r\n        const user = req.session.user;\r\n        const chuyenmuc = await chuyenmucService.getAll();\r\n        if (chuyenmuc.length > 0) {\r\n          res.render(\"../apps/views/admin/baiviet/addbaiviet.ejs\", {\r\n            user,\r\n            chuyenmuc\r\n          });\r\n        } else {\r\n          res.render(\"../apps/views/admin/baiviet/addbaiviet.ejs\", {\r\n            user,\r\n            chuyenmuc\r\n          });\r\n        }\r\n        return 0;\r\n      } catch (error) {\r\n        return error;\r\n      }\r\n    } else {\r\n      return res.redirect(\"/\");\r\n    }\r\n  }\r\n  static async getUpdate(req, res) {\r\n    if (\r\n      req.session.user.quyenhang == \"Admin\" ||\r\n      req.session.user.quyenhang == \"Nhân Viên\"\r\n    ) {\r\n      try {\r\n        const user = req.session.user;\r\n        const id = req.params.id;\r\n        const data1 = await baiVietService.getA(id);\r\n        const chuyenmuc = await chuyenmucService.getAll();\r\n        const data = data1[0][0]; \r\n        if (data.length > 0) {\r\n          res.render(\"../apps/views/admin/baiviet/updateBV.ejs\", {\r\n            data,\r\n            chuyenmuc,\r\n            user\r\n          });\r\n        } else {\r\n          res.render(\"../apps/views/admin/baiviet/updateBV.ejs\", {\r\n            data,\r\n            chuyenmuc,\r\n            user\r\n          });\r\n        }\r\n        return 0;\r\n      } catch (error) {\r\n        return error;\r\n      }\r\n    } else {\r\n      return res.redirect(\"/\");\r\n    }\r\n  }\r\n\r\n  static async Delete(req, res) {\r\n    if (\r\n      req.session.user.quyenhang == \"Admin\" ||\r\n      req.session.user.quyenhang == \"Nhân Viên\"\r\n    ) {\r\n      let { id } = req.params;\r\n      if (!Number(id)) {\r\n        res.redirect(\"/admin/baiviet?kq=0&mes=Lỗi dữ liệu!!!\");\r\n      }\r\n      try {\r\n        let Xoa = await baiVietService.delete(id);\r\n        if (Xoa) {\r\n          res.redirect(\"/admin/baiviet?kq=1&mes=Thành Công!!\");\r\n        } else {\r\n          res.redirect(\"/admin/baiviet?kq=0&mes=Thất Bại!!!\");\r\n        }\r\n        return;\r\n      } catch (error) {\r\n        return error;\r\n      }\r\n    } else {\r\n      return res.redirect(\"/\");\r\n    }\r\n  }\r\n  static async update(req, res) {\r\n    try {\r\n      let id = req.params.id; \r\n      let hinhanh = req.body.hinhanh;\r\n      if (req.file) {\r\n        hinhanh = n + \"-\" + req.file.originalname;\r\n      }\r\n      let altered = { ...req.body, hinhanh };\r\n      const update = await baiVietService.Update(parseInt(id), altered);\r\n      if (!update) {\r\n        res.redirect(\"/admin/baiviet?kq=0\");\r\n      } else {\r\n        res.redirect(\"/admin/baiviet?kq=1\");\r\n      }\r\n    } catch (error) {\r\n      return res.redirect(\"/admin/baiviet\");\r\n    }\r\n  }\r\n\r\n  static async add(req, res) {\r\n    let hinhanh = \"\";\r\n    if (req.file) {\r\n      hinhanh = n + \"-\" + req.file.originalname;\r\n    }\r\n    let id_taikhoan = req.session.user.id;\r\n    let data = { ...req.body, hinhanh, id_taikhoan };\r\n    console.log(data);\r\n    try {\r\n      const created = await baiVietService.Save(data);\r\n      if (created !== 0) {\r\n        res.redirect(\"/admin/baiviet?kq=1&mes=Thêm thành công !!!\");\r\n      } else res.redirect(\"/admin/baiviet?kq=0&mes=Thêm không thành công !!!\");\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = baiVietController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1586966126281
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\routers\\\\chuyenmucRouter.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\chuyenmucRouter.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\chuyenmucRouter.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers\\chuyenmucRouter.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
        "sourceFileName": "chuyenmucRouter.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar Router = require(\"express\");\n\nvar chuyenmucController = require(\"../controllers/chuyenmucController\");\n\nvar router = Router();\nrouter.route(\"/\").get(chuyenmucController.getAll).post(chuyenmucController.add);\nrouter.route(\"/:id\").post(chuyenmucController.update);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNodXllbm11Y1JvdXRlci5qcyJdLCJuYW1lcyI6WyJSb3V0ZXIiLCJyZXF1aXJlIiwiY2h1eWVubXVjQ29udHJvbGxlciIsInJvdXRlciIsInJvdXRlIiwiZ2V0IiwiZ2V0QWxsIiwicG9zdCIsImFkZCIsInVwZGF0ZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBS0EsTUFBTSxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUFyQjs7QUFDQSxJQUFJQyxtQkFBbUIsR0FBRUQsT0FBTyxDQUFDLG9DQUFELENBQWhDOztBQUVBLElBQU1FLE1BQU0sR0FBR0gsTUFBTSxFQUFyQjtBQUVBRyxNQUFNLENBQ0hDLEtBREgsQ0FDUyxHQURULEVBRUdDLEdBRkgsQ0FFT0gsbUJBQW1CLENBQUNJLE1BRjNCLEVBR0dDLElBSEgsQ0FHUUwsbUJBQW1CLENBQUNNLEdBSDVCO0FBSUFMLE1BQU0sQ0FDSEMsS0FESCxDQUNTLE1BRFQsRUFFR0csSUFGSCxDQUVRTCxtQkFBbUIsQ0FBQ08sTUFGNUI7QUFHQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCUixNQUFqQiIsInNvdXJjZVJvb3QiOiJEOlxcTHVhblZhblxcTHVhblZhbkQyXFx0cnVuZ3RhbV9sYW40XFxhcHBzXFxyb3V0ZXJzIiwic291cmNlc0NvbnRlbnQiOlsidmFyICBSb3V0ZXIgID1yZXF1aXJlKFwiZXhwcmVzc1wiKTtcclxudmFyIGNodXllbm11Y0NvbnRyb2xsZXIgPXJlcXVpcmUoXCIuLi9jb250cm9sbGVycy9jaHV5ZW5tdWNDb250cm9sbGVyXCIpO1xyXG5cclxuY29uc3Qgcm91dGVyID0gUm91dGVyKCk7XHJcblxyXG5yb3V0ZXJcclxuICAucm91dGUoXCIvXCIpXHJcbiAgLmdldChjaHV5ZW5tdWNDb250cm9sbGVyLmdldEFsbClcclxuICAucG9zdChjaHV5ZW5tdWNDb250cm9sbGVyLmFkZCk7XHJcbnJvdXRlclxyXG4gIC5yb3V0ZShcIi86aWRcIikgIFxyXG4gIC5wb3N0KGNodXllbm11Y0NvbnRyb2xsZXIudXBkYXRlKTtcclxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "chuyenmucRouter.js"
      ],
      "names": [
        "Router",
        "require",
        "chuyenmucController",
        "router",
        "route",
        "get",
        "getAll",
        "post",
        "add",
        "update",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAKA,MAAM,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,mBAAmB,GAAED,OAAO,CAAC,oCAAD,CAAhC;;AAEA,IAAME,MAAM,GAAGH,MAAM,EAArB;AAEAG,MAAM,CACHC,KADH,CACS,GADT,EAEGC,GAFH,CAEOH,mBAAmB,CAACI,MAF3B,EAGGC,IAHH,CAGQL,mBAAmB,CAACM,GAH5B;AAIAL,MAAM,CACHC,KADH,CACS,MADT,EAEGG,IAFH,CAEQL,mBAAmB,CAACO,MAF5B;AAGAC,MAAM,CAACC,OAAP,GAAiBR,MAAjB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\routers",
      "sourcesContent": [
        "var  Router  =require(\"express\");\r\nvar chuyenmucController =require(\"../controllers/chuyenmucController\");\r\n\r\nconst router = Router();\r\n\r\nrouter\r\n  .route(\"/\")\r\n  .get(chuyenmucController.getAll)\r\n  .post(chuyenmucController.add);\r\nrouter\r\n  .route(\"/:id\")  \r\n  .post(chuyenmucController.update);\r\nmodule.exports = router;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1586164762230
  },
  "{\"sourceRoot\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"filename\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\\\\apps\\\\controllers\\\\chuyenmucController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\LuanVan\\\\LuanVanD2\\\\trungtam_lan4\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\chuyenmucController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\chuyenmucController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers\\chuyenmucController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
        "sourceFileName": "chuyenmucController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar chuyenmucService = require(\"../services/chuyenmucService\");\n\nvar d = new Date();\nd.getDate();\nd.getMonth();\nd.getFullYear();\nvar n = d.getDate() + d.getMonth() + d.getFullYear();\n\nvar baiVietController =\n/*#__PURE__*/\nfunction () {\n  function baiVietController() {\n    (0, _classCallCheck2[\"default\"])(this, baiVietController);\n  }\n\n  (0, _createClass2[\"default\"])(baiVietController, null, [{\n    key: \"getAll\",\n    value: function getAll(req, res) {\n      var user, data;\n      return _regenerator[\"default\"].async(function getAll$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(req.session.user.quyenhang == \"Admin\" || req.session.user.quyenhang == \"Nhân Viên\")) {\n                _context.next = 15;\n                break;\n              }\n\n              _context.prev = 1;\n              user = req.session.user;\n              _context.next = 5;\n              return _regenerator[\"default\"].awrap(chuyenmucService.getAll());\n\n            case 5:\n              data = _context.sent;\n\n              if (data.length > 0) {\n                res.render(\"../apps/views/admin/chuyemuc/listchuyenmuc.ejs\", {\n                  data: data,\n                  user: user\n                });\n              } else {\n                res.render(\"../apps/views/admin/chuyemuc/listchuyenmuc.ejs\", {\n                  data: data,\n                  user: user\n                });\n              }\n\n              return _context.abrupt(\"return\", 0);\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](1);\n              return _context.abrupt(\"return\", _context.t0);\n\n            case 13:\n              _context.next = 16;\n              break;\n\n            case 15:\n              return _context.abrupt(\"return\", res.redirect(\"/\"));\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 10]]);\n    }\n  }, {\n    key: \"update\",\n    value: function update(req, res) {\n      var id, altered, update;\n      return _regenerator[\"default\"].async(function update$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              id = req.params.id;\n              altered = _objectSpread({}, req.body);\n              _context2.prev = 2;\n              _context2.next = 5;\n              return _regenerator[\"default\"].awrap(chuyenmucService.Update(id, altered));\n\n            case 5:\n              update = _context2.sent;\n\n              if (!update) {\n                res.redirect(\"/admin/chuyenmuc?kq=0\");\n              } else {\n                res.redirect(\"/admin/chuyenmuc?kq=1\");\n              }\n\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](2);\n              return _context2.abrupt(\"return\", res.redirect(\"/admin/chuyenmuc?kq=0\"));\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[2, 9]]);\n    }\n  }, {\n    key: \"add\",\n    value: function add(req, res) {\n      var data, created;\n      return _regenerator[\"default\"].async(function add$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              data = _objectSpread({}, req.body);\n              _context3.prev = 1;\n              _context3.next = 4;\n              return _regenerator[\"default\"].awrap(chuyenmucService.Save(data));\n\n            case 4:\n              created = _context3.sent;\n\n              if (created) {\n                res.redirect(\"/admin/chuyenmuc?kq=1&mes=Thêm thành công !!!\");\n              } else res.redirect(\"/admin/chuyenmuc?kq=0&mes=Thêm không thành công !!!\");\n\n              _context3.next = 11;\n              break;\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](1);\n              return _context3.abrupt(\"return\", _context3.t0);\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[1, 8]]);\n    }\n  }]);\n  return baiVietController;\n}();\n\nmodule.exports = baiVietController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNodXllbm11Y0NvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsiY2h1eWVubXVjU2VydmljZSIsInJlcXVpcmUiLCJkIiwiRGF0ZSIsImdldERhdGUiLCJnZXRNb250aCIsImdldEZ1bGxZZWFyIiwibiIsImJhaVZpZXRDb250cm9sbGVyIiwicmVxIiwicmVzIiwic2Vzc2lvbiIsInVzZXIiLCJxdXllbmhhbmciLCJnZXRBbGwiLCJkYXRhIiwibGVuZ3RoIiwicmVuZGVyIiwicmVkaXJlY3QiLCJpZCIsInBhcmFtcyIsImFsdGVyZWQiLCJib2R5IiwiVXBkYXRlIiwidXBkYXRlIiwiU2F2ZSIsImNyZWF0ZWQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSUEsZ0JBQWdCLEdBQUdDLE9BQU8sQ0FBQyw4QkFBRCxDQUE5Qjs7QUFFQSxJQUFJQyxDQUFDLEdBQUcsSUFBSUMsSUFBSixFQUFSO0FBQ0FELENBQUMsQ0FBQ0UsT0FBRjtBQUNBRixDQUFDLENBQUNHLFFBQUY7QUFDQUgsQ0FBQyxDQUFDSSxXQUFGO0FBQ0EsSUFBSUMsQ0FBQyxHQUFHTCxDQUFDLENBQUNFLE9BQUYsS0FBY0YsQ0FBQyxDQUFDRyxRQUFGLEVBQWQsR0FBNkJILENBQUMsQ0FBQ0ksV0FBRixFQUFyQzs7SUFFTUUsaUI7Ozs7Ozs7OzsyQkFDZ0JDLEcsRUFBS0MsRzs7Ozs7O29CQUVyQkQsR0FBRyxDQUFDRSxPQUFKLENBQVlDLElBQVosQ0FBaUJDLFNBQWpCLElBQThCLE9BQTlCLElBQ0FKLEdBQUcsQ0FBQ0UsT0FBSixDQUFZQyxJQUFaLENBQWlCQyxTQUFqQixJQUE4QixXOzs7Ozs7QUFHdEJELGNBQUFBLEksR0FBT0gsR0FBRyxDQUFDRSxPQUFKLENBQVlDLEk7O21EQUNOWixnQkFBZ0IsQ0FBQ2MsTUFBakIsRTs7O0FBQWJDLGNBQUFBLEk7O0FBQ04sa0JBQUlBLElBQUksQ0FBQ0MsTUFBTCxHQUFjLENBQWxCLEVBQXFCO0FBQ25CTixnQkFBQUEsR0FBRyxDQUFDTyxNQUFKLENBQVcsZ0RBQVgsRUFBNkQ7QUFDM0RGLGtCQUFBQSxJQUFJLEVBQUpBLElBRDJEO0FBRTNESCxrQkFBQUEsSUFBSSxFQUFKQTtBQUYyRCxpQkFBN0Q7QUFJRCxlQUxELE1BS087QUFDTEYsZ0JBQUFBLEdBQUcsQ0FBQ08sTUFBSixDQUFXLGdEQUFYLEVBQTZEO0FBQzNERixrQkFBQUEsSUFBSSxFQUFKQSxJQUQyRDtBQUUzREgsa0JBQUFBLElBQUksRUFBSkE7QUFGMkQsaUJBQTdEO0FBSUQ7OytDQUNNLEM7Ozs7Ozs7Ozs7OzsrQ0FLRkYsR0FBRyxDQUFDUSxRQUFKLENBQWEsR0FBYixDOzs7Ozs7Ozs7OzsyQkFJU1QsRyxFQUFLQyxHOzs7Ozs7QUFDbkJTLGNBQUFBLEUsR0FBS1YsR0FBRyxDQUFDVyxNQUFKLENBQVdELEU7QUFDaEJFLGNBQUFBLE8scUJBQWVaLEdBQUcsQ0FBQ2EsSTs7O21EQUVBdEIsZ0JBQWdCLENBQUN1QixNQUFqQixDQUF3QkosRUFBeEIsRUFBNEJFLE9BQTVCLEM7OztBQUFmRyxjQUFBQSxNOztBQUNOLGtCQUFJLENBQUNBLE1BQUwsRUFBYTtBQUNYZCxnQkFBQUEsR0FBRyxDQUFDUSxRQUFKLENBQWEsdUJBQWI7QUFDRCxlQUZELE1BRU87QUFDTFIsZ0JBQUFBLEdBQUcsQ0FBQ1EsUUFBSixDQUFhLHVCQUFiO0FBQ0Q7Ozs7Ozs7O2dEQUVNUixHQUFHLENBQUNRLFFBQUosQ0FBYSx1QkFBYixDOzs7Ozs7Ozs7Ozt3QkFJTVQsRyxFQUFLQyxHOzs7Ozs7QUFDaEJLLGNBQUFBLEkscUJBQVlOLEdBQUcsQ0FBQ2EsSTs7O21EQUVJdEIsZ0JBQWdCLENBQUN5QixJQUFqQixDQUFzQlYsSUFBdEIsQzs7O0FBQWhCVyxjQUFBQSxPOztBQUNOLGtCQUFJQSxPQUFKLEVBQWE7QUFDWGhCLGdCQUFBQSxHQUFHLENBQUNRLFFBQUosQ0FBYSwrQ0FBYjtBQUNELGVBRkQsTUFHRVIsR0FBRyxDQUFDUSxRQUFKLENBQWEscURBQWI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQU9SUyxNQUFNLENBQUNDLE9BQVAsR0FBaUJwQixpQkFBakIiLCJzb3VyY2VSb290IjoiRDpcXEx1YW5WYW5cXEx1YW5WYW5EMlxcdHJ1bmd0YW1fbGFuNFxcYXBwc1xcY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgY2h1eWVubXVjU2VydmljZSA9IHJlcXVpcmUoXCIuLi9zZXJ2aWNlcy9jaHV5ZW5tdWNTZXJ2aWNlXCIpO1xyXG5cclxubGV0IGQgPSBuZXcgRGF0ZSgpO1xyXG5kLmdldERhdGUoKTtcclxuZC5nZXRNb250aCgpO1xyXG5kLmdldEZ1bGxZZWFyKCk7XHJcbmxldCBuID0gZC5nZXREYXRlKCkgKyBkLmdldE1vbnRoKCkgKyBkLmdldEZ1bGxZZWFyKCk7XHJcblxyXG5jbGFzcyBiYWlWaWV0Q29udHJvbGxlciB7XHJcbiAgc3RhdGljIGFzeW5jIGdldEFsbChyZXEsIHJlcykge1xyXG4gICAgaWYgKFxyXG4gICAgICByZXEuc2Vzc2lvbi51c2VyLnF1eWVuaGFuZyA9PSBcIkFkbWluXCIgfHxcclxuICAgICAgcmVxLnNlc3Npb24udXNlci5xdXllbmhhbmcgPT0gXCJOaMOibiBWacOqblwiXHJcbiAgICApIHtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCB1c2VyID0gcmVxLnNlc3Npb24udXNlcjtcclxuICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgY2h1eWVubXVjU2VydmljZS5nZXRBbGwoKTtcclxuICAgICAgICBpZiAoZGF0YS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICByZXMucmVuZGVyKFwiLi4vYXBwcy92aWV3cy9hZG1pbi9jaHV5ZW11Yy9saXN0Y2h1eWVubXVjLmVqc1wiLCB7XHJcbiAgICAgICAgICAgIGRhdGEsXHJcbiAgICAgICAgICAgIHVzZXJcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICByZXMucmVuZGVyKFwiLi4vYXBwcy92aWV3cy9hZG1pbi9jaHV5ZW11Yy9saXN0Y2h1eWVubXVjLmVqc1wiLCB7XHJcbiAgICAgICAgICAgIGRhdGEsXHJcbiAgICAgICAgICAgIHVzZXJcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gMDtcclxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICByZXR1cm4gZXJyb3I7XHJcbiAgICAgIH1cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiByZXMucmVkaXJlY3QoXCIvXCIpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc3RhdGljIGFzeW5jIHVwZGF0ZShyZXEsIHJlcykge1xyXG4gICAgbGV0IGlkID0gcmVxLnBhcmFtcy5pZDtcclxuICAgIGxldCBhbHRlcmVkID0geyAuLi5yZXEuYm9keSB9O1xyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc3QgdXBkYXRlID0gYXdhaXQgY2h1eWVubXVjU2VydmljZS5VcGRhdGUoaWQsIGFsdGVyZWQpO1xyXG4gICAgICBpZiAoIXVwZGF0ZSkge1xyXG4gICAgICAgIHJlcy5yZWRpcmVjdChcIi9hZG1pbi9jaHV5ZW5tdWM/a3E9MFwiKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICByZXMucmVkaXJlY3QoXCIvYWRtaW4vY2h1eWVubXVjP2txPTFcIik7XHJcbiAgICAgIH1cclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHJldHVybiByZXMucmVkaXJlY3QoXCIvYWRtaW4vY2h1eWVubXVjP2txPTBcIik7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgYXN5bmMgYWRkKHJlcSwgcmVzKSB7XHJcbiAgICBsZXQgZGF0YSA9IHsgLi4ucmVxLmJvZHkgfTtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IGNyZWF0ZWQgPSBhd2FpdCBjaHV5ZW5tdWNTZXJ2aWNlLlNhdmUoZGF0YSk7XHJcbiAgICAgIGlmIChjcmVhdGVkKSB7XHJcbiAgICAgICAgcmVzLnJlZGlyZWN0KFwiL2FkbWluL2NodXllbm11Yz9rcT0xJm1lcz1UaMOqbSB0aMOgbmggY8O0bmcgISEhXCIpO1xyXG4gICAgICB9IGVsc2VcclxuICAgICAgICByZXMucmVkaXJlY3QoXCIvYWRtaW4vY2h1eWVubXVjP2txPTAmbWVzPVRow6ptIGtow7RuZyB0aMOgbmggY8O0bmcgISEhXCIpO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgcmV0dXJuIGVycm9yO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBiYWlWaWV0Q29udHJvbGxlcjtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "chuyenmucController.js"
      ],
      "names": [
        "chuyenmucService",
        "require",
        "d",
        "Date",
        "getDate",
        "getMonth",
        "getFullYear",
        "n",
        "baiVietController",
        "req",
        "res",
        "session",
        "user",
        "quyenhang",
        "getAll",
        "data",
        "length",
        "render",
        "redirect",
        "id",
        "params",
        "altered",
        "body",
        "Update",
        "update",
        "Save",
        "created",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;;;;;;;AAAA,IAAIA,gBAAgB,GAAGC,OAAO,CAAC,8BAAD,CAA9B;;AAEA,IAAIC,CAAC,GAAG,IAAIC,IAAJ,EAAR;AACAD,CAAC,CAACE,OAAF;AACAF,CAAC,CAACG,QAAF;AACAH,CAAC,CAACI,WAAF;AACA,IAAIC,CAAC,GAAGL,CAAC,CAACE,OAAF,KAAcF,CAAC,CAACG,QAAF,EAAd,GAA6BH,CAAC,CAACI,WAAF,EAArC;;IAEME,iB;;;;;;;;;2BACgBC,G,EAAKC,G;;;;;;oBAErBD,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,OAA9B,IACAJ,GAAG,CAACE,OAAJ,CAAYC,IAAZ,CAAiBC,SAAjB,IAA8B,W;;;;;;AAGtBD,cAAAA,I,GAAOH,GAAG,CAACE,OAAJ,CAAYC,I;;mDACNZ,gBAAgB,CAACc,MAAjB,E;;;AAAbC,cAAAA,I;;AACN,kBAAIA,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AACnBN,gBAAAA,GAAG,CAACO,MAAJ,CAAW,gDAAX,EAA6D;AAC3DF,kBAAAA,IAAI,EAAJA,IAD2D;AAE3DH,kBAAAA,IAAI,EAAJA;AAF2D,iBAA7D;AAID,eALD,MAKO;AACLF,gBAAAA,GAAG,CAACO,MAAJ,CAAW,gDAAX,EAA6D;AAC3DF,kBAAAA,IAAI,EAAJA,IAD2D;AAE3DH,kBAAAA,IAAI,EAAJA;AAF2D,iBAA7D;AAID;;+CACM,C;;;;;;;;;;;;+CAKFF,GAAG,CAACQ,QAAJ,CAAa,GAAb,C;;;;;;;;;;;2BAIST,G,EAAKC,G;;;;;;AACnBS,cAAAA,E,GAAKV,GAAG,CAACW,MAAJ,CAAWD,E;AAChBE,cAAAA,O,qBAAeZ,GAAG,CAACa,I;;;mDAEAtB,gBAAgB,CAACuB,MAAjB,CAAwBJ,EAAxB,EAA4BE,OAA5B,C;;;AAAfG,cAAAA,M;;AACN,kBAAI,CAACA,MAAL,EAAa;AACXd,gBAAAA,GAAG,CAACQ,QAAJ,CAAa,uBAAb;AACD,eAFD,MAEO;AACLR,gBAAAA,GAAG,CAACQ,QAAJ,CAAa,uBAAb;AACD;;;;;;;;gDAEMR,GAAG,CAACQ,QAAJ,CAAa,uBAAb,C;;;;;;;;;;;wBAIMT,G,EAAKC,G;;;;;;AAChBK,cAAAA,I,qBAAYN,GAAG,CAACa,I;;;mDAEItB,gBAAgB,CAACyB,IAAjB,CAAsBV,IAAtB,C;;;AAAhBW,cAAAA,O;;AACN,kBAAIA,OAAJ,EAAa;AACXhB,gBAAAA,GAAG,CAACQ,QAAJ,CAAa,+CAAb;AACD,eAFD,MAGER,GAAG,CAACQ,QAAJ,CAAa,qDAAb;;;;;;;;;;;;;;;;;;;;;AAORS,MAAM,CAACC,OAAP,GAAiBpB,iBAAjB",
      "sourceRoot": "D:\\LuanVan\\LuanVanD2\\trungtam_lan4\\apps\\controllers",
      "sourcesContent": [
        "var chuyenmucService = require(\"../services/chuyenmucService\");\r\n\r\nlet d = new Date();\r\nd.getDate();\r\nd.getMonth();\r\nd.getFullYear();\r\nlet n = d.getDate() + d.getMonth() + d.getFullYear();\r\n\r\nclass baiVietController {\r\n  static async getAll(req, res) {\r\n    if (\r\n      req.session.user.quyenhang == \"Admin\" ||\r\n      req.session.user.quyenhang == \"Nhân Viên\"\r\n    ) {\r\n      try {\r\n        const user = req.session.user;\r\n        const data = await chuyenmucService.getAll();\r\n        if (data.length > 0) {\r\n          res.render(\"../apps/views/admin/chuyemuc/listchuyenmuc.ejs\", {\r\n            data,\r\n            user\r\n          });\r\n        } else {\r\n          res.render(\"../apps/views/admin/chuyemuc/listchuyenmuc.ejs\", {\r\n            data,\r\n            user\r\n          });\r\n        }\r\n        return 0;\r\n      } catch (error) {\r\n        return error;\r\n      }\r\n    } else {\r\n      return res.redirect(\"/\");\r\n    }\r\n  }\r\n\r\n  static async update(req, res) {\r\n    let id = req.params.id;\r\n    let altered = { ...req.body };\r\n    try {\r\n      const update = await chuyenmucService.Update(id, altered);\r\n      if (!update) {\r\n        res.redirect(\"/admin/chuyenmuc?kq=0\");\r\n      } else {\r\n        res.redirect(\"/admin/chuyenmuc?kq=1\");\r\n      }\r\n    } catch (error) {\r\n      return res.redirect(\"/admin/chuyenmuc?kq=0\");\r\n    }\r\n  }\r\n\r\n  static async add(req, res) {\r\n    let data = { ...req.body };\r\n    try {\r\n      const created = await chuyenmucService.Save(data);\r\n      if (created) {\r\n        res.redirect(\"/admin/chuyenmuc?kq=1&mes=Thêm thành công !!!\");\r\n      } else\r\n        res.redirect(\"/admin/chuyenmuc?kq=0&mes=Thêm không thành công !!!\");\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = baiVietController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1586164777101
  }
}